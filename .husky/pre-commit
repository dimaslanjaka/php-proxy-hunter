#!/bin/sh

# Check if Git LFS is installed
command -v git-lfs >/dev/null 2>&1 || {
  echo >&2 "\nThis repository is configured for Git LFS but 'git-lfs' was not found on your path. \
If you no longer wish to use Git LFS, remove this hook by deleting the 'post-commit' file in the hooks directory \
(set by 'core.hookspath'; usually '.git/hooks').\n"
  exit 2
}

# Run git LFS post-commit (optional)
git lfs post-commit "$@"

# Determine the current script directory and project directory
SCRIPT_DIR=$(dirname "$(realpath "$0")")
PROJECT_DIR=$(dirname "$SCRIPT_DIR")
echo "Current script directory: $PROJECT_DIR"

# Get a list of staged files
STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACM)

# Initialize variables
PYTHON_FILES_FOUND=0
PHP_FILES_FOUND=0

# Check for files with specific extensions
for FILE in $STAGED_FILES; do
  case "$FILE" in
    *.py)
      PYTHON_FILES_FOUND=1
      echo "Python file detected: $FILE"
      ;;
    *.php)
      PHP_FILES_FOUND=1
      echo "PHP file detected: $FILE"
      ;;
  esac
done

# Run create-file-hashes if applicable
if [ "$PYTHON_FILES_FOUND" -eq 1 ] || [ "$PHP_FILES_FOUND" -eq 1 ]; then
  HASH_SCRIPT="$PROJECT_DIR/bin/create-file-hashes"
  if [ -x "$HASH_SCRIPT" ]; then
    bash "$HASH_SCRIPT" || {
      echo "Failed to create file hashes"
      exit 1
    }
  else
    echo "create-file-hashes script not found or not executable: $HASH_SCRIPT"
    exit 1
  fi
fi

# Run php-cs-fixer if PHP files were changed
if [ "$PHP_FILES_FOUND" -eq 1 ]; then
  git status --porcelain | grep -e '^[AM].*\.php$' | cut -c 4- | while read -r line; do
    php "$PROJECT_DIR/composer.phar" exec php-cs-fixer fix --verbose "$line"
    git add "$line"
  done
fi

# Run lint-staged
npx lint-staged || {
  echo "Lint-staged failed"
  exit 1
}

# Optional: Auto format Python files
# python "$SCRIPT_DIR/python-autopep8.py" || {
#   echo "Autopep8 formatting failed"
#   exit 1
# }

exit 0

##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
# folder /etc/nginx/sites-enabled
# to validate config `sudo nginx -t`
server {
  listen 80 default_server;
  listen [::]:80 default_server;

  # SSL configuration
  #
  # listen 443 ssl default_server;
  # listen [::]:443 ssl default_server;
  #
  # Note: You should disable gzip for SSL traffic.
  # See: https://bugs.debian.org/773332
  #
  # Read up on ssl_ciphers to ensure a secure configuration.
  # See: https://bugs.debian.org/765782
  #
  # Self signed certs generated by the ssl-cert package
  # Don't use them in a production server!
  #
  # include snippets/snakeoil.conf;

  root /var/www/html;

  # Add index.php to the list if you are using PHP
  index index.html index.htm index.nginx-debian.html index.php;

  # server_name _;
  server_name YOUR.DOMAIN.COM;

  location / {
    # First attempt to serve request as file, then
    # as directory, then fall back to displaying a 404.
    try_files $uri $uri/ =404;
  }

  # pass PHP scripts to FastCGI server
  #
  location ~ \.php$ {
    include snippets/fastcgi-php.conf;

    # With php-fpm (or other unix sockets):
    fastcgi_pass unix:/var/run/php/php7.2-fpm.sock;
    # With php-cgi (or other tcp sockets):
    # fastcgi_pass 127.0.0.1:9000;
  }

  # disable directory listing
  autoindex off;

  # Set the maximum allowed size of the client request body
  client_max_body_size 50M;

  # ignore access to these file patterns
  location ~ \.(env|gitignore|gitattributes|gitmodules|sqlite|git|htaccess)$ {
    deny all;
  }

  # Allow access to robots.txt and sitemap.txt
  location = /robots.txt {
    allow all;
    log_not_found off;
    access_log off;
  }

  location = /sitemap.txt {
    allow all;
    log_not_found off;
    access_log off;
  }

  # Restrict access to other .txt files
  location ~ \.txt$ {
    # Always allow these patterns
    location ~* ^/(robots|sitemap)\.txt$ {
      return 200;
    }

    # if ($http_origin !~ "webmanajemen\.com") {
    #   return 403;
    # }

    # Validate Referer header
    # if ($http_referer !~ "webmanajemen\.com") {
    #   return 403;
    # }

    # Allow access if the _ga cookie is present
    # if ($http_cookie !~* _ga) {
    #   return 403;
    # }

    # Allow CORS from specific origin
    # add_header Access-Control-Allow-Origin "https://webmanajemen.com";
    # add_header Access-Control-Allow-Methods "GET, OPTIONS";

    # Disallow text file access
    return 403;
  }

  # restrict python access
  location ~ \.py$ {
    return 403;
  }

  # Deny access to all .json files
  location ~ \.json$ {
    deny all;
  }

  # Allow access to status.json
  location = /status.json {
    allow all;
    # Set cache-control for 5 mins
    add_header Cache-Control "public, max-age=300";
  }

  location /tmp {
    if ($host = "sh.webmanajemen.com" ) {
      return 404;
    }
  }

  location /tests {
    if ($host = "sh.webmanajemen.com" ) {
      return 404;
    }
  }

  location ~ /tmp/.*\.lock$ {
    allow all;
  }

  # Skip caching on html files
  location ~ \.html$ {
    add_header Cache-Control "no-cache, no-store, must-revalidate";
    add_header Pragma "no-cache";
    add_header Expires "0";
  }
}

# another server configuration (unused)
server {
  listen 8880;
  listen [::]:8880;

  server_name sh.webmanajemen.com;

  location / {
    # local listen port
    proxy_pass http://127.0.0.1:8080/;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Port $server_port;
    # proxy_set_header X-Forwarded-Proto https;
    proxy_set_header Host $http_host;
    proxy_redirect off;
    proxy_connect_timeout 240;
    proxy_send_timeout 240;
    proxy_read_timeout 240;
  }
}

# django server configuration (unused)
# python manage.py runserver 0.0.0.0:8001

server {
    listen 8000;
    server_name sh.webmanajemen.com;

    location / {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass http://unix:/var/www/html/gunicorn.sock;
    }

    location /static/ {
        alias /var/www/html/public/static/;
    }

    location /media/ {
        alias /var/www/html/public/media/;
    }
}

# folder /etc/nginx/sites-enabled
server {
  listen 80 default_server;
  listen [::]:80 default_server;

  # SSL configuration
  #
  # listen 443 ssl default_server;
  # listen [::]:443 ssl default_server;
  #
  # Note: You should disable gzip for SSL traffic.
  # See: https://bugs.debian.org/773332
  #
  # Read up on ssl_ciphers to ensure a secure configuration.
  # See: https://bugs.debian.org/765782
  #
  # Self signed certs generated by the ssl-cert package
  # Don't use them in a production server!
  #
  # include snippets/snakeoil.conf;

  root /var/www/html;

  # Add index.php to the list if you are using PHP
  index index.html index.htm index.nginx-debian.html index.php;

  # server_name _;
  server_name YOUR.DOMAIN.COM;

  location / {
    # First attempt to serve request as file, then
    # as directory, then fall back to displaying a 404.
    try_files $uri $uri/ =404;
  }

  # pass PHP scripts to FastCGI server
  #
  location ~ \.php$ {
    include snippets/fastcgi-php.conf;

    # With php-fpm (or other unix sockets):
    fastcgi_pass unix:/var/run/php/php7.2-fpm.sock;
    # With php-cgi (or other tcp sockets):
    # fastcgi_pass 127.0.0.1:9000;
  }

  # disable directory listing
  autoindex off;

  # Set the maximum allowed size of the client request body
  client_max_body_size 50M;

  # ignore access to these file patterns
  location ~ \.(env|gitignore|gitattributes|gitmodules|sqlite|git|htaccess)$ {
    deny all;
  }

  # Allow access to robots.txt and sitemap.txt
  location = /robots.txt {
    allow all;
    log_not_found off;
    access_log off;
  }

  location = /sitemap.txt {
    allow all;
    log_not_found off;
    access_log off;
  }

  # Restrict access to other .txt files
  location ~ \.txt$ {
    # Always allow these patterns
    location ~* ^/(robots|sitemap)\.txt$ {
      return 200;
    }

    # if ($http_origin !~ "webmanajemen\.com") {
    #   return 403;
    # }

    # Validate Referer header
    # if ($http_referer !~ "webmanajemen\.com") {
    #   return 403;
    # }

    # Allow access if the _ga cookie is present
    # if ($http_cookie !~* _ga) {
    #   return 403;
    # }

    # Allow CORS from specific origin
    # add_header Access-Control-Allow-Origin "https://webmanajemen.com";
    # add_header Access-Control-Allow-Methods "GET, OPTIONS";

    # Disallow text file access
    return 403;
  }

  # restrict python access
  location ~ \.py$ {
    return 403;
  }

  # Set cache-control for 5 mins for working.json and status.json
  location ~* ^/(working|status)\.json$ {
    add_header Cache-Control "public, max-age=300";
  }

  # Disallow access to working.json
  location ~ working\.json$ {
    return 403;
  }

  # Skip caching on html files
  location ~ \.html$ {
    add_header Cache-Control "no-cache, no-store, must-revalidate";
    add_header Pragma "no-cache";
    add_header Expires "0";
  }
}

{
  "[html]": {
    "editor.codeActionsOnSave": {
      "source.fixAll": "never",
      "source.organizeImports": "never"
    },
    "editor.suggest.insertMode": "replace"
  },
  "[json]": {
    "editor.codeActionsOnSave": {
      "source.fixAll": "never",
      "source.organizeImports": "never"
    },
    "editor.quickSuggestions": {
      "strings": true
    },
    "editor.suggest.insertMode": "replace"
  },
  "[jsonc]": {
    "editor.codeActionsOnSave": {
      "source.fixAll": "never",
      "source.organizeImports": "never"
    },
    "editor.quickSuggestions": {
      "strings": true
    },
    "editor.suggest.insertMode": "replace"
  },
  "[njk]": {
    "editor.codeActionsOnSave": {
      "source.fixAll": "never",
      "source.organizeImports": "never"
    },
    "editor.suggest.insertMode": "replace"
  },
  "[python]": {
    "editor.codeActionsOnSave": {
      "source.organizeImports": "never"
    },
    "editor.defaultFormatter": "ms-python.black-formatter",
    "editor.formatOnSave": true,
    "editor.insertSpaces": true,
    "editor.tabSize": 4
  },
  "[twig]": {
    "editor.defaultFormatter": "vscode.html-language-features"
  },
  "autopep8.args": ["--ignore", "E401,E402,E211,E501"],
  "code-runner.clearPreviousOutput": true,
  "code-runner.cwd": "${workspaceFolder}",
  "code-runner.executorMap": {
    "javascript": "node",
    "typescript": "node --no-warnings=ExperimentalWarning --loader ts-node/esm",
    "java": "cd $dir && javac $fileName && java $fileNameWithoutExt",
    "c": "cd $dir && gcc $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
    "zig": "zig run",
    "cpp": "cd $dir && g++ $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
    "objective-c": "cd $dir && gcc -framework Cocoa $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
    "php": "php",
    "python": "python -u",
    "perl": "perl",
    "perl6": "perl6",
    "ruby": "ruby",
    "go": "go run",
    "lua": "lua",
    "groovy": "groovy",
    "powershell": "powershell -ExecutionPolicy ByPass -File",
    "bat": "cmd /c",
    "shellscript": "bash",
    "fsharp": "fsi",
    "csharp": "scriptcs",
    "vbscript": "cscript //Nologo",
    "coffeescript": "coffee",
    "scala": "scala",
    "swift": "swift",
    "julia": "julia",
    "crystal": "crystal",
    "ocaml": "ocaml",
    "r": "Rscript",
    "applescript": "osascript",
    "clojure": "lein exec",
    "haxe": "haxe --cwd $dirWithoutTrailingSlash --run $fileNameWithoutExt",
    "rust": "cd $dir && rustc $fileName && $dir$fileNameWithoutExt",
    "racket": "racket",
    "scheme": "csi -script",
    "ahk": "autohotkey",
    "autoit": "autoit3",
    "dart": "dart",
    "pascal": "cd $dir && fpc $fileName && $dir$fileNameWithoutExt",
    "d": "cd $dir && dmd $fileName && $dir$fileNameWithoutExt",
    "haskell": "runghc",
    "nim": "nim compile --verbosity:0 --hints:off --run",
    "lisp": "sbcl --script",
    "kit": "kitc --run",
    "v": "v run",
    "sass": "sass --style expanded",
    "scss": "scss --style expanded",
    "less": "cd $dir && lessc $fileName $fileNameWithoutExt.css",
    "FortranFreeForm": "cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
    "fortran-modern": "cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
    "fortran_fixed-form": "cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
    "fortran": "cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
    "sml": "cd $dir && sml $fileName",
    "mojo": "mojo run",
    "erlang": "escript",
    "spwn": "spwn build",
    "pkl": "cd $dir && pkl eval -f yaml $fileName -o $fileNameWithoutExt.yaml",
    "gleam": "gleam run -m $fileNameWithoutExt"
  },
  "code-runner.executorMapByGlob": {
    "*.electron.js": "cross-env-shell NODE_ENV=development electron -r ts-node/register",
    "*.mjs": "node --no-warnings=ExperimentalWarning",
    "*.py": "py -u",
    "*.test.{cjs,js,mjs,ts}": "npm test --",
    "*Test.php": "phpunit --verbose --debug --testdox --colors=always",
    "electron-*.ts": "cross-env-shell NODE_ENV=development electron -r ts-node/register",
    "rollup.*.{js,cjs,mjs,ts}": "rollup -c"
  },
  "code-runner.ignoreSelection": true,
  "code-runner.respectShebang": true,
  "code-runner.runInTerminal": true,
  "code-runner.saveAllFilesBeforeRun": true,
  "code-runner.saveFileBeforeRun": true,
  "debug.terminal.clearBeforeReusing": true,
  "debug.javascript.terminalOptions": {
    "resolveSourceMapLocations": ["${workspaceFolder}/**", "!**/node_modules/**", "**/node_modules/.vite-temp/**"]
  },
  "editor.codeActionsOnSave": {
    "source.fixAll": "explicit",
    "source.organizeImports": "never"
  },
  "editor.formatOnPaste": false,
  "editor.formatOnSave": false,
  "eslint.debug": true,
  "eslint.enable": true,
  "eslint.format.enable": true,
  "eslint.ignoreUntitled": true,
  "eslint.lintTask.enable": true,
  "eslint.probe": [
    "astro",
    "civet",
    "javascript",
    "javascriptreact",
    "typescript",
    "typescriptreact",
    "html",
    "mdx",
    "vue",
    "markdown",
    "json",
    "jsonc",
    "twig"
  ],
  "eslint.useESLintClass": true,
  "eslint.useFlatConfig": true,
  "files.autoSave": "onWindowChange",
  "files.exclude": {
    "**/.DS_Store": true,
    "**/.cache/**": true,
    "**/.git": true,
    "**/.hg": true,
    "**/.idea/**": true,
    "**/.svn": true,
    "**/Thumbs.db": true,
    "**/bas/": true,
    "**/data/fingerprints": true,
    "**/data/profiles": true,
    "**/data/run": true,
    "**/dist": false,
    "**/.venv": true,
    "**/.yarn": true,
    "**/node_modules": true,
    "**/vendor": true,
    "backups": true
  },
  "files.readonlyInclude": {
    "**/*.sqlite*": true
  },
  "files.watcherExclude": {
    "**/.cache/**": true,
    "**/.idea/**": true,
    "**/.venv/**": true,
    "**/venv/**": true,
    "**/.yarn/**": true,
    "**/dist/**": true,
    "**/profiles/**": true,
    "**/config/**": true,
    "**/databases/**": true,
    "**/node_modules/**": true,
    "src/database.sqlite*": true
  },
  "git.autoStash": true,
  "git.useCommitInputAsStashMessage": true,
  "intelephense.diagnostics.run": "onSave",
  "intelephense.environment.documentRoot": "${workspaceFolder}",
  "intelephense.environment.includePaths": ["${workspaceFolder}/src", "${workspaceFolder}/vendor"],
  "intelephense.environment.phpVersion": "7.4.33",
  "intelephense.files.exclude": [
    "**/.DS_Store/**",
    "**/.git/**",
    "**/.history/**",
    "**/.hg/**",
    "**/.svn/**",
    "**/CVS/**",
    "**/bower_components/**",
    "**/node_modules/**"
  ],
  "intelephense.maxMemory": 1000,
  "intelephense.references.exclude": [],
  "intelephense.rename.exclude": [],
  "isort.args": ["--profile", "black"],
  "javascript.updateImportsOnPaste.enabled": false,
  "js/ts.implicitProjectConfig.checkJs": true,
  "js/ts.implicitProjectConfig.experimentalDecorators": true,
  "js/ts.implicitProjectConfig.module": "ESNext",
  "python.analysis.autoFormatStrings": true,
  "python.analysis.autoImportCompletions": true,
  "python.analysis.diagnosticMode": "openFilesOnly",
  "python.analysis.diagnosticsSource": "Pyright",
  "python.analysis.inlayHints.pytestParameters": true,
  "python.createEnvironment.contentButton": "show",
  "python.defaultInterpreterPath": "${workspaceFolder}/bin/py.cmd",
  "python.envFile": "${workspaceFolder}/.env",
  "python.terminal.activateEnvInCurrentTerminal": true,
  "python.testing.autoTestDiscoverOnSaveEnabled": false,
  "python.testing.autoTestDiscoverOnSavePattern": "**/*test*.py",
  "python.testing.cwd": "${workspaceFolder}",
  "python.testing.debugPort": 8467,
  "python.testing.promptToConfigure": true,
  "python.testing.pytestArgs": [
    "-ra",
    "-v",
    "-s",
    "--cov=src",
    "--cov=data",
    "--cov=django_backend",
    "--cov-report=term-missing",
    "--cov-report=html:coverage/pytest",
    "-k",
    "*test*.py",
    "./tests"
  ],
  "python.testing.pytestEnabled": true,
  "python.testing.unittestEnabled": false,
  "remoteHub.gitProtocol": "http",
  "remoteHub.richNavigation.enabled": true,
  "sftp.debug": true,
  "sftp.printDebugLog": true,
  "search.exclude": {
    "**/.DS_Store": true,
    "**/.cache/**": true,
    "**/.git/**": true,
    "**/.hg/**": true,
    "**/.idea/**": true,
    "**/.svn/**": true,
    "**/Thumbs.db": true,
    "**/backups/**": true,
    "**/bas/**": true,
    "**/config/**": true,
    "**/data/**": true,
    "**/databases/**": true,
    "**/dist/**": true,
    "**/node_modules/**": true,
    "**/profiles/**": true,
    "**/vendor/**": true,
    "**/venv/**": true,
    "**/.venv/**": true,
    "**/.yarn/**": true,
    "**/hash.txt": true,
    "**/coverage/**": true
  },
  "terminal.integrated.defaultProfile.windows": "Command Prompt",
  "terminal.integrated.env.linux": {
    "DEBUG_PKG": "1",
    "ESLINT_USE_FLAT_CONFIG": "true",
    "NUITKA_CACHE_DIR": "${workspaceFolder}/tmp/nuitka-cache",
    "PATH": "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/wsl/lib:${workspaceFolder}/bin:${workspaceFolder}/node_modules/.bin:${workspaceFolder}/vendor/bin"
  },
  "terminal.integrated.env.windows": {
    "DEBUG_PKG": "1",
    "ESLINT_USE_FLAT_CONFIG": "true",
    "NUITKA_CACHE_DIR": "${workspaceFolder}\\tmp\\nuitka-cache",
    "PATH": "${env:PATH};${workspaceFolder}\\bin;${workspaceFolder}\\node_modules\\.bin;${workspaceFolder}\\vendor\\bin"
  },
  "terminal.integrated.profiles.windows": {
    "Cygwin": {
      "args": ["--login", "-i"],
      "env": {
        "CHERE_INVOKING": "1"
      },
      "path": "C:\\cygwin64\\bin\\bash.exe"
    },
    "Command Prompt": {
      "args": [],
      "icon": "terminal-cmd",
      "path": ["${env:windir}\\Sysnative\\cmd.exe", "${env:windir}\\System32\\cmd.exe"]
    },
    "Git Bash": {
      "source": "Git Bash"
    },
    "PowerShell": {
      "icon": "terminal-powershell",
      "source": "PowerShell"
    }
  },
  "testing.displayedCoveragePercent": "minimum",
  "testing.followRunningTest": true,
  "typescript.enablePromptUseWorkspaceTsdk": true,
  "typescript.tsdk": "./node_modules/typescript/lib",
  "typescript.updateImportsOnPaste.enabled": false
}

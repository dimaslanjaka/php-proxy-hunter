name: Deploy GitHub Pages

on:
  workflow_dispatch:
  push:
    paths:
      - 'src/react/**/*'
      - 'src/utils/**/*'
      - 'src/dev/**/*'
      - '.github/workflows/github-pages.yml'
      - '**/vite*'
      - '**/tailwind*'
      - '**/rollup*'
      - '**/postcss*'
  schedule:
    - cron: '0 */6 * * *'

permissions:
  contents: write

concurrency:
  group: github-pages
  cancel-in-progress: false

jobs:
  build-and-deploy:
    if: contains(github.repository, 'php-proxy-hunter') || contains(github.repository, 'android-traffic-exchange')
    runs-on: ubuntu-latest
    env:
      VITE_BACKEND_HOSTNAME_DEV: ${{ secrets.VITE_BACKEND_HOSTNAME_DEV }}
      VITE_BACKEND_HOSTNAME_PROD: ${{ secrets.VITE_BACKEND_HOSTNAME_PROD }}
      GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN || secrets.GITHUB_TOKEN }}
    steps:
      - name: Check VITE secrets presence
        run: |
          if [ -z "$VITE_BACKEND_HOSTNAME_DEV" ]; then echo "VITE_BACKEND_HOSTNAME_DEV is NOT set"; else echo "VITE_BACKEND_HOSTNAME_DEV is set"; fi
          if [ -z "$VITE_BACKEND_HOSTNAME_PROD" ]; then echo "VITE_BACKEND_HOSTNAME_PROD is NOT set"; else echo "VITE_BACKEND_HOSTNAME_PROD is set"; fi

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.ACCESS_TOKEN || secrets.GITHUB_TOKEN }}
          repository: dimaslanjaka/php-proxy-hunter
          fetch-depth: 0

      - name: Checkout gh-pages branch
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          path: .deploy_git
          token: ${{ secrets.ACCESS_TOKEN || secrets.GITHUB_TOKEN }}
          repository: dimaslanjaka/php-proxy-hunter
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'yarn'
          cache-dependency-path: .husky/hash.txt

      - name: Init cache
        uses: actions/cache@v4
        id: cache
        with:
          path: |
            ~/.yarn
            **/node_modules/**
            **/tmp/**
            **/dist/**
          key: ${{ runner.os }}-node-${{ hashFiles('.husky/hash.txt') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ hashFiles('.husky/hash.txt') }}
            ${{ runner.os }}-node-

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install

      - name: Build Project
        run: yarn build
        env:
          VITE_BACKEND_HOSTNAME_DEV: ${{ secrets.VITE_BACKEND_HOSTNAME_DEV }}
          VITE_BACKEND_HOSTNAME_PROD: ${{ secrets.VITE_BACKEND_HOSTNAME_PROD }}

      - name: Build React app
        run: node vite-gh-pages.js
        env:
          VITE_BACKEND_HOSTNAME_DEV: ${{ secrets.VITE_BACKEND_HOSTNAME_DEV }}
          VITE_BACKEND_HOSTNAME_PROD: ${{ secrets.VITE_BACKEND_HOSTNAME_PROD }}

      - name: Build commit message
        id: commitmsg
        run: |
          LATEST_COMMIT=$(git rev-parse HEAD)
          COMMIT_URL="https://github.com/${{ github.repository }}/commit/$LATEST_COMMIT"
          echo "message=chore: deploy to gh-pages from $COMMIT_URL" >> $GITHUB_OUTPUT

      - name: Commit and push to gh-pages
        working-directory: .deploy_git
        env:
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN || secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "${{ steps.commitmsg.outputs.message }}" || echo "No changes to commit"
          git push "https://x-access-token:${ACCESS_TOKEN}@github.com/${{ github.repository }}.git" gh-pages

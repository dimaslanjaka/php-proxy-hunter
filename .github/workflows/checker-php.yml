name: Checker PHP

on:
  push:
  workflow_dispatch:
    inputs:
      max:
        description: 'The maximum proxies to be checked.'
        required: true
        default: '100'
        type: string
  workflow_call:
    inputs:
      max:
        description: 'The maximum proxies to be checked.'
        required: true
        default: '100'
        type: string
    secrets:
      ACCESS_TOKEN:
        required: true
  schedule:
    - cron: '0 */3 * * *' # Runs every 3 hours

concurrency:
  group: php-proxy-checker
  cancel-in-progress: false

jobs:
  build:
    if: contains(github.repository, 'php-proxy-hunter')
    permissions: read-all
    runs-on: windows-latest
    env:
      PIP_CACHE_DIR: '${{ github.workspace }}/project/tmp/pip'
      NUITKA_CACHE_DIR: '${{ github.workspace }}/project/tmp/nuitka-cache'
      NODE_OPTIONS: '--max_old_space_size=4096' #8192 4096 --expose-gc
      YARN_ENABLE_IMMUTABLE_INSTALLS: false
      ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      GH_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      node_version: 20.x
      php_version: 7.4
      YARN_CHECKSUM_BEHAVIOR: update

    steps:
      - name: Set timezone
        uses: szenius/set-timezone@v2.0
        with:
          timezoneLinux: 'Asia/Jakarta'
      - uses: actions/checkout@v4
        with:
          repository: 'dimaslanjaka/php-proxy-hunter'
          ref: master
          token: ${{ secrets.ACCESS_TOKEN }}
          lfs: 'true'
      - uses: actions/checkout@v4
        with:
          token: '${{ secrets.ACCESS_TOKEN }}'
          lfs: true
          path: 'public'
          repository: 'dimaslanjaka/data'
      - name: Update Submodules
        run: |
          echo "init submodules"
          git submodule init
          git submodule foreach "git submodule init"
          echo "sync submodules"
          git submodule sync
          git submodule foreach "git submodule sync"
          echo "update submodules"
          mkdir -p bin >/dev/null 2>&1
          curl -L https://github.com/dimaslanjaka/bin/raw/master/bin/submodule-install > bin/submodule-install
          rm -rf .git/modules
          bash ./bin/submodule-install
          git lfs track "*.rar"
        shell: bash

      - name: Setup NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.node_version }}

      - run: corepack enable

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - name: Setup PHP with PECL extension
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.php_version }}
          extensions: mbstring, intl, pecl_http, curl, pdo_mysql, pdo_sqlite, dom, zip, fileinfo, json, redis
          ini-values: post_max_size=256M, max_execution_time=180
          tools: php-cs-fixer, phpunit, composer:v2
          coverage: none
        env:
          fail-fast: true

      - name: Cache initialize
        id: cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pip
            ./dist/
            ./tmp/
            src/*.sqlite*
            src/*.mmdb
            node_modules/
            .yarn/caches/
            .yarn/*.gz
            ./venv/
            ${{ env.pip_cache_dir }}
            ${{ env.NUITKA_CACHE_DIR }}
            *.lock
            *.txt
            package-lock.json
            assets/proxies/
            vendor/
            ${{ env.USERPROFILE }}\AppData\Local\Nuitka\Nuitka\Cache
            $HOME/AppData/Local/Nuitka/Nuitka/Cache
            config/
            .cache/
            working.json
          key: ${{ runner.os }}-php-${{ hashFiles('.husky/hash.txt') }}
          restore-keys: |
            ${{ runner.os }}-php-${{ hashFiles('.husky/hash.txt') }}
            ${{ runner.os }}-php-
            ${{ runner.os }}-nuitka-
            ${{ runner.os }}-python-
            ${{ runner.os }}-

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          php composer.phar install --prefer-dist --no-progress
          python requirements_install.py

      - name: Initialize Github Actions
        id: php-github-actions-init
        env:
          GITHUB_OUTPUT: $GITHUB_OUTPUT
        run: |
          python github-actions-init.py
          php github-actions-init.php

      - name: Download required files
        run: python3 src/geoPlugin.py

      - name: Cleanup
        run: php cleaner.php

      - name: Fetch proxies
        run: php proxyFetcher.php

      - name: Index proxies
        run: php proxies-all.php

      - name: Check proxies
        run: php proxyCheckerParallel.php

      - name: Upload Proxies
        run: python3 proxyWorking.py

name: Checker Python

on:
  push:
  workflow_dispatch:
    inputs:
      max:
        description: "The maximum proxies to be checked."
        required: true
        default: "100"
        type: string
  workflow_call:
    inputs:
      max:
        description: "The maximum proxies to be checked."
        required: true
        default: "100"
        type: string
    secrets:
      ACCESS_TOKEN:
        required: true
  schedule:
    - cron: "0 */3 * * *" # Runs every 3 hours

concurrency:
  group: python-proxy-checker
  cancel-in-progress: false

jobs:
  build:
    if: contains(github.repository, 'php-proxy-hunter')
    runs-on: windows-latest
    env:
      PIP_CACHE_DIR: "${{ github.workspace }}/project/tmp/pip"
      NUITKA_CACHE_DIR: "${{ github.workspace }}/project/tmp/nuitka-cache"
      NODE_OPTIONS: "--max_old_space_size=4096" #8192 4096 --expose-gc
      YARN_ENABLE_IMMUTABLE_INSTALLS: false
      ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      GH_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      node_version: 18.x
      php_version: 7.4
      YARN_CHECKSUM_BEHAVIOR: update

    steps:
      # Check-out repository
      - uses: actions/checkout@v4
        with:
          repository: dimaslanjaka/php-proxy-hunter
          ref: master
          token: ${{ secrets.ACCESS_TOKEN }}
          lfs: "true"

      - name: Update Submodules
        run: |
          echo "init submodules"
          git submodule init
          git submodule foreach "git submodule init"
          echo "sync submodules"
          git submodule sync
          git submodule foreach "git submodule sync"
          echo "update submodules"
          mkdir -p bin >/dev/null 2>&1
          curl -L https://github.com/dimaslanjaka/bin/raw/master/bin/submodule-install > bin/submodule-install
          rm -rf .git/modules
          bash ./bin/submodule-install
          git lfs track "*.rar"
        shell: bash

      # Setup Python
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          architecture: "x64"

      - uses: actions/setup-node@v4
        with:
          node-version: 18.x

      - name: Get pip cache dir
        id: pip-cache
        run: echo "pip_cache_dir=$(pip cache dir)" >> $GITHUB_ENV

      - name: Setup Cache
        id: cache
        uses: actions/cache@v4
        with:
          path: |
            dist/
            tmp/
            src/*.sqlite*
            src/*.mmdb
            node_modules/
            .yarn/caches/
            .yarn/*.gz
            venv/
            ${{ env.pip_cache_dir }}
            ${{ env.NUITKA_CACHE_DIR }}
            *.lock
            *.txt
            package-lock.json
            assets/proxies/
            vendor/
            ${{ env.USERPROFILE }}\AppData\Local\Nuitka\Nuitka\Cache
            $HOME/AppData/Local/Nuitka/Nuitka/Cache
            ~/.cache/pip
            config/
            .cache/
            proxies.txt
            dead.txt
            proxyChecker.txt
            working.txt
            working.json
          key: ${{ runner.os }}-python-${{ hashFiles('.husky/hash.txt') }}
          restore-keys: |
            ${{ runner.os }}-python-${{ hashFiles('.husky/hash.txt') }}
            ${{ runner.os }}-python-
            ${{ runner.os }}-nuitka-
            ${{ runner.os }}-php-
            ${{ runner.os }}-

      - name: Restore Non-cached Files
        run: |
          git restore *.txt

      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          corepack enable
          yarn install
          python3 -m ensurepip --upgrade
          python3 -m pip install --upgrade pip setuptools wheel
          python3 -m distutils.core --help
          python3 requirements_install.py

      - run: ls -R venv
        shell: bash

      - name: Initialize Github Actions
        id: php-github-actions-init
        env:
          GITHUB_OUTPUT: $GITHUB_OUTPUT
        run: |
          python3 github-actions-init.py

      - name: Download required files
        run: python3 src/geoPlugin.py

      - name: Cleanup
        run: python3 cleaner.py

      - name: Fetch Proxies
        run: python3 proxyFetcher.py

      - name: Check Proxies
        run: python3 proxyCheckerReal.py --max='${{ github.event.inputs.max || 100 }}'

      - name: Upload Proxies
        run: python3 proxyWorking.py

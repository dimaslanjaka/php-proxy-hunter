name: Build PHP FPM

on:
  schedule:
    - cron: '0 1 * * *' # ðŸ”¹ Nightly build
  workflow_dispatch: # ðŸ”¹ Allow manual trigger
  push:
    paths:
      - .github/workflows/build-php.yml
      - readme-php.md
      - readme-sqlite.md

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential autoconf bison re2c pkg-config wget curl git \
            libxml2-dev libssl-dev libcurl4-openssl-dev \
            libbz2-dev libzip-dev libicu-dev libreadline-dev \
            libsodium-dev zlib1g-dev libonig-dev ccache

      # ðŸ”¹ Unified cache (ccache + sqlite-src + php-src)
      - name: Setup build cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.ccache
            sqlite-autoconf-*
            php-src
          key: build-${{ runner.os }}-${{ hashFiles('.github/workflows/build-php.yml') }}
          restore-keys: |
            build-${{ runner.os }}-

      - name: Build SQLite (if missing)
        run: |
          SQLITE_VER=3460000
          if [ ! -d sqlite-autoconf-${SQLITE_VER} ]; then
            wget https://www.sqlite.org/2024/sqlite-autoconf-${SQLITE_VER}.tar.gz
            tar xzf sqlite-autoconf-${SQLITE_VER}.tar.gz
            cd sqlite-autoconf-${SQLITE_VER}
            CFLAGS="-O2 -DSQLITE_ENABLE_COLUMN_METADATA=1" ./configure --prefix=/usr/local/sqlite
            make -j$(nproc)
            sudo make install
            echo "/usr/local/sqlite/lib" | sudo tee /etc/ld.so.conf.d/sqlite3.conf
            sudo ldconfig
          fi

      - name: Checkout PHP source (if missing)
        run: |
          if [ ! -d php-src ]; then
            git clone --depth=1 https://github.com/php/php-src.git -b php-8.4.11 php-src
            cd php-src
            ./buildconf --force
          fi

      - name: Configure PHP
        working-directory: php-src
        env:
          CC: 'ccache gcc'
          CXX: 'ccache g++'
        run: |
          ./configure \
            --prefix=/usr/local/php \
            --with-config-file-path=/usr/local/php/etc \
            --enable-bcmath \
            --enable-calendar \
            --enable-exif \
            --enable-ftp=shared \
            --enable-intl \
            --enable-mbstring \
            --enable-soap \
            --enable-sockets \
            --enable-sysvmsg \
            --enable-sysvsem \
            --enable-sysvshm \
            --with-curl \
            --with-libdir=/lib/x86_64-linux-gnu \
            --with-mysqli \
            --with-openssl \
            --with-pdo-mysql \
            --with-pdo-sqlite=/usr/local/sqlite \
            --with-sqlite3=/usr/local/sqlite \
            --with-readline \
            --with-libxml \
            --with-zlib \
            --with-sodium \
            --with-zip \
            --with-bz2 \
            --enable-fpm

      - name: Build PHP
        working-directory: php-src
        run: make -j$(nproc)

      # ðŸ”¹ Install PHP into staging directory
      - name: Install into staging dir (PHP)
        working-directory: php-src
        run: |
          mkdir -p $GITHUB_WORKSPACE/stage
          make install DESTDIR=$GITHUB_WORKSPACE/stage

      # ðŸ”¹ Copy SQLite into staging directory
      - name: Copy SQLite into staging dir
        run: |
          mkdir -p $GITHUB_WORKSPACE/stage/usr/local
          cp -a /usr/local/sqlite $GITHUB_WORKSPACE/stage/usr/local/

      # ðŸ”¹ Create artifact (tarball for easy install)
      - name: Package artifact
        run: |
          cd stage
          # Final tarball: contains usr/local/php + usr/local/sqlite
          tar -czf ../php-fpm-build.tar.gz usr

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: php-fpm-build
          path: php-fpm-build.tar.gz
# ðŸ”¹ How to install on your VPS:
# 1. Download artifact (php-fpm-build.tar.gz) from GitHub Actions
# 2. Upload it to your VPS
# 3. Extract into root (preserves /usr/local/php + /usr/local/sqlite paths):
#    sudo tar -xzf php-fpm-build.tar.gz -C /
# 4. Verify:
#    /usr/local/php/bin/php -v
#    /usr/local/php/sbin/php-fpm -v
#    /usr/local/sqlite/bin/sqlite3 --version

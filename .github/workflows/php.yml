name: Proxy Checker

on:
  push:
    branches:
      - master
    paths-ignore:
      - '**/*.tgz'
      - '**/*.gz'
      - '**/release/**'
      - '.github/codeql/*'
      - '**codeql**'
      - '**clean-caches**'
      - '**/yarn.lock'
      - '!**/.git*'
  workflow_dispatch:
  workflow_call:
    secrets:
      ACCESS_TOKEN:
        required: true
  schedule:
    # https://crontab.guru/#30_5_*_*_*
    - cron: '0 * * * *'

concurrency:
  group: build
  cancel-in-progress: true

jobs:
  build:
    permissions: read-all
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Validate composer.json and composer.lock
      run: composer validate --strict

    - name: Cache Composer packages
      id: cache
      uses: actions/cache@v3
      with:
        path: |
          vendor/
          tmp/
          config
          .cache/
          assets/proxies/
          proxies.txt
          dead.txt
          proxyChecker.txt
          working.txt
          working.json
          src/database.sqlite
          composer.lock
          yarn.lock
        key: ${{ runner.os }}-php-${{ github.run_id }}
        restore-keys: |
          ${{ runner.os }}-php-

    - name: Install dependencies
      if: steps.cache.outputs.cache-hit != 'true'
      run: composer install --prefer-dist --no-progress

    - name: Fetch proxies
      run: |
        php proxyFetcher.php --admin='true'

    - name: Check proxies
      run: |
        mkdir -p assets/proxies
        mkdir -p tmp
        mkdir -p tmp/runners
        mkdir -p tmp/cookies
        php proxyChecker.php --max='500' --admin='true'

    - name: Print working proxies
      run: |
        # Read the JSON file content
        json_content=$(cat working.json)

        # Check if json_content is not empty, null, [], or {}
        if [ -n "$json_content" ] && [ "$json_content" != "null" ] && [ "$json_content" != "[]" ] && [ "$json_content" != "{}" ]; then
          # Escape the JSON content
          escaped_content=$(printf '%q' "$json_content")

          # Send the JSON content to the specified URL
          curl -s -X POST https://sh.webmanajemen.com/proxyCheckerParallel.php -d "proxy=${escaped_content}" > /dev/null 2>&1
          echo "$json_content"
        else
          echo "working.json is empty or does not contain valid JSON data."
        fi


    # Add a test script to composer.json, for instance: "test": "vendor/bin/phpunit"
    # Docs: https://getcomposer.org/doc/articles/scripts.md

    # - name: Run test suite
    #   run: composer run-script test

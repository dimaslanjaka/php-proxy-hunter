name: Nuitka CI

on:
  push:
  workflow_dispatch:
  workflow_call:
    secrets:
      ACCESS_TOKEN:
        required: true
  schedule:
    - cron: "0 */8 * * *"

concurrency:
  group: nuitka-ci
  cancel-in-progress: false

jobs:
  build:
    if: contains(github.repository, 'php-proxy-hunter') || contains(github.repository, 'android-traffic-exchange')
    runs-on: windows-latest

    steps:
      # Check-out repository
      - uses: actions/checkout@v4
        with:
          repository: dimaslanjaka/traffic-generator
          ref: python
          token: ${{ secrets.ACCESS_TOKEN }}
          lfs: "true"
          submodules: "true"

      # Setup Python
      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"
          architecture: "x64"

      - uses: actions/setup-node@v4
        with:
          node-version: 18.x

      - name: Get pip cache dir
        id: pip-cache
        run: echo "pip_cache_dir=$(pip cache dir)" >> $GITHUB_ENV

      - name: Setup Cache
        uses: actions/cache@v4
        with:
          path: |
            dist
            tmp
            src/*.sqlite*
            src/*.mmdb
            node_modules/**
            .yarn/caches/**/*
            .yarn/*.gz
            venv/**/*
            ${{ env.pip_cache_dir }}
            requirements.txt
            yarn.lock
            package-lock.json
          key: build-cache-${{ hashFiles('**/*.py') }}
          restore-keys: |
            build-cache-${{ github.sha }}
            build-cache-${{ hashFiles('**/*.py') }}
            build-cache-

      # Install dependencies
      - name: Install Dependencies
        run: |
          cmd /c bin\py-install.cmd
          touch yarn.lock
          corepack enable
          yarn install

      # - name: Re-install Python Dependencies
      #   run: |
      #     pip install -r requirements.txt
      #     python -m venv venv
      #     venv\Scripts\activate.bat
      #     pip install -r requirements.txt

      - name: Download required files
        run: |
          venv\Scripts\activate.bat
          venv\Scripts\python.exe src/geoPlugin.py

      - name: copy
        run: gulp copy

      - name: build simple gui
        run: |
          venv\Scripts\activate.bat
          gulp sgui

      # Uploads artifact
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: built
          path: |
            dist/*.exe
            dist/src
            dist/*.xml
            dist/*.json
            dist/*.txt

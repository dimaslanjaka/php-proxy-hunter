name: Nuitka CI

on:
  push:
  workflow_dispatch:
  workflow_call:
     secrets:
       ACCESS_TOKEN:
         required: true
  schedule:
    - cron: "0 */8 * * *"

concurrency:
  group: nuitka-ci
  cancel-in-progress: false

jobs:
  build:
    if: contains(github.repository, 'proxy')
    runs-on: windows-latest

    steps:

      # Check-out repository
      - uses: actions/checkout@v4
        with:
          repository: dimaslanjaka/traffic-generator
          ref: python
          token: ${{ secrets.ACCESS_TOKEN }}
          lfs: 'true'
          submodules: 'true'

      # Setup Python
      - uses: actions/setup-python@v5
        with:
          python-version: '3.x' # Version range or exact version of a Python version to use, using SemVer's version range syntax
          architecture: 'x64' # optional x64 or x86. Defaults to x64 if not specified
          cache: 'pip'
          cache-dependency-path: |
            **/requirements*.txt

      - uses: actions/setup-node@v4
        with:
          node-version: 18.x

      - name: Setup Cache
        uses: actions/cache@v4
        with:
          path: |
            dist
            tmp
            src/*.sqlite*
            src/*.mmdb
            node_modules/**
            .yarn/caches/**/*
            venv/**/*
          key: build-cache-${{ hashFiles('**/*.py') }}
          restore-keys: |
            build-cache-${{ github.sha }}
            build-cache-${{ hashFiles('**/*.py') }}
            build-cache-

      # Install dependencies
      - name: Install Dependencies
        run: |
          cmd /c bin\py-install.cmd
          touch yarn.lock
          corepack enable
          yarn install

      - name: Re-install Python Dependencies
        run: |
          pip install -r requirements.txt
          python -m venv venv
          venv\Scripts\activate.bat
          pip install -r requirements.txt

      - name: Download required files
        run: |
          venv\Scripts\activate.bat
          venv\Scripts\python.exe src/geoPlugin.py

      - name: copy
        run: gulp copy

      - name: build simple gui
        run: gulp sgui

      # Uploads artifact
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: built
          path: |
            dist/*.exe
            dist/src
            dist/*.xml
            dist/*.json
            dist/*.txt

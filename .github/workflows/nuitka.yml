name: Nuitka CI

on:
  push:
  workflow_dispatch:
    inputs:
      disableCache:
        description: "Disable cache"
        required: false
        default: "false"
        type: boolean
  workflow_call:
    inputs:
      disableCache:
        description: "Disable cache"
        required: false
        default: "false"
        type: boolean
    secrets:
      ACCESS_TOKEN:
        required: true
  schedule:
    - cron: "0 */8 * * *"

concurrency:
  group: nuitka-ci
  cancel-in-progress: false

jobs:
  build:
    if: contains(github.repository, 'php-proxy-hunter') || contains(github.repository, 'android-traffic-exchange')
    runs-on: windows-latest

    steps:
      - name: Setup Environment Variables
        if: ${{ github.event.inputs.disableCache || 'false' }}
        shell: bash
        run: |
          echo "NUITKA_CACHE_DIR=${{ github.workspace }}/tmp/nuitka-cache" >> $GITHUB_ENV

      - uses: actions/checkout@v4
        with:
          repository: dimaslanjaka/traffic-generator
          ref: python
          token: ${{ secrets.ACCESS_TOKEN }}
          lfs: "true"
          submodules: "true"

      # Setup Python
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          architecture: "x64"

      - uses: actions/setup-node@v4
        with:
          node-version: 18.x

      - name: Get pip cache dir
        id: pip-cache
        run: echo "pip_cache_dir=$(pip cache dir)" >> $GITHUB_ENV

      - name: Setup Cache
        uses: actions/cache@v4
        with:
          path: |
            dist/
            tmp/
            src/*.sqlite*
            src/*.mmdb
            node_modules/
            .yarn/caches/
            .yarn/*.gz
            venv/
            ${{ env.pip_cache_dir }}
            ${{ env.NUITKA_CACHE_DIR }}
            *.lock
            *.txt
            package-lock.json
            assets/proxies/
            vendor/
            ${{ env.USERPROFILE }}\AppData\Local\Nuitka\Nuitka\Cache
            $HOME/AppData/Local/Nuitka/Nuitka/Cache
            ~/.cache/pip
            config/
            .cache/
            proxies.txt
            dead.txt
            proxyChecker.txt
            working.txt
            working.json
            composer.lock
            yarn.lock
          key: ${{ runner.os }}-nuitka-${{ github.run_id }}
          restore-keys: |
            ${{ runner.os }}-nuitka-
            ${{ runner.os }}-php-
            ${{ runner.os }}-python-
            ${{ runner.os }}-

      - name: Restore Non-cached Files
        run: |
          git restore *.txt

      - name: Install NodeJS Dependencies
        run: |
          corepack enable
          yarn install

      - name: Install Python Dependencies
        run: |
          python3 -m ensurepip --upgrade
          python3 -m pip install --upgrade pip setuptools wheel
          python3 -m distutils.core --help
          python3 requirements_install.py

      - name: Download required files
        run: |
          python3 src/geoPlugin.py

      - name: Copy Assets
        run: gulp copy

      - name: Build Simple GUI
        run: |
          gulp sgui

      # Uploads artifact
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          overwrite: "true"
          include-hidden-files: "true"
          name: built
          path: |
            dist/*.exe
            dist/src/*.sqlite*
            dist/src/*.mmdb
            dist/*.json
            dist/*.txt
            dist/*.yml

      - name: Clean github actions cache
        env:
          GH_TOKEN: ${{ secrets.ACCESS_TOKEN }}
        shell: cmd
        run: |
          call "${{ github.workspace }}/bin/clear-github-actions-cache.cmd"

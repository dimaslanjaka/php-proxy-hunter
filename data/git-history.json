[
  {
    "hash": "6f56194ad4486273fef159d97bf53f459668d696",
    "date": "2025-10-28T13:52:07+07:00",
    "message": "feat(dashboard): add top-up button and i18n keys\n\n- add `points`, `dashboard`, `user_information`, `email`, `username`, `phone`, `no_user_found` keys to English and Indonesian locales\n- add `handleTopUp` handler and \"Recharge Points\" button to `DashboardContent.tsx`\n- small UI wiring to show top-up action (placeholder alert)",
    "files": [
      "src/react/locales/en.json",
      "src/react/locales/id.json",
      "src/react/pages/dashboard/DashboardContent.tsx"
    ]
  },
  {
    "hash": "a4be0a4ccde8833b655c38c4239d32f5cea65cb8",
    "date": "2025-10-28T13:49:18+07:00",
    "message": "refactor(dashboard): show only user points and user information\n\n- replace local `saldo` state with typed `user: SingleUserInfo | null`\n- import and use `getUserInfo` to fetch full user info\n- add mounted guard to avoid state updates on unmounted component\n- compute `displayName` from first/last name with username/email fallback\n- simplify UI to two cards: Points and User Information\n- remove transaction history placeholder and recharge button\n- add `React.FC` typing and restore full-width container layout",
    "files": [
      "src/react/pages/dashboard/DashboardContent.tsx"
    ]
  },
  {
    "hash": "9796294f46e5d446859f4d858e4347526204f76e",
    "date": "2025-10-28T12:47:11+07:00",
    "message": "fix: ensure python-minimal dependencies are installed on remote server during deployment",
    "files": [
      "bin/deploy-vps.mjs"
    ]
  },
  {
    "hash": "a4bd3e9c957356c51c22b12e5372a330491d8fd0",
    "date": "2025-10-28T12:46:35+07:00",
    "message": "chore(python-minimal): fix venv creation logic and add pycryptodome to dependencies",
    "files": [
      "bin/python-minimal"
    ]
  },
  {
    "hash": "639b685ee200d5c42533a798aebcafd8e00bd2af",
    "date": "2025-10-28T12:44:21+07:00",
    "message": "chore(prettier): add prettier-plugin-sh to configuration and dependencies",
    "files": [
      ".prettierrc.json",
      "package.json"
    ]
  },
  {
    "hash": "47b8ff04ea309ceb34c5ab079282043a58875130",
    "date": "2025-10-28T12:40:51+07:00",
    "message": "fix: update shellscript settings in VSCode configuration",
    "files": [
      ".vscode/settings.json"
    ]
  },
  {
    "hash": "a498e35a6895ed1d66ba9ab56fb79245c7f5b8b9",
    "date": "2025-10-28T12:01:37+07:00",
    "message": "fix: ensure Windows CMD files use CRLF line endings in .editorconfig",
    "files": [
      ".editorconfig"
    ]
  },
  {
    "hash": "24cfad05daf2f0e88e746609a14dc8657246fc90",
    "date": "2025-10-28T11:52:24+07:00",
    "message": "fix: ensure pip commands are called correctly in the installation script",
    "files": [
      "bin/python-minimal.cmd"
    ]
  },
  {
    "hash": "94f925fe2d5ffdc95dff85492e6a09a29b0e3aa2",
    "date": "2025-10-28T11:50:31+07:00",
    "message": "fix: replace 'py' with explicit path to Python executable in installation commands",
    "files": [
      "bin/python-minimal.cmd"
    ]
  },
  {
    "hash": "b9b4c00b41ece4c8b893dc965b38782df3c0ba35",
    "date": "2025-10-28T11:49:10+07:00",
    "message": "fix: ensure pip upgrade command does not fail the script",
    "files": [
      "bin/python-minimal"
    ]
  },
  {
    "hash": "0a8626f324627f0297eff94e2e3de3012ca7bf0a",
    "date": "2025-10-28T09:36:37+07:00",
    "message": "fix: update database type selection for GitHub CI environments",
    "files": [
      "php_backend/shared.php"
    ]
  },
  {
    "hash": "ca2bd61dc7f93e739b61e9e4d58901b002e8de93",
    "date": "2025-10-28T09:34:05+07:00",
    "message": "refactor: extract GitHub environment detection into dedicated functions\n\n- Add is_github_codespaces() and is_github_ci() functions with PHPDoc\n- Refactor is_debug() to use the new functions instead of inline checks\n- Improve code reusability and maintainability",
    "files": [
      "src/database/env.php"
    ]
  },
  {
    "hash": "30e0f6cef6ea6e6a87f776e1cfc8754ccfb30757",
    "date": "2025-10-28T07:49:25+07:00",
    "message": "feat: enable dynamic database type selection for CI environments\n\n- Add $dbType variable to conditionally use 'sqlite' in debug mode (including GitHub CI) or 'mysql' otherwise\n- Update CoreDB constructor to use the dynamic $dbType instead of hardcoded 'mysql'",
    "files": [
      "php_backend/shared.php"
    ]
  },
  {
    "hash": "3c794620711a9f6cff2e5eb508ffdfffbefb6b16",
    "date": "2025-10-24T15:25:31+07:00",
    "message": "feat(dependencies): add sharp package version 0.32",
    "files": [
      "package.json"
    ]
  },
  {
    "hash": "cc6a9e92a0395fd3e9611d34f09583a2b2c8027b",
    "date": "2025-10-24T15:24:03+07:00",
    "message": "fix(dependencies): update i18next to 25.6.0 and react-i18next to 16.1.6",
    "files": [
      "package.json"
    ]
  },
  {
    "hash": "32d08bda2fe6b5b8246c4afed198f03e49a1a37e",
    "date": "2025-10-24T15:00:13+07:00",
    "message": "feat(scripts): add remote file size check and conditional Composer download\n\n- Introduced `getRemoteFileSize()` to retrieve remote Composer file size via HTTP HEAD request.\n- Updated installer logic to compare local and remote file sizes before downloading.\n- Skips Composer download if the local file matches the remote size.\n- Refactored main installation flow with `downloadAndInstall()` and `createShortcut()` helpers.",
    "files": [
      "scripts/composer-installer.js"
    ]
  },
  {
    "hash": "962f2a5e0eea6270167a12e8002f846047e17f26",
    "date": "2025-10-24T13:01:26+07:00",
    "message": "Merge pull request #61 from dimaslanjaka/dependabot/npm_and_yarn/react-i18next-16.0.0\n\nbuild(deps): bump react-i18next from 15.7.4 to 16.0.0",
    "files": []
  },
  {
    "hash": "d3c17665beb0bb8162d56b91347660d43844b799",
    "date": "2025-10-24T13:00:20+07:00",
    "message": "Merge pull request #63 from dimaslanjaka/dependabot/composer/squizlabs/php_codesniffer-tw-3.0or-tw-4.0\n\nbuild(deps-dev): update squizlabs/php_codesniffer requirement from ^3.0 to ^3.0 || ^4.0",
    "files": []
  },
  {
    "hash": "8ac137efa4e2ba49d08c4056d6d2ed3001833af7",
    "date": "2025-10-24T12:58:26+07:00",
    "message": "Merge pull request #62 from dimaslanjaka/dependabot/npm_and_yarn/vite-7.1.7\n\nbuild(deps-dev): bump vite from 7.1.4 to 7.1.7",
    "files": []
  },
  {
    "hash": "cec7f747218426385c32d4c4b9722a48cd07c8f7",
    "date": "2025-10-24T12:56:47+07:00",
    "message": "Merge pull request #59 from dimaslanjaka/dependabot/github_actions/actions/setup-python-6\n\nbuild(deps): bump actions/setup-python from 5 to 6",
    "files": []
  },
  {
    "hash": "4bf0c56d4ae8cfdf676391aaa5fc0fc8dda4961c",
    "date": "2025-10-24T12:56:36+07:00",
    "message": "Merge pull request #58 from dimaslanjaka/dependabot/github_actions/actions/setup-node-5\n\nbuild(deps): bump actions/setup-node from 4 to 5",
    "files": []
  },
  {
    "hash": "6844fc9ecfea846ce54df683a6704350d282f5d3",
    "date": "2025-10-24T12:40:30+07:00",
    "message": "refactor(php_backend/proxy-checker.php): use $proxy_db directly instead of $db alias\n\n- Remove redundant assignment `$db = $proxy_db`.\n- Use global `$proxy_db` in the shutdown handler and `proxyChecker()` instead of `$db`.\n- Replace `$db->updateData(...)` with `$proxy_db->updateData(...)`.\n- Keeps behavior identical while removing an unnecessary variable and clarifying the source of the database object.",
    "files": [
      "php_backend/proxy-checker.php"
    ]
  },
  {
    "hash": "fc54daf50d6bc8704c3efcf0eb8510e1bef75bb3",
    "date": "2025-10-24T12:37:29+07:00",
    "message": "fix(php_backend): standardize and relocate proxy-checker lock file path\n\n- Updated `proxy-checker.php` to use a consistent lock file path under `tmp/locks/user-<id>/php_backend/`.\n- Modified `processes.php` to delete the specific proxy-checker lock file instead of clearing multiple tmp directories.",
    "files": [
      "php_backend/processes.php",
      "php_backend/proxy-checker.php"
    ]
  },
  {
    "hash": "de8b1c9ce4135f20fda13edff789ebf45cc7da4e",
    "date": "2025-10-24T12:34:38+07:00",
    "message": "feat(proxy-list): add fetch processes on mount",
    "files": [
      "src/react/pages/ProxyList.tsx"
    ]
  },
  {
    "hash": "25368bf0cb52541800da0293772d68d174629475",
    "date": "2025-10-24T12:31:41+07:00",
    "message": "feat(processes): add cleanup of temporary files for non-existent PHP/Python processes",
    "files": [
      "php_backend/processes.php"
    ]
  },
  {
    "hash": "1a743b6dc7f3fb19eb1fd83650a2c47602b1b5d7",
    "date": "2025-10-24T12:28:21+07:00",
    "message": "feat(processes): implement per-session rate limiting for non-admin users",
    "files": [
      "php_backend/processes.php"
    ]
  },
  {
    "hash": "04c10d0bf13fb20c57a022110166abd9ecf2d432",
    "date": "2025-10-24T12:20:32+07:00",
    "message": "feat(processes): implement process listing for PHP and Python by user ID",
    "files": [
      "php_backend/processes.php"
    ]
  },
  {
    "hash": "22d34be7b2d8ad8dcbf6fe046ce3e452d7b00ced",
    "date": "2025-10-24T12:19:18+07:00",
    "message": "fix(dotenv): make .env loading robust and non-fatal\n\nWrap Dotenv loading in a try/catch to avoid a fatal error when the .env\nfile is missing or dotenv throws. Catch `Dotenv\\Exception\\InvalidPathException`\nand silently skip loading (with a CLI notice), and catch other Throwables to\nlog a message to stdout. Preserve the existing `putenv` behavior when load\nsucceeds.",
    "files": [
      "php_backend/shared.php"
    ]
  },
  {
    "hash": "b6b4fdba6f079b3474df36bb3b65c6909b0627ea",
    "date": "2025-10-24T09:45:10+07:00",
    "message": "refactor(cors): add disableBrowserCache flag to Server::allowCors and enable it in endpoints\n\nAdd a boolean parameter to `PhpProxyHunter\\Server::allowCors($disableBrowserCache = false)` that, when true,\nemits headers to disable browser caching (Expires, Last-Modified, Cache-Control, Pragma). Replace ad-hoc\nmanual cache header blocks in several endpoints by calling `Server::allowCors(true)` so CORS + cache-control\nare handled centrally.\n\nChanges:\n- Add `disableBrowserCache` parameter and cache-control behavior to `src/PhpProxyHunter/Server.php`\n- Update endpoint calls to use `PhpProxyHunter\\Server::allowCors(true)`:\n  - `php_backend/check-https-proxy.php`\n  - `php_backend/google-oauth.php`\n  - `php_backend/login.php`\n  - `php_backend/logout.php`\n  - `php_backend/proxy-checker.php`\n  - `php_backend/user-info.php`\n- Remove duplicated manual cache headers where the new centralized flag is used\n- Preserve per-endpoint Content-Type and other response headers\n\nWhy:\n- Centralizes CORS and cache-control behavior for consistency and easier maintenance.\n- Avoids duplicated header code and ensures preflight handling and cache disabling are applied uniformly.",
    "files": [
      "php_backend/check-https-proxy.php",
      "php_backend/google-oauth.php",
      "php_backend/login.php",
      "php_backend/logout.php",
      "php_backend/proxy-checker.php",
      "php_backend/user-info.php",
      "src/PhpProxyHunter/Server.php"
    ]
  },
  {
    "hash": "bc121f462d0bef3aaaf7c162db2d067991612394",
    "date": "2025-10-24T09:40:57+07:00",
    "message": "refactor(cors): centralize CORS handling via Server::allowCors()\n\nReplace ad-hoc Access-Control-* header blocks in multiple `php_backend` endpoints\nwith a single call to `PhpProxyHunter\\Server::allowCors()`. Preserve per-endpoint\nresponse headers (Content-Type, Expires/Cache-Control/Pragma) and rely on the\nserver helper for preflight handling.\n\nChanged files (examples):\n- php_backend/check-https-proxy.php\n- php_backend/get_sms.php\n- php_backend/google-oauth.php\n- php_backend/img.php\n- php_backend/list-user.php\n- php_backend/login.php\n- php_backend/logout.php\n- php_backend/logs.php\n- php_backend/proxy-checker.php\n- php_backend/recaptcha.php\n- php_backend/refill-saldo.php\n- php_backend/user-info.php\n- php_backend/useragent.php\n\nThis centralizes CORS logic for easier maintenance and consistent behavior.",
    "files": [
      "php_backend/check-https-proxy.php",
      "php_backend/get_sms.php",
      "php_backend/google-oauth.php",
      "php_backend/img.php",
      "php_backend/list-user.php",
      "php_backend/login.php",
      "php_backend/logout.php",
      "php_backend/logs.php",
      "php_backend/proxy-checker.php",
      "php_backend/recaptcha.php",
      "php_backend/refill-saldo.php",
      "php_backend/user-info.php",
      "php_backend/useragent.php"
    ]
  },
  {
    "hash": "99c3f8bb0d6b87964f8140a0e3eb436d543905cc",
    "date": "2025-10-24T09:29:30+07:00",
    "message": "refactor(server): move CORS handling into Server::allowCors()\n\nReplace inline CORS/preflight logic in `php_backend/proxy-add.php` with a single\ncall to `PhpProxyHunter\\Server::allowCors()`. Implement `allowCors()` in\n`src/PhpProxyHunter/Server.php` to centralize CORS support, include a CLI guard,\nand handle preflight OPTIONS requests (allowing common methods and headers,\nsetting Access-Control-Allow-Origin/Credentials/Max-Age).\n\nThis cleans up endpoint code and centralizes server-level behavior for easier\nmaintenance and reuse.",
    "files": [
      "php_backend/proxy-add.php",
      "src/PhpProxyHunter/Server.php"
    ]
  },
  {
    "hash": "ba33aefc8e377044edfc4a9969cd3c7d946240df",
    "date": "2025-10-24T09:25:48+07:00",
    "message": "feat(proxy-add): implement CORS support and handle preflight OPTIONS requests",
    "files": [
      "php_backend/proxy-add.php"
    ]
  },
  {
    "hash": "184687385e5bff68e759b9f14fe5c87b69943883",
    "date": "2025-10-24T09:17:01+07:00",
    "message": "fix(extractor): improve exception message for missing ProxyDB instance when writing to database",
    "files": [
      "src/utils/proxy/extractor.php"
    ]
  },
  {
    "hash": "d41e4e63bf40688bb3949bae51aeaa902cf46804",
    "date": "2025-10-24T09:15:35+07:00",
    "message": "fix(extractor): return parsed results directly if no ProxyDB instance is provided",
    "files": [
      "src/utils/proxy/extractor.php"
    ]
  },
  {
    "hash": "ebcb4e68b2ac8d02046c519fc19ce43ead1ed92a",
    "date": "2025-10-24T09:11:03+07:00",
    "message": "fix(proxy-checker): update runner path to use temporary directory for Windows compatibility",
    "files": [
      "php_backend/proxy-checker.php"
    ]
  },
  {
    "hash": "90292a4deeb6f2514349f472095ff9502e37b11a",
    "date": "2025-10-24T08:04:14+07:00",
    "message": "fix(proxy): avoid calling $db on null and make extractor PHP 7.0 compatible\n\n- Remove undefined `$db` capture from `artisan/proxyFetcher.php` exit closure\n  to prevent a PHP Notice when no DB instance is present.\n- Update `src/utils/proxy/extractor.php`:\n  - Return parsed results early when no `ProxyDB` is provided (avoid calling `$db->select()` on null).\n  - Remove unused `use PhpProxyHunter\\ProxyDB;` import.\n  - Change `extractProxies` signature to be PHP 7.0 compatible (remove nullable/scalar type hints).\n\nThis prevents the fatal error seen in CI and keeps backward-compatible behaviour\nwhen callers don't pass a DB instance.",
    "files": [
      "artisan/proxyFetcher.php",
      "src/utils/proxy/extractor.php"
    ]
  },
  {
    "hash": "2391205c684689b691f162d03f4c6d9bc035c20c",
    "date": "2025-10-24T03:30:38+07:00",
    "message": "feat(composer): add local path repository and require local package\n\n- add path repository pointing to packages/proxy-hunter-python (symlink)\n- require local package dimaslanjaka/proxy-hunter-php:dev-master\n- add extra composer config: composer-exit-on-patch-failure",
    "files": [
      "composer.json"
    ]
  },
  {
    "hash": "532775fc2f60ddb1357c7a41a0021ff0fe8737e7",
    "date": "2025-10-23T17:21:56+07:00",
    "message": "refactor(config.py): import mysql.connector directly and remove lazy import checks\n\n- Remove try/except around `import mysql.connector` and the runtime `if mysql is None` check.\n- MySQL dependency is now required at module import time instead of raising when a MySQL connection is attempted.\n\nRationale:\n- Fails fast when the mysql-connector dependency is missing.\n- Simplifies code by removing the optional-import pattern.\n\nNote: This is a breaking change for consumers who relied on importing the module without having `mysql-connector-python` installed; add the dependency to your environment or restore the optional-import pattern if you need lazy availability.",
    "files": [
      "packages/proxy-hunter-python/proxy_hunter/utils/config.py"
    ]
  },
  {
    "hash": "d928872ee9e2c10b0797d8258ec789ce44c501b1",
    "date": "2025-10-23T17:19:55+07:00",
    "message": "feat(proxy-hunter-php): add PHP ConfigDB, composer.json and sample tests\n\n- Add Composer manifest with PSR-4 autoload (ProxyHunter\\ -> proxy_hunter/), require PHP >= 7.0 and ext-pdo.\n- Introduce `ProxyHunter\\Utils\\ConfigDB` (proxy_hunter/utils/config.php): PDO-backed config storage supporting SQLite and MySQL, JSON encode/decode, set/get/delete/close, and mapping decoded arrays to model classes (includes stdClass handling).\n- Add a simple executable sample test (tests/configTest.php) demonstrating storing/retrieving arrays, stdClass, strings and delete.\n- Files added:\n  - packages/proxy-hunter-python/composer.json\n  - packages/proxy-hunter-python/proxy_hunter/utils/config.php\n  - packages/proxy-hunter-python/tests/configTest.php",
    "files": [
      "packages/proxy-hunter-python/composer.json",
      "packages/proxy-hunter-python/proxy_hunter/utils/config.php",
      "packages/proxy-hunter-python/tests/configTest.php"
    ]
  },
  {
    "hash": "ac79888fa0570ec8b252d38ecbaeee110ea29002",
    "date": "2025-10-23T17:18:36+07:00",
    "message": "fix(config): ensure resources are released by closing connections in destructor",
    "files": [
      "packages/proxy-hunter-python/proxy_hunter/utils/config.py"
    ]
  },
  {
    "hash": "bd8e7a953e3d9c84a2194f349c7df5eda6774132",
    "date": "2025-10-23T09:41:00+07:00",
    "message": "chore(pyproject): add project metadata and dependencies for proxy_hunter package\n\n- Define project name, version, description, authors, and classifiers\n- Add dependencies including MySQL, HTTP, and proxy-related libraries\n- Configure setuptools to include proxy_hunter packages and submodules\n- Add pytest configuration for test discovery",
    "files": [
      "packages/proxy-hunter-python/pyproject.toml"
    ]
  },
  {
    "hash": "988d62c783bd8c1b9e82ffec6273dfb7a3d60ab7",
    "date": "2025-10-23T09:40:32+07:00",
    "message": "fix(readme): update installation instructions",
    "files": [
      "packages/proxy-hunter-python/readme.md"
    ]
  },
  {
    "hash": "5d3ef63ed3b0c947279ac3fac10ebd96b645bdf0",
    "date": "2025-10-23T09:39:56+07:00",
    "message": "feat(config): add ConfigDB utility with SQLite and MySQL support\n\n- Introduce ConfigDB class for unified configuration storage using SQLite or MySQL\n- Implement CRUD operations with JSON serialization and dataclass reconstruction\n- Add tests for configuration persistence, updates, deletions, and dataclass restoration\n- Update setup.py to include mysql-connector-python dependency",
    "files": [
      "packages/proxy-hunter-python/proxy_hunter/utils/config.py",
      "packages/proxy-hunter-python/setup.py",
      "packages/proxy-hunter-python/tests/test_config_db.py"
    ]
  },
  {
    "hash": "c8026bb2d080bb4fa83df500390f6993c21975c0",
    "date": "2025-10-19T14:16:17+07:00",
    "message": "feat(package): add postcss-cli and postcss-loader dependencies",
    "files": [
      "package.json"
    ]
  },
  {
    "hash": "260172db20b23dac31a1e18566bf14736354dc2a",
    "date": "2025-10-19T14:15:42+07:00",
    "message": "fix(readme): comment out missing PHP extension section",
    "files": [
      "readme.md"
    ]
  },
  {
    "hash": "8e17f1bfb6efc7490f2b10d5cee922e9d58d8033",
    "date": "2025-10-19T14:14:33+07:00",
    "message": "fix(ui): hide copy button and show placeholder for empty details\n\nWhen details are empty or whitespace-only, render a subtle placeholder (`-`)\nand avoid displaying the copy button in `src/react/components/DetailsCell.tsx`.\nThis prevents no-op copy actions and improves table readability.\n\n- Add `hasContent` guard to detect empty content\n- Return a Tailwind-styled placeholder when empty\n- Only render copy buttons when `hasContent` is true",
    "files": [
      "src/react/components/DetailsCell.tsx"
    ]
  },
  {
    "hash": "d41199e81d1b912f146360a258eff25c82a0b7db",
    "date": "2025-10-19T14:13:08+07:00",
    "message": "feat(editorconfig): add Kotlin support with import layout configuration",
    "files": [
      ".editorconfig"
    ]
  },
  {
    "hash": "fc4b4b1cea57319710efcb0b43a2db0b9bf8834d",
    "date": "2025-10-19T14:12:09+07:00",
    "message": "feat: custom certificate",
    "files": [
      "data/custom.pem"
    ]
  },
  {
    "hash": "29f69fc1931fdd8d08033cf1f97eb416c2a9fb04",
    "date": "2025-10-19T14:11:39+07:00",
    "message": "fix(gitignore): include /script directory in .gitignore",
    "files": [
      "data/.gitignore"
    ]
  },
  {
    "hash": "baac3b303033973df9e6faf9ac36f3eccbd58b32",
    "date": "2025-10-19T14:10:59+07:00",
    "message": "feat(locales): add OTP request and verification messages in English and Indonesian",
    "files": [
      "src/react/locales/en.json",
      "src/react/locales/id.json"
    ]
  },
  {
    "hash": "2c4418160aa5096473807d6aeb1ad2bcd9f78117",
    "date": "2025-10-19T14:10:25+07:00",
    "message": "feat(eslint): add ESLint configuration file",
    "files": [
      ".idea/jsLinters/eslint.xml"
    ]
  },
  {
    "hash": "e8357a603d5bba82c9251422dcdf4999602cded1",
    "date": "2025-10-13T12:01:00+07:00",
    "message": "fix(git-history): remove path anonymization in git-history-to-json\n\nRemove the `anonymizedFiles` map and the replacement logic so the git history generator\nreturns raw repository file paths. This updates `src/dev/git-history-to-json.ts`\nto emit original paths in `git-history.json` (so the UI and consumers see accurate filenames\ninstead of anonymized tokens).\n\nBREAKING CHANGE: `git-history.json` now contains original file paths instead of anonymized tokens.",
    "files": [
      "src/dev/git-history-to-json.ts"
    ]
  },
  {
    "hash": "9538149d86e708bb809d92b58d47aa9da8ac969d",
    "date": "2025-10-08T15:13:31+07:00",
    "message": "fix(venv): ensure virtual environment is created only if it does not exist",
    "files": [
      "bin/python-minimal",
      "bin/python-minimal.cmd"
    ]
  },
  {
    "hash": "36e4556d722204432c11e1ba4318326b5179afda",
    "date": "2025-10-08T15:12:01+07:00",
    "message": "fix(venv): remove redundant deletion of existing virtual environment",
    "files": [
      "bin/python-minimal",
      "bin/python-minimal.cmd"
    ]
  },
  {
    "hash": "b5635a6ce4d7d765d901b3423a58719df90c6861",
    "date": "2025-10-08T15:11:39+07:00",
    "message": "fix(py): improve sudo command handling for non-interactive environments",
    "files": [
      "bin/py"
    ]
  },
  {
    "hash": "0d52ff7e042c7fa7eba26d20f57903475549d8bb",
    "date": "2025-10-08T13:58:40+07:00",
    "message": "chore(env): set script directory and add repo `bin` to PATH in setup scripts\n\n- Add `SCRIPT_DIR` and `CWD` detection to `bin/python-minimal` and export the repo `bin`\n  folder into `PATH` so local executables are preferred during environment setup.\n- Mirror the same logic in `bin/python-minimal.cmd` (compute `SCRIPT_DIR`, derive `CWD`,\n  normalize paths and prepend `%CWD%\\bin` to `%PATH%`).\n\nThis improves reliability when running the setup scripts from different working\ndirectories and ensures bundled tools in `bin/` are available during provisioning.",
    "files": [
      "bin/python-minimal",
      "bin/python-minimal.cmd"
    ]
  },
  {
    "hash": "ef1392d8f321015c8eab6324a8e78483ce902263",
    "date": "2025-10-08T13:50:03+07:00",
    "message": "fix(py): ensure python3 is executed in all cases for Unix-based systems",
    "files": [
      "bin/py"
    ]
  },
  {
    "hash": "026c21e83908ff14e300bcd0a1ef26fea0c5cde1",
    "date": "2025-10-08T13:44:53+07:00",
    "message": "chore(env): detect python and improve venv creation for cross-platform setup\n\n- Add python detection to `bin/python-minimal` (prefer `python3`, fallback to `python`)\n  and run a pip upgrade with the chosen interpreter before activating the venv.\n- Implement equivalent logic in `bin/python-minimal.cmd`: detect `python3` or `python`\n  to create the virtualenv, activate via `venv\\Scripts\\activate.bat`, upgrade pip,\n  and install required packages.\n- Small housekeeping: use `EnableDelayedExpansion` and `endlocal` in the Windows script.\n\nThis makes the minimal Python environment setup more robust across different systems\nwhere `py` may not be available or `python3` is preferred.",
    "files": [
      "bin/python-minimal",
      "bin/python-minimal.cmd"
    ]
  },
  {
    "hash": "288e3c5053a48dacc4c18320752a43a8e523000e",
    "date": "2025-10-08T13:38:31+07:00",
    "message": "fix(venv): remove redundant message for existing virtual environment",
    "files": [
      "bin/py",
      "bin/py.cmd"
    ]
  },
  {
    "hash": "96f26261368642b1987af72af2d0532f0ac8f0d6",
    "date": "2025-10-08T13:29:23+07:00",
    "message": "fix(py): comment out the sudo command for requirements installation",
    "files": [
      "bin/py"
    ]
  },
  {
    "hash": "60a24e51d5cec5f78990a2aa63bcd26660f04f4d",
    "date": "2025-10-08T13:19:10+07:00",
    "message": "fix(install): include additional packages in pip install command",
    "files": [
      "bin/python-minimal",
      "bin/python-minimal.cmd"
    ]
  },
  {
    "hash": "8d1bdd0823f82246e1f93f15fa9ecf24fa4c0a0b",
    "date": "2025-10-08T13:17:51+07:00",
    "message": "chore(dev-env): add conditional local-package installs with git fallbacks\n\nUpdate both `bin/python-minimal` (bash) and `bin/python-minimal.cmd` (Windows)\nto install local packages when present, and otherwise install them from their\nGitHub repositories. This makes the minimal Python environment setup more\nrobust when working either with local package directories or with the remote\nrepositories.\n\n- Check for `packages/proxy-checker-python`, `packages/proxy-hunter-python`,\n  and `packages/rsa-utility` and use `pip install -e` when available.\n- Fall back to `pip install git+https://...` (with `#subdirectory=...` where\n  required) when local directories are absent.\n\nNo functional changes to package versions; improves developer setup ergonomics.",
    "files": [
      "bin/python-minimal",
      "bin/python-minimal.cmd"
    ]
  },
  {
    "hash": "7802e3635d3c6fbb811ba508b66043892b17167f",
    "date": "2025-10-08T11:18:59+07:00",
    "message": "feat(dependencies): add @types/ssh2-sftp-client for TypeScript support",
    "files": [
      "package.json"
    ]
  },
  {
    "hash": "9ee4cdae7f7e805287ae1691fa31969132f910f0",
    "date": "2025-10-08T11:17:37+07:00",
    "message": "fix(deploy-vps): make deleteRemotePath robust for files, dirs and sftp variants\n\n- use `sftp.exists()` to detect remote type and avoid noisy delete failures\n- treat non-existent paths as no-op and return early\n- prefer `rmdir(path, true)` for recursive remove, fallback to manual recursive delete when unsupported\n- try `delete()` for files and fall back to rmdir/listing when needed\n- improve debug/error messages and add explicit returns for each successful branch",
    "files": [
      "bin/deploy-vps.mjs"
    ]
  },
  {
    "hash": "ac45bed86d1c7269ccf8eaea79d3632bf63eec00",
    "date": "2025-10-08T07:20:43+07:00",
    "message": "fix(embed): handle missing file parameter and improve request parsing",
    "files": [
      "embed.php"
    ]
  },
  {
    "hash": "ccbdcb274d00083a832596866bb8e694176613cd",
    "date": "2025-10-08T07:19:43+07:00",
    "message": "fix(embed): resolve leading-slash file paths from project root\n\nTreat `file` params starting with `/` as project-root relative (e.g. `/tmp/logs/...` -> `__DIR__/tmp/logs/...`) so frontend-returned log paths are resolvable. Preserve basename fallback and existing denylist/extension checks.",
    "files": [
      "embed.php"
    ]
  },
  {
    "hash": "1727c9a37a9baa04092f94c41375ae527fb7572c",
    "date": "2025-10-08T06:59:04+07:00",
    "message": "feat(types): add reCAPTCHA site key definitions to ImportMetaEnv",
    "files": [
      "types/vite-env.d.ts"
    ]
  },
  {
    "hash": "56325f5f7e9a6ab59a100204dd58f64b9f9a164a",
    "date": "2025-10-06T17:34:57+07:00",
    "message": "feat(deploy): add functionality to clear old files before uploading new ones",
    "files": [
      "bin/deploy-vps.mjs"
    ]
  },
  {
    "hash": "e1b2ac8d571b60c5e4ba420f0abd57cd31c6dae5",
    "date": "2025-10-06T17:34:01+07:00",
    "message": "feat(deploy): add SSH helper and make CLI invocation explicit\n\nAdd `shell_exec` helper to `bin/deploy-vps.mjs` which establishes an ssh2\nClient connection and runs commands via `execWithBashrc`, returning stdout,\nstderr, exit code, and signal. This consolidates remote command execution\nbehaviour into a reusable async function.\n\nAlso:\n- Remove duplicate JSDoc block.\n- Change module's startup behaviour so `main()` runs only when the script is\n  invoked directly (detects `deploy-vps(.mjs)?` in process.argv), and provide\n  explicit success/failure logging with proper process exit codes.\n\nThese changes improve testability and make the deployment script safe to\nimport without immediately executing the deployment.",
    "files": [
      "bin/deploy-vps.mjs"
    ]
  },
  {
    "hash": "d2b64a63f55ff96669bffc598f13e2d17e215f9e",
    "date": "2025-10-06T17:27:30+07:00",
    "message": "chore(bin): add minimal Python venv setup scripts\n\nAdd cross-platform helper scripts to create and initialize a minimal Python\nvirtual environment for local development.\n\n- Added `bin/python-minimal` (bash) and `bin/python-minimal.cmd` (Windows cmd).\n- Remove existing `venv` if present, create a new venv (`py -m venv venv`),\n  activate it, upgrade pip, and install required packages.\n- Installs `requests` and the following editable packages:\n  `packages/proxy-checker-python`, `packages/proxy-hunter-python`,\n  `packages/rsa-utility`.\n\nThese scripts simplify bootstrapping a minimal Python environment for the\nrepository. No runtime/application code changes.",
    "files": [
      "bin/python-minimal",
      "bin/python-minimal.cmd"
    ]
  },
  {
    "hash": "b4d40af915cf017f27b139a725282e7db5700a4f",
    "date": "2025-10-06T16:07:26+07:00",
    "message": "fix(clear-caches): add --no-interaction flag to Composer cache cleanup commands",
    "files": [
      "bin/clear-caches"
    ]
  },
  {
    "hash": "2ad934c875ac45f52aca4eb72f87f47ea4979223",
    "date": "2025-10-06T16:02:31+07:00",
    "message": "fix(clear-caches): comment out requirements.txt installation in virtual environment setup",
    "files": [
      "bin/clear-caches"
    ]
  },
  {
    "hash": "a826cf131ac56c8afef5f6ef28bd6eb9af09323e",
    "date": "2025-10-06T13:12:25+07:00",
    "message": "feat(deploy): add SFTP write/delete helpers and build lock handling\n\nAdd exported `writeRemoteFile` and `deleteRemotePath` helpers to perform raw SFTP writes\n(and create parent directories) and to delete files/directories (with recursive fallback).\nCreate a timestamped lock file at `tmp/locks/.build-lock` before building and remove it\nafter upload to signal build in-progress/completion. Log operations and avoid failing the\ndeploy if lock creation/removal encounters non-fatal errors.",
    "files": [
      "bin/deploy-vps.mjs"
    ]
  },
  {
    "hash": "a180159442a29a6128d26d1ba466c1f2fca619d4",
    "date": "2025-10-06T12:26:18+07:00",
    "message": "fix(deploy-vps): always set maintenance page, pull latest before build and upload dist\n\nRemove the conditional that skipped build/upload when git reported \"up to date\".\nNow the script unconditionally uploads `index.maintenance.html`, runs `gitPull()`,\nbuilds the project, copies route index files and uploads the `dist` directory.\n\nThis ensures the maintenance page is shown during deployment and the build\nruns against the latest repository state.",
    "files": [
      "bin/deploy-vps.mjs"
    ]
  },
  {
    "hash": "a043c9b155097c216ed37f33406b6dbaa43be029",
    "date": "2025-10-06T11:36:53+07:00",
    "message": "fix(hooks): add VPS detection to commit history builder execution",
    "files": []
  },
  {
    "hash": "c77bc464f8c782537aa1d993aefd283fb0c39781",
    "date": "2025-10-06T10:37:16+07:00",
    "message": "fix(index.php): improve error handling for missing PHP files",
    "files": [
      "index.php"
    ]
  },
  {
    "hash": "0a2dbf415b1553860db583909352a25c44c7396c",
    "date": "2025-10-06T10:34:27+07:00",
    "message": "fix(Home): remove unused 'Learn More' link from the Home page",
    "files": [
      "src/react/pages/Home.tsx"
    ]
  },
  {
    "hash": "eaa5e806a1c1025fc88de963c3677a78eab0141e",
    "date": "2025-10-06T10:32:06+07:00",
    "message": "feat(maintenance): add CLI options to toggle maintenance mode",
    "files": [
      "index.php"
    ]
  },
  {
    "hash": "43e7f6890f5c9c71a686f3b0be1406d0fb373508",
    "date": "2025-10-06T01:52:17Z",
    "message": "build(deps): bump react-i18next from 15.7.4 to 16.0.0\n\nBumps [react-i18next](https://github.com/i18next/react-i18next) from 15.7.4 to 16.0.0.\n- [Changelog](https://github.com/i18next/react-i18next/blob/master/CHANGELOG.md)\n- [Commits](https://github.com/i18next/react-i18next/compare/v15.7.4...v16.0.0)\n\n---\nupdated-dependencies:\n- dependency-name: react-i18next\n  dependency-version: 16.0.0\n  dependency-type: direct:production\n  update-type: version-update:semver-major\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>",
    "files": [
      "package.json"
    ]
  },
  {
    "hash": "332d784f9a64a4609ef40ce1a4db4da2eb5105c3",
    "date": "2025-10-06T08:50:15+07:00",
    "message": "fix(package): move i18next, nunjucks, and react to dev",
    "files": [
      "package.json"
    ]
  },
  {
    "hash": "46a69a361c9d8b8d6e701c1b9b349aecb3b7a9e1",
    "date": "2025-10-06T08:34:03+07:00",
    "message": "fix(package): move ssh2 and ssh2-sftp-client as dev dependencies",
    "files": [
      "package.json"
    ]
  },
  {
    "hash": "fb2e32a9a413b34252ed084c14771615aed7d887",
    "date": "2025-10-06T08:27:58+07:00",
    "message": "chore(husky): add yarn install and build steps to post-merge hook",
    "files": []
  },
  {
    "hash": "edc1fd4c9aee56902a51023370492999e5892adf",
    "date": "2025-10-06T05:45:48+07:00",
    "message": "refactor(post-merge): remove yarn installation and build steps",
    "files": []
  },
  {
    "hash": "fc28b68da3e1490469647c8b59eb1683b66bbca9",
    "date": "2025-10-06T05:45:22+07:00",
    "message": "fix(start-whatsapp): update dependency installation to use workspaces focus for production",
    "files": [
      "bin/start-whatsapp"
    ]
  },
  {
    "hash": "00f73957ad9ad158ed4f9218f4f40a5750644945",
    "date": "2025-10-04T15:34:35+07:00",
    "message": "refactor(artisan/proxyCollector): accept PDO in blacklist_remover and add PHPDoc\n\nPass `$db->db->pdo` to `blacklist_remover()` and change the function to accept a\n`\\PDO` parameter instead of relying on the global `$db`. Add a comprehensive\nPHPDoc block documenting behavior, parameters, supported drivers (sqlite/mysql),\nand safety notes. Removes global dependency and clarifies intent without\nchanging deletion semantics.",
    "files": [
      "artisan/proxyCollector.php"
    ]
  },
  {
    "hash": "fef1fda5e2ef494bfcc40ba9f31fcdd8d13c6d65",
    "date": "2025-10-04T15:31:57+07:00",
    "message": "feat(artisan/proxyCollector): update blacklist_remover to accept optional config path",
    "files": [
      "artisan/proxyCollector.php"
    ]
  },
  {
    "hash": "a6d791ccccfd6a9b717436d1e3c4bb42c33bf7ff",
    "date": "2025-10-04T13:48:49+07:00",
    "message": "feat(gitignore): add rule to ignore all .tmp files",
    "files": [
      ".gitignore"
    ]
  },
  {
    "hash": "c272d85576ad2ef85ff49a2f840f8d0a898c3e6a",
    "date": "2025-10-04T13:46:39+07:00",
    "message": "feat(file): add readFileChunk helper and update proxyCollector2 to use it\n\n- Introduced readFileChunk() in src/utils/file/reader.php for memory-friendly partial file reading\n- Updated proxyCollector2.php to read first 20KB instead of entire file content",
    "files": [
      "artisan/proxyCollector2.php",
      "src/utils/file/reader.php"
    ]
  },
  {
    "hash": "53c015fba86ebedfb0785857f4711fc4a93f39c4",
    "date": "2025-10-04T13:41:33+07:00",
    "message": "refactor(artisan/proxyCollector2): stream file processing and replace in-memory read\n\nReplace the `file()` full-file read with line-by-line streaming (fopen/fgets),\nwrite-to-temp and atomic rename. Add an O(1) exact-match lookup and a\ncopy+unlink fallback for replace failures. Improves memory behavior for large\nproxy files while preserving existing behavior.",
    "files": [
      "artisan/proxyCollector2.php"
    ]
  },
  {
    "hash": "0b90b53925308311577d6ae3776e9fd1c83ef026",
    "date": "2025-10-04T13:34:55+07:00",
    "message": "feat(artisan): add proxyCollector2 and wire into crontab\n\nAdd a new `artisan/proxyCollector2.php` script that processes `assets/proxies/added-*`\nfiles, removes invalid/already-added proxies, and cleans up proxy files in-place.\nAlso update `.crontab.sh` to run `php artisan/proxyCollector2.php` alongside the\nexisting collector job. Includes logging and safe in-place file rewriting.",
    "files": [
      ".crontab.sh",
      "artisan/proxyCollector2.php"
    ]
  },
  {
    "hash": "cb41d27429416762f1ef9a6d921822059c519bd2",
    "date": "2025-10-04T13:31:38+07:00",
    "message": "feat(extractor): add ignore_validation parameter to extractProxies\n\nAdd an optional boolean `$ignore_validation` (default: false) to `extractProxies()`\nand document it in the function docblock. When enabled the function skips calls to\n`isValidProxy()` and `isValidIp()` for user:pass, whitespace and JSON matches,\nallowing invalid-looking proxies to be returned. Backward-compatible (default\nbehavior unchanged).",
    "files": [
      "src/utils/proxy/extractor.php"
    ]
  },
  {
    "hash": "3eaed622abe72401aec25512acbe2990dd760d83",
    "date": "2025-10-04T13:20:47+07:00",
    "message": "feat(db): mark proxy as added only when insert succeeds; remove $force param\n\n- Remove unused $force parameter from `ProxyDB::add()` signature.\n- Trim proxy, call `$this->db->insert(...)` and check its boolean result.\n- Only call `markAsAdded()` when the insert returns true (avoid marking failed inserts).\n- Keeps behaviour clearer and prevents recording proxies that weren't actually persisted.\n\nBREAKING CHANGE: `ProxyDB::add($proxy, $force = false)` -> `ProxyDB::add($proxy)`; callers must be updated if they relied on the old signature.",
    "files": [
      "src/PhpProxyHunter/ProxyDB.php"
    ]
  },
  {
    "hash": "bf9b311d622c8fe01e2689f36d8f772c6b1b585d",
    "date": "2025-10-04T13:19:30+07:00",
    "message": "refactor(db): make insert() return bool and handle failures gracefully\n\n- Update abstract signature in src/PhpProxyHunter/BaseSQL.php:\n  - change insert(...) to return bool and update docblock.\n\n- Update src/PhpProxyHunter/MySQLHelper.php:\n  - add return type bool, validate empty $data and return false.\n  - return true on successful execute; catch PDOException and return false.\n  - update docblock to reflect boolean return.\n\n- Update src/PhpProxyHunter/SQLiteHelper.php:\n  - add return type bool, validate empty $data and return false.\n  - return true on successful execute; catch PDOException and return false.\n  - update docblock to reflect boolean return.\n\nBREAKING CHANGE: The BaseSQL::insert signature now returns bool (true on success, false on failure).\nCallers must handle the boolean result and adjust any logic that previously relied on exceptions or a void return.",
    "files": [
      "src/PhpProxyHunter/BaseSQL.php",
      "src/PhpProxyHunter/MySQLHelper.php",
      "src/PhpProxyHunter/SQLiteHelper.php",
      "tests/is-valid-proxy.php"
    ]
  },
  {
    "hash": "4ad887ec5440b0ba016151e6898fb974d311d68e",
    "date": "2025-10-04T12:42:33+07:00",
    "message": "fix(proxyCollector): improve blacklist removal query compatibility for SQLite and MySQL\n\n- Added database driver check to skip unsupported drivers\n- Updated DELETE query to be compatible with both SQLite and MySQL\n- Used parameterized query with bound parameters for `proxy` and `active` status\n- Added error handling to report failed deletions",
    "files": [
      "artisan/proxyCollector.php"
    ]
  },
  {
    "hash": "ba190ebefa957a4856edc5f6b3ca523371b7d8c2",
    "date": "2025-10-04T12:18:59+07:00",
    "message": "fix(husky): run composer only when composer.json or PHP files changed\n\nDetect changed files between the previous ref (prefer ORIG_HEAD, fallback to HEAD^) and HEAD,\nand only run Composer when `composer.json` or any `.php` files were modified. If the previous\nref can't be determined, conservatively run Composer when `composer.json` exists.\n\nPreserves existing behavior (install vs update, `--no-dev` on VPS, attempt to run as configured user)\nand prints a clear message when skipping Composer.",
    "files": []
  },
  {
    "hash": "96c1d84de82fee360536cee52a45e802bc6da96d",
    "date": "2025-10-04T12:13:41+07:00",
    "message": "fix(husky): require git-lfs only when repository uses LFS\n\nDetect LFS usage via `.gitattributes` and `git lfs track` and only fail the hook\nif the repo uses LFS and `git-lfs` is missing. Otherwise print a note and continue.\nRun `git lfs post-commit` only when LFS is in use.",
    "files": []
  },
  {
    "hash": "e0ba14b2269b418a2434d735d00016f089dd0fc5",
    "date": "2025-10-04T10:48:54+07:00",
    "message": "feat(func): make runBashOrBatch output redirection opt-in\n\nAdd a new optional parameter `$redirectOutput` (default: false) to\n`runBashOrBatch` and update the PHPDoc. When enabled the spawned script's\nstdout/stderr is redirected into `tmp/logs/<identifier>.txt`; when disabled the\nscript is invoked without redirection. Preserve platform-specific handling\n(Windows vs. Unix) and clarify runner/background execution with comments.\nMinor style tweaks to callback spacing.\n\nBREAKING CHANGE: default behavior changed from redirecting output to NOT\nredirecting it. Callers that expect logs must now pass `$redirectOutput = true`.",
    "files": [
      "func.php"
    ]
  },
  {
    "hash": "d1b1890483be4beec00d916d86bfa2bacbc621eb",
    "date": "2025-10-04T10:29:52+07:00",
    "message": "feat(admin): add unauthenticated/unauthorized UI, dark-mode spinner and debug logs\n\n- show a \"Not signed in\" card with Sign in button when user is not authenticated\n- show an \"Access denied\" card for authenticated but non-admin users\n- update loading spinner with dark: variants (dark:border-blue-300, dark:bg-gray-800)\n- add mounted guard and console debug for getUserInfo response to aid troubleshooting\n- avoid rendering a blank page when admin access is missing\n\nNo breaking changes.",
    "files": [
      "src/react/pages/Admin.tsx"
    ]
  },
  {
    "hash": "29c56ee3a848b608ab190861af72fc391918e575",
    "date": "2025-10-03T18:08:25+07:00",
    "message": "refactor(env): add PHPDoc and return types for is_cli and is_admin\n\n- Add detailed PHPDoc for `is_cli()` and `is_admin()` explaining behaviour and return values.\n- Add explicit `: bool` return type declarations.\n- Document that `is_admin()` throws `RuntimeException` if called in web context without a started session.\n- Improve CLI detection check to verify non-empty `$_SERVER['argv']`.",
    "files": [
      "src/database/env.php"
    ]
  },
  {
    "hash": "35934a0bc9bcab6fbc93b6a51201a417ffb2e65f",
    "date": "2025-10-03T15:05:02+07:00",
    "message": "feat(details): make DetailsCell preview/copy configurable and use for user_agent\n\n- Add props to `DetailsCell`: `showCopy` (default true), `previewLength` (default 200),\n  and `oneLinePreviewLength` (default 120).\n- Replace hard-coded truncation with the configurable `previewLength` / `oneLinePreviewLength`.\n- Make copy buttons conditional on `showCopy`.\n- Render `user_agent` using `DetailsCell` (with `showCopy={false}` and shorter previewLength)\n  in `UserActivityCard` and `LogsSection` so UA values are expandable and wrapped.\n- Update table-cell logic to treat `user_agent` as long data (adjust classes/innerClass).\n\nNo breaking changes.",
    "files": [
      "src/react/components/DetailsCell.tsx",
      "src/react/pages/admin/LogsSection.tsx",
      "src/react/pages/dashboard/UserActivityCard.tsx"
    ]
  },
  {
    "hash": "b02f927c1f8f2f97d8446f5265196f8e7e83899b",
    "date": "2025-10-03T14:49:22+07:00",
    "message": "refactor(admin-logs,user-activity): remove auto-polling, add explicit fetch handlers and helper for total extraction",
    "files": [
      "src/react/pages/admin/LogsSection.tsx",
      "src/react/pages/dashboard/UserActivityCard.tsx"
    ]
  },
  {
    "hash": "2e3e96ea6de29f57a4df1f86604c7fb0cf51c68a",
    "date": "2025-10-03T12:09:15+07:00",
    "message": "feat(components): add reusable DetailsCell and wire into logs views\n\n- Add new component `src/react/components/DetailsCell.tsx`\n  - Safe JSON parse + pretty print\n  - Compact preview, expand/collapse, copy-to-clipboard\n  - Whitespace-preserving wrapping to avoid widening tables\n- Refactor admin logs table to use `DetailsCell` for objects and long strings\n  - `src/react/pages/admin/LogsSection.tsx` now imports and uses `DetailsCell`\n  - Constrain details column to prevent layout breakage\n- Refactor dashboard activity table to use `DetailsCell`\n  - `src/react/pages/dashboard/UserActivityCard.tsx` now imports and uses `DetailsCell`\n  - Removed duplicated local helpers / inline DetailsCell implementations\n\nNo breaking changes; purely UI/component refactor and behavior improvements.",
    "files": [
      "src/react/components/DetailsCell.tsx",
      "src/react/pages/admin/LogsSection.tsx",
      "src/react/pages/dashboard/UserActivityCard.tsx"
    ]
  },
  {
    "hash": "746d6a279788fdd5db617ee766d28ca30c2c8f95",
    "date": "2025-10-01T15:09:54Z",
    "message": "build(deps-dev): update squizlabs/php_codesniffer requirement || ^4.0\n\nUpdates the requirements on [squizlabs/php_codesniffer](https://github.com/PHPCSStandards/PHP_CodeSniffer) to permit the latest version.\n- [Release notes](https://github.com/PHPCSStandards/PHP_CodeSniffer/releases)\n- [Changelog](https://github.com/PHPCSStandards/PHP_CodeSniffer/blob/4.x/CHANGELOG-4.x.md)\n- [Commits](https://github.com/PHPCSStandards/PHP_CodeSniffer/compare/3.0.0...4.0.0)\n\n---\nupdated-dependencies:\n- dependency-name: squizlabs/php_codesniffer\n  dependency-version: 4.0.0\n  dependency-type: direct:development\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>",
    "files": [
      "composer.json"
    ]
  },
  {
    "hash": "aa3de303130541608b27dcb6a37f335d34922eef",
    "date": "2025-10-01T15:09:10Z",
    "message": "build(deps-dev): bump vite from 7.1.4 to 7.1.7\n\nBumps [vite](https://github.com/vitejs/vite/tree/HEAD/packages/vite) from 7.1.4 to 7.1.7.\n- [Release notes](https://github.com/vitejs/vite/releases)\n- [Changelog](https://github.com/vitejs/vite/blob/main/packages/vite/CHANGELOG.md)\n- [Commits](https://github.com/vitejs/vite/commits/v7.1.7/packages/vite)\n\n---\nupdated-dependencies:\n- dependency-name: vite\n  dependency-version: 7.1.7\n  dependency-type: direct:development\n  update-type: version-update:semver-patch\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>",
    "files": [
      "package.json"
    ]
  },
  {
    "hash": "bce5220f502480dd3922ff1e503f0278f4628045",
    "date": "2025-10-01T15:08:40Z",
    "message": "build(deps): bump actions/setup-python from 5 to 6\n\nBumps [actions/setup-python](https://github.com/actions/setup-python) from 5 to 6.\n- [Release notes](https://github.com/actions/setup-python/releases)\n- [Commits](https://github.com/actions/setup-python/compare/v5...v6)\n\n---\nupdated-dependencies:\n- dependency-name: actions/setup-python\n  dependency-version: '6'\n  dependency-type: direct:production\n  update-type: version-update:semver-major\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>",
    "files": [
      ".github/workflows/checker-php.yml",
      ".github/workflows/checker-python.yml",
      ".github/workflows/clean-caches.yml"
    ]
  },
  {
    "hash": "70f4395fabc1ac442e38e974ba8ac19f74ae98c8",
    "date": "2025-10-01T15:08:36Z",
    "message": "build(deps): bump actions/setup-node from 4 to 5\n\nBumps [actions/setup-node](https://github.com/actions/setup-node) from 4 to 5.\n- [Release notes](https://github.com/actions/setup-node/releases)\n- [Commits](https://github.com/actions/setup-node/compare/v4...v5)\n\n---\nupdated-dependencies:\n- dependency-name: actions/setup-node\n  dependency-version: '5'\n  dependency-type: direct:production\n  update-type: version-update:semver-major\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>",
    "files": [
      ".github/workflows/checker-php.yml",
      ".github/workflows/checker-python.yml",
      ".github/workflows/clean-caches.yml",
      ".github/workflows/github-pages.yml"
    ]
  },
  {
    "hash": "d170745c03da8fa7c5412b6784ab864dd71a3425",
    "date": "2025-10-01T18:41:39+07:00",
    "message": "feat(server): resolve public IP when REMOTE_ADDR is localhost and cache results\n\n- When `$_SERVER['REMOTE_ADDR']` is `127.0.0.1`, call `getPublicIP()` to obtain the machine's public IP\n- Add `getPublicIP()` with:\n  - in-memory and file caching (1 hour expiry)\n  - multiple fallback IP services with short timeouts for fast failover\n  - pre-configured cURL options for reliability\n- Add `parseIpResponse()` to handle text/json/trace responses and validate IPs\n- Add `cacheIp()` helper to persist IP to file and update in-memory cache\n\nThis improves accuracy for detecting client/server public IPs in local environments and reduces external calls via caching.",
    "files": [
      "src/PhpProxyHunter/Server.php"
    ]
  },
  {
    "hash": "e3ced70fd76d74ac3fa60771e801a85e3e1b7043",
    "date": "2025-10-01T16:53:46+07:00",
    "message": "feat(utils/number): add fixPhoneNumber and comprehensive tests\n\n- Add `fixPhoneNumber` to `src/utils/number.js` to normalize and clean phone numbers:\n  - Handles null/undefined -> '' and numeric 0 -> '0'\n  - Converts numeric inputs to strings and strips all non-digit characters\n  - Includes examples and clear JSDoc\n- Add extensive unit tests in `tests/utils/fixPhoneNumber.test.js` covering:\n  - Various formatting styles, international formats, special characters, edge cases, numeric inputs, and malformed inputs\n\nTests: new file `tests/utils/fixPhoneNumber.test.js`",
    "files": [
      "src/utils/number.js",
      "tests/utils/fixPhoneNumber.test.js"
    ]
  },
  {
    "hash": "0bd1e3eb7bfc9c53ca28b74e5bed090c97cc5f6f",
    "date": "2025-10-01T16:51:39+07:00",
    "message": "refactor(proxy/extractor): remove unused extractProxiesFromFile helper\n\n- Delete obsolete `extractProxiesFromFile` function that read and parsed IP:PORT lines from a file\n- Reduce code size and surface area; proxy extraction now relies on existing extraction utilities\n\nBREAKING CHANGE: If any external code depended on `extractProxiesFromFile`, update callers to use `extractProxiesToObject` or inline file reading logic.",
    "files": [
      "src/proxy/extractor.js"
    ]
  },
  {
    "hash": "5639cf2405d678946ba425ea05c9fb4a615bb267",
    "date": "2025-10-01T16:50:25+07:00",
    "message": "fix(git-history): increase default commit limit from 100 to 1000 to prevent buffer issues",
    "files": [
      "src/dev/git-history.builder.ts"
    ]
  },
  {
    "hash": "6e46f99dd85ecbf729ce7b8bf805f14ce60983c2",
    "date": "2025-10-01T16:49:30+07:00",
    "message": "fix(dev/git-history): limit git log output and increase buffer to prevent overflow\n\n- Set a default commit limit when no range options provided (defaults to last 100 commits)\n- Increase execSync maxBuffer to 50MB to avoid buffer overflow on large git logs\n- Update git-history builder to pass `{ last: 100 }` by default\n\nCloses: reduce risk of crashes when generating git history JSON",
    "files": [
      "src/dev/git-history-to-json.ts",
      "src/dev/git-history.builder.ts"
    ]
  },
  {
    "hash": "9b7d52060509b9764a665e78afa9538991e07cb8",
    "date": "2025-10-01T12:01:37+07:00",
    "message": "feat(dashboard/user-activity): make header responsive and show icon-only controls on mobile\n\n- make header title responsive (flex-1, min-w-0, truncate/break-words) to avoid overlap on small screens\n- pin title icon (flex-shrink-0) and prevent refresh button overflow (flex-shrink-0, ml-0 sm:ml-4)\n- refresh button: icon-only on mobile, text on desktop, add aria-label for accessibility\n- pagination Prev/Next: show chevrons on mobile and text on desktop, add aria-labels and small responsive spacing",
    "files": [
      "src/react/pages/dashboard/UserActivityCard.tsx"
    ]
  },
  {
    "hash": "e48d1436c7293f7a0b9f353e4df260f4c57be74d",
    "date": "2025-10-01T09:57:42+07:00",
    "message": "feat(dashboard): add manual refresh to user activity and shorten title\n\n- Add `isMountedRef` and `handleRefresh` to `UserActivityCard.tsx` to allow manual refresh of user logs and avoid state updates after unmount\n- Add a refresh button to the `UserActivityCard` header that calls `handleRefresh` (disabled while loading)\n- Shorten locale key `user_activity_title` in `src/react/locales/en.json` and `src/react/locales/id.json` to \"Activity — {{user}}\"",
    "files": [
      "src/react/locales/en.json",
      "src/react/locales/id.json",
      "src/react/pages/dashboard/UserActivityCard.tsx"
    ]
  },
  {
    "hash": "3df89117e5a900b661d7247e7751dd78b9ce5022",
    "date": "2025-10-01T08:57:47+07:00",
    "message": "feat(logs): include entries targeting user in user logs\n\nInclude log entries where `target_user_id` matches the authenticated user in addition to entries where `user_id` matches. This ensures actions performed on a user (for example by admins) are shown in that user's log view.",
    "files": [
      "php_backend/logs.php"
    ]
  },
  {
    "hash": "560fa10cc3401f89f0c6d586462793cca508a07a",
    "date": "2025-10-01T08:34:56+07:00",
    "message": "feat(admin): require admin role for Admin page\n\n- Add `isAdmin` state to `src/react/pages/Admin.tsx`.\n- Set `isAdmin` from backend response (`data.admin === true`) during auth check.\n- Only render Admin page when user is authenticated and has admin=true.\n- Preserve existing auth redirect and loading behavior.",
    "files": [
      "src/react/pages/Admin.tsx"
    ]
  },
  {
    "hash": "5d7f487e813dca44f381ef6bf6bf5d4720245015",
    "date": "2025-10-01T08:32:54+07:00",
    "message": "refactor(auth): use getUserInfo helper for auth checks in Dashboard and Admin\n\n- Replace manual createUrl/fetch calls with centralized `getUserInfo()` (axios)\n  in `src/react/pages/Dashboard.tsx` and `src/react/pages/Admin.tsx`.\n- Use async/await IIFE with a `mounted` guard to avoid state updates after\n  unmounting.\n- Preserve redirect to `/login` and existing loading spinner behavior.\n- Rename unused catch param to `_err` and remove the now-unused `createUrl` import.",
    "files": [
      "src/react/pages/Admin.tsx",
      "src/react/pages/Dashboard.tsx"
    ]
  },
  {
    "hash": "2c79355617171fe17bc8ef4f6334045f27d109a2",
    "date": "2025-10-01T08:30:09+07:00",
    "message": "feat(auth): add client-side auth guard + loading state to Admin and Dashboard\n\n- Add authentication check using `/php_backend/user-info.php` in\n  `src/react/pages/Admin.tsx` and `src/react/pages/Dashboard.tsx`.\n- Redirect unauthenticated users to `/login`.\n- Show a centered loading spinner while auth check is in progress.\n- Prevent rendering page content until authentication succeeds.\n\nThis ensures both pages enforce the same client-side access control and\nprovide a consistent UX while verifying user session.",
    "files": [
      "src/react/pages/Admin.tsx",
      "src/react/pages/Dashboard.tsx"
    ]
  },
  {
    "hash": "c0c4b3bcca8cb4ad2a817f0f8478cd4c4c53a0b4",
    "date": "2025-10-01T07:17:31+07:00",
    "message": "fix(routes): update titles for admin and dashboard pages to reflect new branding",
    "files": [
      "src/react/routes.json"
    ]
  },
  {
    "hash": "d8a4d3a65308e191fe7c653fa601c924b60c66ec",
    "date": "2025-10-01T07:16:45+07:00",
    "message": "fix: update title assignment in pageview tracking to default to 'N/A'",
    "files": [
      "src/react/index.tsx"
    ]
  },
  {
    "hash": "a0a162531dcef15aec86b488aeb67ef6fc8b9d1d",
    "date": "2025-10-01T06:16:10+07:00",
    "message": "feat(husky): add crontab application for VPS in post-merge hook",
    "files": []
  },
  {
    "hash": "3533ba6c52853f4f8eb524ef2f0b1d8a449b6731",
    "date": "2025-10-01T06:13:33+07:00",
    "message": "fix(crontab): comment out send_curl.php execution in hourly job",
    "files": [
      ".crontab.sh"
    ]
  },
  {
    "hash": "e77f093e304821e041a1db629f5f1dda7f97bf41",
    "date": "2025-10-01T06:12:52+07:00",
    "message": "fix(crontab): remove redundant php command from hourly job",
    "files": [
      ".crontab.sh"
    ]
  },
  {
    "hash": "239bd268993442a1526ac40dea34a99f2b9a0a09",
    "date": "2025-10-01T06:11:47+07:00",
    "message": "refactor: move mergeDB.php to artisan directory and update paths\n\n- Move mergeDB.php from root to artisan/mergeDB.php\n- Update require path from func-proxy.php to shared.php in php_backend\n- Replace hardcoded source directory with tmp() function call\n- Fix relative paths for database.sqlite and output files\n- Maintain functionality while improving project structure",
    "files": [
      "artisan/mergeDB.php"
    ]
  },
  {
    "hash": "847763f5e4aced154e559cad82fe2ce02fe18da4",
    "date": "2025-10-01T06:11:09+07:00",
    "message": "feat(crontab): add proxyCollector script execution to hourly job",
    "files": [
      ".crontab.sh"
    ]
  },
  {
    "hash": "cc0776d0786b04fa0dfcf85d409b323e9c1dbc96",
    "date": "2025-10-01T06:06:28+07:00",
    "message": "feat(react): add Google Analytics 4 tracking integration\n\n- Add react-ga4 dependency to package.json\n- Initialize GA4 with tracking ID G-BG75CLNJZ1\n- Implement automatic pageview tracking with custom titles\n- Refactor main app into MainApp component for better organization\n- Track route changes and page navigation events",
    "files": [
      "package.json",
      "src/react/index.tsx"
    ]
  },
  {
    "hash": "33600d47e863a61f89e3ea03e4e9c56a75e042b1",
    "date": "2025-10-01T02:28:12+07:00",
    "message": "feat(mergeDB): add proxy authentication support for database operations\n\n- Modify SQL queries to fetch username and password fields\n- Build proxy strings with auth format (USER:PASS@IP:PORT) when credentials exist\n- Add deduplication with array_unique for both source and target proxies\n- Maintain backward compatibility for proxies without authentication",
    "files": [
      "mergeDB.php"
    ]
  },
  {
    "hash": "d10ab1a51d82b5998e1b0815fe4ff6d2823e67cf",
    "date": "2025-10-01T02:23:39+07:00",
    "message": "fix(database): resolve undefined variable error in mergeDB script\n\n- Add $allSourceProxies array to collect proxy data during loop iteration\n- Move proxy collection logic inside foreach loop where $sourceDb is in scope\n- Implement proper error handling for proxy export operations\n- Replace broken post-loop $sourceDb access with collected proxy data\n- Add warning messages for databases without proxies table\n- Ensure proxy export works even when target database is empty\n\nFixes fatal error: \"Call to a member function query() on null\" caused by accessing $sourceDb outside its scope",
    "files": [
      "mergeDB.php",
      "proxyManager.php"
    ]
  },
  {
    "hash": "7aa810c92f21929e528bf383420d356f37965562",
    "date": "2025-10-01T02:14:46+07:00",
    "message": "fix(database): add cross-database compatibility to filterPortsDuplicate\n\n- Add shared database instance support via php_backend/shared.php\n- Implement PDO driver detection using getAttribute method\n- Replace hardcoded SQLite syntax with database-specific SQL functions\n- Fix MySQL compatibility issues with SUBSTR, datetime, and RANDOM functions\n- Update DELETE statements to handle different row ID fields (id vs _rowid_)\n- Improve lock file handling with directory creation and file validation\n- Replace ProxyDB instantiation with global $proxy_db instance\n- Standardize date parameter binding for better SQL injection prevention",
    "files": [
      "artisan/filterPortsDuplicate.php"
    ]
  },
  {
    "hash": "bcd562201e0d37da7fcd8770e36ec65b9298aea7",
    "date": "2025-10-01T01:59:18+07:00",
    "message": "refactor(proxy-checker): migrate to shared database and strict types\n\n- Add strict type declarations to both files\n- Switch from func-proxy.php to php_backend/shared.php for better modularity\n- Replace ProxyDB instantiation with global $proxy_db instance\n- Add return type annotations to functions (void, array)\n- Update write_working function to accept optional ProxyDB parameter\n- Pass database instance to write_working calls for consistency\n- Fix duplicate global variable declaration\n- Reorder use statements for better organization\n- Fix ini_set parameter to use string value for type safety",
    "files": [
      "proxyCheckerParallel-func.php",
      "proxyCheckerParallel.php"
    ]
  },
  {
    "hash": "4cbf75fc37c42ea45b1a0aff82c9bf8e194ef3d8",
    "date": "2025-10-01T01:57:55+07:00",
    "message": "refactor(artisan): update filterPorts.php to use shared database and project root\n\n- Replace PROJECT_ROOT constant with $projectRoot variable\n- Switch from func-proxy.php to php_backend/shared.php for better modularity\n- Remove ProxyDB import and use global $proxy_db instance\n- Update all PROJECT_ROOT references to use $projectRoot variable\n- Add $projectRoot to processProxy function globals for consistency",
    "files": [
      "artisan/filterPorts.php"
    ]
  },
  {
    "hash": "e8fb8c888f59d0426681bba7db40eec6974485ef",
    "date": "2025-10-01T01:55:35+07:00",
    "message": "fix(database): enhance select method with ORDER BY and LIMIT support\n\n- Add orderBy and limit parameters to BaseSQL abstract select method\n- Implement ORDER BY and LIMIT clauses in MySQLHelper and SQLiteHelper select methods\n- Add getRandomFunction() helper in ProxyDB to handle database-specific RANDOM functions\n- Refactor proxy retrieval methods to use new select method signature\n- Fix SQL syntax errors caused by concatenating ORDER BY and LIMIT to WHERE clauses\n- Improve code maintainability by centralizing query building logic\n\nBREAKING CHANGE: select method signature now includes additional optional parameters for orderBy and limit",
    "files": [
      "src/PhpProxyHunter/BaseSQL.php",
      "src/PhpProxyHunter/MySQLHelper.php",
      "src/PhpProxyHunter/ProxyDB.php",
      "src/PhpProxyHunter/SQLiteHelper.php"
    ]
  },
  {
    "hash": "a1e28bed98c73154ebbe978410fa9cea17f21a49",
    "date": "2025-09-30T21:18:05+07:00",
    "message": "feat(proxyRespawner): use shared database and add multi-database support\n\n- Replace direct ProxyDB instantiation with shared $proxy_db instance\n- Include shared.php instead of func-proxy.php for better dependency management\n- Add database driver detection for SQLite and MySQL compatibility\n- Implement driver-specific SQL queries for date operations and random ordering\n- Add exception handling for unsupported database drivers",
    "files": [
      "proxyRespawner.php"
    ]
  },
  {
    "hash": "3f10e19cbb5cb902e73c3694d83cc036631d23e7",
    "date": "2025-09-30T21:16:30+07:00",
    "message": "fix(geoIp): use shared database instance and pass db parameter to extractProxies\n\n- Include shared.php to access global $proxy_db instance\n- Replace direct ProxyDB instantiation with shared $proxy_db\n- Pass database parameter to extractProxies function to prevent null reference errors",
    "files": [
      "geoIp.php"
    ]
  },
  {
    "hash": "3b6e80b3069181be18e2f844e03c9af965206e74",
    "date": "2025-09-30T21:02:03+07:00",
    "message": "refactor: remove unused ProxyDB import and instance from func.php\n\n- Remove unused PhpProxyHunter\\ProxyDB import\n- Remove unused $db = new ProxyDB() instantiation\n- Clean up dead code to improve maintainability",
    "files": [
      "func.php"
    ]
  },
  {
    "hash": "68cc50028c9a517df890b4fbb34bc90b35d06c04",
    "date": "2025-09-30T21:00:17+07:00",
    "message": "feat: add function to retrieve current authenticated user data",
    "files": [
      "php_backend/shared.php"
    ]
  },
  {
    "hash": "d03a47d5fcfdf62d6b749d612c2de109bb0f8c79",
    "date": "2025-09-30T20:57:36+07:00",
    "message": "fix: use shared ProxyDB instance in scanPorts.php\n\n- Use shared ProxyDB instance from php_backend/shared.php instead of creating new instance\n- Pass ProxyDB instance to extractProxies function to prevent null reference error\n- Add required global variables to access shared database connection",
    "files": [
      "scanPorts.php"
    ]
  },
  {
    "hash": "6c2fe30cc5acb2f4d72547fa1d3cf0a37181f78a",
    "date": "2025-09-30T20:54:26+07:00",
    "message": "refactor: replace ProxyDB instantiation with shared instance in proxyChecker\n\n- Add dependency on shared.php for centralized database access\n- Replace new ProxyDB() with shared $proxy_db variable\n- Remove unused ProxyDB import\n- Add $proxy_db to global variable declaration",
    "files": [
      "proxyChecker.php"
    ]
  },
  {
    "hash": "3ea976924f63df122bff7c4825b4b902f836c63c",
    "date": "2025-09-30T20:52:23+07:00",
    "message": "refactor: replace ProxyDB instantiation with shared instance in CIDR-check\n\n- Add dependency on shared.php for centralized database access\n- Replace new ProxyDB() with shared $proxy_db variable\n- Remove unused ProxyDB import\n- Add $proxy_db to global variable declaration and closure use statement",
    "files": [
      "cidr-information/CIDR-check.php"
    ]
  },
  {
    "hash": "347e338d7684d83c70485b07972d4df491e62e55",
    "date": "2025-09-30T20:50:34+07:00",
    "message": "refactor(proxyCollector): use shared ProxyDB instance\n\n- Included shared.php to access global $proxy_db.\n- Replaced direct instantiation of ProxyDB with shared instance.\n- Extended globals to include $proxy_db alongside $isWin and $isCli.",
    "files": [
      "artisan/proxyCollector.php"
    ]
  },
  {
    "hash": "7b87bc162620c345ac728d12dd6ecc247420cb4f",
    "date": "2025-09-30T20:49:22+07:00",
    "message": "refactor(proxyWorking): use global ProxyDB instance instead of instantiation",
    "files": [
      "artisan/proxyWorking.php"
    ]
  },
  {
    "hash": "5e430ca6e6dea20cb988cf2621cc7cf97c78ae33",
    "date": "2025-09-30T20:42:17+07:00",
    "message": "refactor(list): use shared ProxyDB instance and improve access checks\n\n- Replaced direct inclusion of func-proxy.php with shared.php.\n- Introduced global $proxy_db for database access instead of creating a new instance.\n- Added explicit error handling when ProxyDB instance is not available.\n- Updated access control to allow CLI while enforcing cookie/session checks for web requests.",
    "files": [
      "list.php"
    ]
  },
  {
    "hash": "a42dfeccf743f77ae1a8548eed906591897081d0",
    "date": "2025-09-30T20:40:54+07:00",
    "message": "fix(geoip): throw exception when ProxyDB instance is missing\n\n- Replaced silent ProxyDB instantiation with InvalidArgumentException to enforce explicit dependency.",
    "files": [
      "src/PhpProxyHunter/GeoIpHelper.php"
    ]
  },
  {
    "hash": "09b4b57d2a2c1a30612ccb57522c5adb76b4b160",
    "date": "2025-09-30T20:39:13+07:00",
    "message": "fix(proxy): require ProxyDB instance when write_database is true\n\n- Changed default value of `write_database` from `true` to `false` in `extractProxies`.\n- Added explicit exception when `write_database` is true but no ProxyDB instance is provided.",
    "files": [
      "src/utils/proxy/extractor.php"
    ]
  },
  {
    "hash": "ab73d292e4c76ef9dac7c462d902563dd0e3b34d",
    "date": "2025-09-30T20:35:12+07:00",
    "message": "refactor: replace ProxyDB instantiation with shared instance in proxy-checker\n\n- Remove unused ProxyDB import\n- Add proxy_db to global declaration\n- Replace new ProxyDB() with shared $proxy_db variable\n- Improve memory efficiency by reusing existing database connection",
    "files": [
      "php_backend/proxy-checker.php"
    ]
  },
  {
    "hash": "68accdfbd743a9ec67c6b783495c1f41756c2b1e",
    "date": "2025-09-28T21:54:49+07:00",
    "message": "feat: expose environment variables to admin users and fix quote handling\n\n- Add global $pairs array to track loaded environment variables\n- Implement getEnvPairs() function to return environment variable pairs\n- Expose environment variables in config for admin users only\n- Always strip surrounding quotes from .env values to prevent invalid formatting\n- Track variables in both Dotenv and manual .env parsing paths",
    "files": [
      "info.php",
      "src/database/env.php"
    ]
  },
  {
    "hash": "f2ebe6144b1e8f55faf83ceb68d3808f8f062da8",
    "date": "2025-09-28T19:33:10+07:00",
    "message": "feat: prioritize index.php over index.html in directory index\n\n- Add DirectoryIndex directive to .htaccess to prioritize index.php first, then index.html\n- Update nginx configuration to search for index.php before index.html and index.htm\n- Ensure consistent directory index behavior across Apache and Nginx web servers",
    "files": [
      ".htaccess",
      ".htaccess_nginx.conf"
    ]
  },
  {
    "hash": "b696c955a201c3f2cef4dacd8daa87faea5c37f1",
    "date": "2025-09-28T17:58:43+07:00",
    "message": "feat(changelog): restrict file changes visibility to admin users only\n\n- Add admin role checking with getUserInfo integration\n- Implement conditional rendering for commit file changes\n- Show placeholder message for non-admin users with lock icon\n- Add Nullable type import for improved type safety\n- Maintain existing functionality while adding access control layer",
    "files": [
      "src/react/pages/Changelog.tsx"
    ]
  },
  {
    "hash": "33b71b54941d725367721e237569e31eff9960da",
    "date": "2025-09-28T17:53:01+07:00",
    "message": "feat: add maintenance mode during build process\n\n- Add maintenance mode check in index.php that serves maintenance page when build lock exists\n- Create build lock file during Vite build process to trigger maintenance mode\n- Ensure lock directories are created before writing lock files\n- Clean up build lock file on process exit\n- Refactor lock file setup to handle both dev server and build scenarios",
    "files": [
      "index.php",
      "vite-plugin.js"
    ]
  },
  {
    "hash": "cb31bd580046039a109dc7e50aedf420c69b672d",
    "date": "2025-09-28T17:47:57+07:00",
    "message": "feat: add ssh2 and ssh2-sftp-client dependencies with type definitions",
    "files": [
      "package.json"
    ]
  },
  {
    "hash": "4090ea8d29feabb36ecc5273b6883f75fb3b09e6",
    "date": "2025-09-28T17:33:51+07:00",
    "message": "feat: load additional autoload.php files from xl subdirectories",
    "files": [
      "src/autoload.php"
    ]
  },
  {
    "hash": "76e604020713f4e7331852ca56498a80b4ab1b20",
    "date": "2025-09-28T17:27:49+07:00",
    "message": "feat(php_backend): add audit logging and admin validation to refill-saldo\n\n- Remove redundant func.php include (functionality moved to shared.php)\n- Add log_db and user_db to global scope\n- Add current admin user validation with exception handling\n- Implement comprehensive audit logging for topup operations\n- Log both 'set' and 'add' saldo operations with detailed metadata\n- Include amount, method, operation type, and existing saldo in logs",
    "files": [
      "php_backend/refill-saldo.php"
    ]
  },
  {
    "hash": "1cc8e5db02350a7e5a7d2ede2b64e02f84cb5720",
    "date": "2025-09-28T09:35:15+07:00",
    "message": "feat: add proxy submission endpoint with React integration\n\n- Add new PHP backend endpoint at php_backend/proxy-add.php to handle proxy submissions\n- Integrate fetch API call in ProxySubmission component to send proxy data to backend\n- Backend saves submitted proxies to user-specific files in assets/proxies directory\n- Add proper JSON response handling with status codes and error messages",
    "files": [
      "php_backend/proxy-add.php",
      "src/react/pages/ProxyList/ProxySubmission.tsx"
    ]
  },
  {
    "hash": "3d7ff3826a958d148ad5bccecb9052aa0ec5152d",
    "date": "2025-09-27T16:17:40+07:00",
    "message": "refactor: move SimpleFormSaverDemo to examples directory\n\n- Move src/react/pages/SimpleFormSaverDemo.tsx to src/react/pages/examples/SimpleFormSaverDemo.tsx\n- Update import path in src/react/index.tsx to reflect new location\n- Fix relative import path for CleanFormSaverExamples within the moved file",
    "files": [
      "src/react/index.tsx",
      "src/react/pages/examples/SimpleFormSaverDemo.tsx"
    ]
  },
  {
    "hash": "fbafdbd4c475110829a63f385fcd3054548042f7",
    "date": "2025-09-27T16:16:49+07:00",
    "message": "refactor: move SnackBarSample from samples to examples directory\n\n- Move src/react/pages/samples/SnackBarSample.tsx to src/react/pages/examples/SnackBarSample.tsx\n- Update import path in src/react/index.tsx to reflect new location",
    "files": [
      "src/react/index.tsx",
      "src/react/pages/examples/SnackBarSample.tsx"
    ]
  },
  {
    "hash": "2e4920a4132e561670e06831c20d963914f949fb",
    "date": "2025-09-27T16:03:57+07:00",
    "message": "feat: add jquery-form-saver integration with React demo pages\n\n- Add jquery-form-saver dependency to package.json\n- Create SimpleFormSaverDemo page with three example implementations\n- Add CleanFormSaverExamples component with settings, contact, and dynamic form demos\n- Add new route /examples/form-saver for form saver demonstrations\n- Implement ReactFormSaver component wrapper and useFormSaver hook examples",
    "files": [
      "package.json",
      "src/react/index.tsx",
      "src/react/pages/SimpleFormSaverDemo.tsx",
      "src/react/pages/examples/CleanFormSaverExamples.tsx"
    ]
  },
  {
    "hash": "c901a2937d9582d3f730f69f2328f6175e154461",
    "date": "2025-09-27T16:02:57+07:00",
    "message": "fix(tsconfig): restore moduleResolution setting to 'node'",
    "files": [
      "tsconfig.whatsapp.json"
    ]
  },
  {
    "hash": "e748a1efe334ed66149ada1a77a1ef655ac0a54f",
    "date": "2025-09-27T16:01:46+07:00",
    "message": "fix(tsconfig): change moduleResolution from 'node' to 'bundler'",
    "files": [
      "tsconfig.json"
    ]
  },
  {
    "hash": "18a480e7b606e60e931aab48433b2e34f6e7cf65",
    "date": "2025-09-27T14:38:18+07:00",
    "message": "feat: add ignored folders for git repository scanning",
    "files": [
      ".vscode/settings.json"
    ]
  },
  {
    "hash": "392363a4e1f621f07d01a557752c3a7ec8eb519b",
    "date": "2025-09-27T12:08:22+07:00",
    "message": "feat: add ProxySubmission component for proxy data submission and validation",
    "files": [
      "src/react/pages/ProxyList.tsx",
      "src/react/pages/ProxyList/ProxySubmission.tsx"
    ]
  },
  {
    "hash": "e3e1dea9d76386ac51023f40a214c6fcaaec3a81",
    "date": "2025-09-27T11:47:29+07:00",
    "message": "fix: invalid instruction file name",
    "files": [
      ".github/instructions/react.instructions.md"
    ]
  },
  {
    "hash": "e27a9fa498a37a7f2c4712a5f7389f1c66b0fa96",
    "date": "2025-09-26T18:59:22+07:00",
    "message": "fix(proxy): stop getPublicIP after first successful response\n\nPreviously, the function continued testing all IP services even after\nreceiving a successful response. Changed `break` to `break 2` to exit\nboth the proxy types loop and the services loop when a response is\nobtained, improving efficiency and preventing unnecessary API calls.",
    "files": [
      "func-proxy.php"
    ]
  },
  {
    "hash": "90dafd29442dd81c0eb6f2fec7ba4262bf7515e6",
    "date": "2025-09-26T18:57:10+07:00",
    "message": "feat: enhance getPublicIP function with debug output for response handling",
    "files": [
      "func-proxy.php"
    ]
  },
  {
    "hash": "454c8b589987794ba242a6e4a8dfff55eff59326",
    "date": "2025-09-26T18:55:36+07:00",
    "message": "feat: refactor getPublicIP test cases to use constants for proxy and timeout",
    "files": [
      "tests/proxy/getPublicIP.php"
    ]
  },
  {
    "hash": "8cf5493da1595b55aae1b6a0e1055d798196a04d",
    "date": "2025-09-26T18:53:09+07:00",
    "message": "feat: add initial Squid proxy configuration file for public access",
    "files": [
      ".htaccess_squid"
    ]
  },
  {
    "hash": "9a0c54d85bb1ef656d5a8cfafd660f0f3ad80052",
    "date": "2025-09-26T18:29:07+07:00",
    "message": "docs: update readme with TODO section for proxy parsing",
    "files": [
      "userscripts/readme.md"
    ]
  },
  {
    "hash": "9f7d11a027086749a65ba04451b672a9e2d0e8f9",
    "date": "2025-09-26T18:28:24+07:00",
    "message": "feat: enhance getPublicIP function with proxy type rotation and debug support\n\n- Add debug parameter to enable connection attempt logging\n- Implement proxy type rotation to automatically try different proxy protocols (http, socks4, socks5, etc.)\n- Separate proxy and non-proxy request handling logic for better reliability\n- Remove duplicate PHPDoc comments for cleaner code documentation\n- Improve proxy connection resilience by testing multiple proxy types",
    "files": [
      "func-proxy.php",
      "tests/proxy/getPublicIP.php"
    ]
  },
  {
    "hash": "29b9836d48dea3b3b93a0b4be60f966424eea88c",
    "date": "2025-09-26T18:17:45+07:00",
    "message": "feat: improve environment variable loading with enhanced type conversion\n\n- Add string shim include for PHP compatibility with str_starts_with()\n- Remove conditional dotenv loading to ensure consistent environment setup\n- Enhance manual .env parser with automatic type conversion for booleans, numbers, and JSON arrays\n- Improve .env file parsing robustness and data type handling",
    "files": [
      "src/database/env.php"
    ]
  },
  {
    "hash": "60a1a90f5848c3e898fec4e1eb8fb4e905231d99",
    "date": "2025-09-26T18:12:13+07:00",
    "message": "refactor: extract CLI detection logic into reusable function\n\n- Move CLI detection logic from func.php to new is_cli() function in src/database/env.php\n- Replace inline CLI detection with function call in func.php\n- Improves code reusability and maintainability",
    "files": [
      "func.php",
      "src/database/env.php"
    ]
  },
  {
    "hash": "0e62cbfe2649b2f663fdae83d127be0b250319eb",
    "date": "2025-09-26T17:43:15+07:00",
    "message": "feat(cmd-here): add script to set up custom PATH and workspace directory",
    "files": [
      "cmd-here.bat"
    ]
  },
  {
    "hash": "54bc91bb5ffb51a4f23caa3c9f8cdae99f0d9d72",
    "date": "2025-09-26T12:15:45+07:00",
    "message": "feat(ProxyData): add toString method for JSON representation",
    "files": [
      "src/proxy/ProxyData.js"
    ]
  },
  {
    "hash": "91cc6840751f780b55901d680a9b950b2d4e1d3c",
    "date": "2025-09-26T12:09:19+07:00",
    "message": "feat(proxy-checker): add support for 'socks4a' proxy type",
    "files": [
      "php_backend/proxy-checker.php"
    ]
  },
  {
    "hash": "0fe74fdb1ae836f5a9baefbb29c6e756b6aa5e25",
    "date": "2025-09-26T12:07:28+07:00",
    "message": "feat(buildCurl): add support for 'socks5h' proxy type with remote DNS resolution\n\n- Expanded the `buildCurl` function to support the 'socks5h' proxy type, enabling remote DNS/hostname resolution when CURLPROXY_SOCKS5_HOSTNAME is available.\n- Updated the PHPDoc for the `$type` parameter to document all supported proxy types, including detailed descriptions for 'http', 'socks4', 'socks4a', 'socks5', and 'socks5h'.\n- Improved proxy type handling by normalizing the type string and adding logic for 'socks5h' with fallback to CURLPROXY_SOCKS5 if necessary.",
    "files": [
      "func-proxy.php"
    ]
  },
  {
    "hash": "d3380c02081a2c9b9756280feee0f7db85685c1e",
    "date": "2025-09-26T12:04:23+07:00",
    "message": "refactor(env): move is_debug function from func.php to src/database/env.php",
    "files": [
      "func.php",
      "src/database/env.php"
    ]
  },
  {
    "hash": "692f503a1a8c21c7d04a49fdbb8c54e9eaf7b8fa",
    "date": "2025-09-26T12:00:46+07:00",
    "message": "refactor(autoload): initialize $loadedFiles with get_included_files for better tracking of loaded files",
    "files": [
      "src/autoload.php"
    ]
  },
  {
    "hash": "9dfb9b3b70414f46ea1ba17fc926bb7fce9593a2",
    "date": "2025-09-26T11:57:23+07:00",
    "message": "refactor: move str_starts_with shim to utils\n\n- extracted str_starts_with() polyfill from func.php into src/utils/shim/string.php\n- updated func.php to include the shim file for better organization and reuse",
    "files": [
      "func.php",
      "src/utils/shim/string.php"
    ]
  },
  {
    "hash": "bca7623077c39f7dee52a6fda3e1eead6c8f6950",
    "date": "2025-09-26T11:55:16+07:00",
    "message": "refactor: move request parsing helpers to utils and add autoload checks\n\n- moved parsePostData() and parseQueryOrPostBody() from func.php to src/utils/server/postdata.php\n- added runtime checks in src/autoload.php to ensure parseQueryOrPostBody() and is_debug_device() are available\n- improved structure by grouping request parsing logic under utils/server",
    "files": [
      "func.php",
      "src/autoload.php",
      "src/utils/server/postdata.php"
    ]
  },
  {
    "hash": "abfb87dce3c109bf09500898d3974ac03cd214fa",
    "date": "2025-09-26T11:51:06+07:00",
    "message": "refactor(autoload): add check for AUTOLOADER_INCLUDED to prevent multiple inclusions",
    "files": [
      "src/autoload.php"
    ]
  },
  {
    "hash": "5acdcfb6bda6920b027d4f958a555e3224b4f5e8",
    "date": "2025-09-26T11:45:55+07:00",
    "message": "refactor(autoload): optimize file loading by checking for previously loaded files",
    "files": [
      "src/autoload.php"
    ]
  },
  {
    "hash": "0d56737d215e7ece4c9cca2377e41deb42f9349d",
    "date": "2025-09-26T11:44:27+07:00",
    "message": "refactor(autoload): replace str_replace with preg_replace for file path normalization",
    "files": [
      "src/autoload.php"
    ]
  },
  {
    "hash": "e38be6f5feee17850973f0c4578ac47d489b95fb",
    "date": "2025-09-26T11:43:13+07:00",
    "message": "refactor(composer): remove CustomPasswordHasher.php from autoload files\n\n`src/autoload.php` will automated load it",
    "files": [
      "composer.json"
    ]
  },
  {
    "hash": "636e75545bed8239e5f6971fb69ceb4d05536a90",
    "date": "2025-09-26T11:30:33+07:00",
    "message": "refactor(Scheduler): correct method name from rand_str to randStr for consistency",
    "files": [
      "src/PhpProxyHunter/Scheduler.php"
    ]
  },
  {
    "hash": "8ef04af6e988080feb324629d11e63a442126001",
    "date": "2025-09-26T11:28:10+07:00",
    "message": "refactor(Scheduler): ensure $shutdown_functions is initialized as an array in execute method",
    "files": [
      "src/PhpProxyHunter/Scheduler.php",
      "tests/hashers/CustomPasswordHasherTest.php"
    ]
  },
  {
    "hash": "77e057b34b5ea8deb0321205be8ade0b025ad4c3",
    "date": "2025-09-26T11:20:49+07:00",
    "message": "refactor: move file helper functions to utils\n\n- relocated ensure_dir() and safe_unlink() from php_backend/proxy-checker.php to src/utils/file/index.php\n- centralizes file-related utilities for reuse and reduces duplication",
    "files": [
      "php_backend/proxy-checker.php",
      "src/utils/file/index.php"
    ]
  },
  {
    "hash": "7dfa7573508454d2f78954fbd56c553a462031aa",
    "date": "2025-09-26T11:04:06+07:00",
    "message": "refactor: move getPublicIP to func-proxy.php and improve getServerIp resolution\n\n- relocated getPublicIP() implementation from php_backend/proxy-checker.php to func-proxy.php for reuse\n- updated getServerIp() to:\n  - use a $result variable instead of multiple early returns\n  - check and replace local/private IPs (127.x / 192.168.x) with detected public IP\n  - ensure fallback logic works consistently across Windows and Linux\n- added optional caching and proxy support in getPublicIP()",
    "files": [
      "func-proxy.php",
      "php_backend/proxy-checker.php"
    ]
  },
  {
    "hash": "787e0e62a1293ee95edd7ff561a58a43fc9e5c75",
    "date": "2025-09-26T10:59:35+07:00",
    "message": "feat(env): load dotenv from project root and sync variables to getenv",
    "files": [
      "src/database/env.php"
    ]
  },
  {
    "hash": "049667d6306529389d4c46a95577f37b86b16725",
    "date": "2025-09-26T10:56:23+07:00",
    "message": "refactor(env): move is_debug_device function from func.php to src/database/env.php",
    "files": [
      "func.php",
      "src/database/env.php"
    ]
  },
  {
    "hash": "0666adeacdc38f5eb8a6f03b30f3f043461e6e71",
    "date": "2025-09-26T10:54:57+07:00",
    "message": "refactor(env): use environment variable for debug device detection\n\nRefactored the is_debug_device function to use the DEBUG_DEVICES environment variable (via $_ENV or getenv) instead of manually reading the .env file. This improves compatibility with dotenv and centralizes environment configuration. Added error logging if the variable is not set or empty.",
    "files": [
      "func.php"
    ]
  },
  {
    "hash": "86d1998db4e29d4ee8c0c455866deea37604bdd5",
    "date": "2025-09-26T10:49:19+07:00",
    "message": "docs(proxyChecker): enhance function documentation with detailed parameter descriptions and usage",
    "files": [
      "php_backend/proxy-checker.php"
    ]
  },
  {
    "hash": "94942c7f3a70a93790ba8a4e36f4bedb3234eb94",
    "date": "2025-09-26T09:59:23+07:00",
    "message": "refactor(proxy): improve proxy extraction logic and add comprehensive tests\n\n- Refactored `extractProxies` to use separate regex patterns for:\n  - `user:pass@ip:port`\n  - `ip:port@user:pass`\n  - plain `ip:port`\n  - whitespace-separated and JSON-formatted proxies\n- Ensured username and password are always set on the Proxy object, regardless of database write flag\n- Removed legacy parsing logic for mixed credential/proxy formats\n- Added PHPUnit tests for:\n  - JSON string extraction\n  - `user:pass@ip:port` format\n  - `ip:port@user:pass` format\n  - plain `ip:port` format\n  - extraction from long text containing a proxy",
    "files": [
      "src/utils/proxy/extractor.php",
      "tests/utils/proxy/ExtractProxiesTest.php"
    ]
  },
  {
    "hash": "d662a93854eb174f96db7c3f158f1aab15afa4da",
    "date": "2025-09-26T09:42:42+07:00",
    "message": "feat(proxy): enhance toJson method to filter empty properties",
    "files": [
      "src/PhpProxyHunter/Proxy.php"
    ]
  },
  {
    "hash": "c9a333dd25b2461d26fdf30ad56f7526f265b72a",
    "date": "2025-09-26T09:40:32+07:00",
    "message": "feat(proxy): add toJson method for JSON representation of Proxy object",
    "files": [
      "src/PhpProxyHunter/Proxy.php"
    ]
  },
  {
    "hash": "4bdbe93e6f44a0a3e81d5814fe6472d4b6669bf6",
    "date": "2025-09-26T09:33:37+07:00",
    "message": "fix(vite-plugin): only remove dev server lock file on exit if running in dev mode\n\n- Move isDevServer flag to module scope for global access.\n- Update exit handler to check isDevServer before deleting lock file.\n- Prevents lock file removal when not running the dev server.",
    "files": [
      "vite-plugin.js"
    ]
  },
  {
    "hash": "700a07dbec31034709c19ea93919f082c3438b32",
    "date": "2025-09-25T12:56:50+07:00",
    "message": "fix(proxy-checker): set username and password to null if empty",
    "files": [
      "php_backend/proxy-checker.php"
    ]
  },
  {
    "hash": "6a2e13a44bad65b16ddb345f0f890b414ca072f5",
    "date": "2025-09-25T12:48:09+07:00",
    "message": "fix(proxy): update ProxyData constructor to handle null values for proxy parameter",
    "files": [
      "src/proxy/ProxyData.js"
    ]
  },
  {
    "hash": "29e6f1198f77bb0af915b3298c0d7b5557e32831",
    "date": "2025-09-25T12:41:40+07:00",
    "message": "feat(proxy): add ProxyData class for managing proxy table data",
    "files": [
      "src/proxy/ProxyData.js"
    ]
  },
  {
    "hash": "1bf4ac0224b8dbc8f906dc39953e51ab9992a078",
    "date": "2025-09-25T12:28:37+07:00",
    "message": "feat(proxy-checker): enhance local IP detection to include localhost addresses",
    "files": [
      "php_backend/proxy-checker.php"
    ]
  },
  {
    "hash": "59ab3d58468f8841c7bf65a3f160a627e22db3e4",
    "date": "2025-09-25T12:27:47+07:00",
    "message": "feat(proxy-checker): resolve external IP when server IP is local network\n\n- Detects if current server IP is in local range (192.168.*) or debug device\n- Falls back to getPublicIP() to retrieve external IP for accurate proxy validation\n- Added logging of detected server IP with AnsiColors",
    "files": [
      "php_backend/proxy-checker.php"
    ]
  },
  {
    "hash": "46a9a6f3cb8c82400168620ea763832fbe88c8e1",
    "date": "2025-09-25T12:23:33+07:00",
    "message": "feat(info): resolve public IP when request IP is localhost\n\n- Added fallback to fetch external IP from api.ipify.org if detected IP is 127.0.0.1\n- Ensures accurate client IP detection for local requests",
    "files": [
      "info.php"
    ]
  },
  {
    "hash": "7595620dba50964d68b2db48d35f942c84491e20",
    "date": "2025-09-25T12:13:02+07:00",
    "message": "refactor(proxy): move validation functions into dedicated validator module\n\n- Created validator.js with isValidProxy, isValidIp, and isValidPort\n- Updated extractor.js, hunter.js, and proxyWorking.js to import isValidProxy from validator.js\n- Updated utils.js to import validation helpers from validator.js and removed inline implementations\n- Cleaned up default export in utils.js to exclude removed functions",
    "files": [
      "src/proxy/extractor.js",
      "src/proxy/hunter.js",
      "src/proxy/proxyWorking.js",
      "src/proxy/utils.js",
      "src/proxy/validator.js"
    ]
  },
  {
    "hash": "ec27d20b949d68089cddda21a458ada559ca6b5b",
    "date": "2025-09-25T11:56:26+07:00",
    "message": "refactor(log-viewer): export getUserProxyLogUrl function for external usage",
    "files": [
      "src/react/pages/ProxyList/LogViewer.tsx"
    ]
  },
  {
    "hash": "9fc1027bd0d4aba174544f1c9f045421feff52d8",
    "date": "2025-09-25T11:46:11+07:00",
    "message": "refactor(log-viewer): extract user proxy log URL fetch into helper\n\n- Moved user-info fetch logic into getUserProxyLogUrl() helper\n- Updated effect to use helper and handle failure with user-friendly message",
    "files": [
      "src/react/pages/ProxyList/LogViewer.tsx"
    ]
  },
  {
    "hash": "12bb06b448335899186b38cc73ea777efcfd3860",
    "date": "2025-09-25T11:37:53+07:00",
    "message": "fix(proxy-checker): correct error message and align database field name\n\n- Updated validation message to only require 'proxy' parameter\n- Renamed 'last_checked' to 'last_check' to match database schema",
    "files": [
      "php_backend/proxy-checker.php"
    ]
  },
  {
    "hash": "f9dea91f2e7e7251c04b491e356069c009bd33e9",
    "date": "2025-09-25T11:36:09+07:00",
    "message": "refactor(proxy-checker): extract proxyChecker function and improve type validation\n\n- Added proxyChecker() function to handle SSL and non-SSL proxy testing logic\n- Improved validation for supported proxy types (http, https, socks4, socks5, socks5h)\n- Enhanced logging with AnsiColors for clearer CLI and log outputs\n- Updated log writing to convert ANSI codes to HTML for consistency\n- Simplified getPublicIP logging by commenting out redundant service checks",
    "files": [
      "php_backend/proxy-checker.php"
    ]
  },
  {
    "hash": "06ebcb291827ab91ed89c1194b633c8dd7d0b2a1",
    "date": "2025-09-25T11:24:21+07:00",
    "message": "fix(proxydb): filter out null, false, and empty values before updating record in proxies table\n\nAdded array_filter to clean $data before database update, ensuring only meaningful values (including 0 and '0') are stored.",
    "files": [
      "src/PhpProxyHunter/ProxyDB.php"
    ]
  },
  {
    "hash": "3917218a0e6f4faabb51482831548874155fa5ad",
    "date": "2025-09-25T10:50:41+07:00",
    "message": "feat(getServerIp): delete cached IP file if older than 5 minutes on debug devices",
    "files": [
      "func-proxy.php"
    ]
  },
  {
    "hash": "127357eb4bdcb05ba1097a89266d6dbe057dc4df",
    "date": "2025-09-25T10:39:13+07:00",
    "message": "feat(log-viewer): render log output as HTML\n\nUse dangerouslySetInnerHTML to render log content, allowing HTML entities and colored spans to display correctly in the ProxyList LogViewer.",
    "files": [
      "src/react/pages/ProxyList/LogViewer.tsx"
    ]
  },
  {
    "hash": "3991127329afe3668b00b289985ea689696b34e7",
    "date": "2025-09-25T10:22:15+07:00",
    "message": "refactor(php7): make Proxy class compatible with PHP 7\n\n- Removed typed properties and nullable type hints from all class properties.\n- Updated constructor to remove type hints and nullable types from parameters.\n- Ensured all type information is preserved in PHPDoc comments for IDE and static analysis support.\n- This change improves compatibility with PHP 7 environments.",
    "files": [
      "src/PhpProxyHunter/Proxy.php"
    ]
  },
  {
    "hash": "72432e2597a77a1180ee7ba56cdd921d34766eb6",
    "date": "2025-09-25T10:09:19+07:00",
    "message": "refactor: revert f40fb9af39eb2882bd8b967139939319dc808a95",
    "files": [
      "php_backend/proxy-checker.php"
    ]
  },
  {
    "hash": "1232511d97626da47e722c99c1f7236e6d524267",
    "date": "2025-09-25T10:02:04+07:00",
    "message": "feat(proxy-checker): enhance IP detection logic to compare detected IP with current client IP",
    "files": [
      "php_backend/proxy-checker.php"
    ]
  },
  {
    "hash": "3be9445c6d5c8618f110ac5372442ce84092941d",
    "date": "2025-09-25T09:30:00+07:00",
    "message": "refactor(proxy-checker): extract helpers and reduce duplicated proxy check logic\n\nIntroduced helper functions `$markStatus`, `$processResult`, and `$checkProxy` to centralize status updates, proxy result handling, and proxy checking. Simplified concurrency handling, input validation, and shutdown cleanup while preserving original log messages and database updates. This reduces code duplication and improves maintainability in `php_backend/proxy-checker.php`.",
    "files": [
      "php_backend/proxy-checker.php"
    ]
  },
  {
    "hash": "9ff1aa635074aa720fc40646ec08328f4f42f451",
    "date": "2025-09-25T09:14:01+07:00",
    "message": "feat(AnsiColors): add ANSI colorization and HTML conversion functionality",
    "files": [
      "src/PhpProxyHunter/AnsiColors.php",
      "tests/console/color.php"
    ]
  },
  {
    "hash": "f40fb9af39eb2882bd8b967139939319dc808a95",
    "date": "2025-09-25T08:28:36+07:00",
    "message": "feat(proxy-checker): enhance proxy status logging and add non-SSL testing for public IP detection",
    "files": [
      "php_backend/proxy-checker.php"
    ]
  },
  {
    "hash": "004e025a3b851a6be34ebfebd1cffd9752acb54b",
    "date": "2025-09-25T08:08:50+07:00",
    "message": "feat(proxy-checker): enhance shutdown function to write additional proxy details and status",
    "files": [
      "php_backend/proxy-checker.php"
    ]
  },
  {
    "hash": "c70802335982c489337f34ec089d758f90f5d7a9",
    "date": "2025-09-25T08:07:00+07:00",
    "message": "refactor(useragent): move to php_backend directory and add script name metadata",
    "files": [
      "php_backend/useragent.php"
    ]
  },
  {
    "hash": "110eec14687f1a1624afb70e42645309ba295c39",
    "date": "2025-09-25T08:05:43+07:00",
    "message": "chore(update.php): remove obsolete update script",
    "files": [
      "update.php"
    ]
  },
  {
    "hash": "f06cefefbfa88275c4d35f805962f7b911a13ea9",
    "date": "2025-09-25T07:59:18+07:00",
    "message": "feat(ci): set global env for all jobs in github-pages workflow\n\n- Move all environment variable mappings from individual job and step env blocks to a top-level env block.\n- Remove redundant env blocks from build-and-deploy job and steps.\n- Simplify workflow by ensuring all secrets and environment variables are available globally to all jobs and steps.",
    "files": [
      ".github/workflows/github-pages.yml"
    ]
  },
  {
    "hash": "2395849f94916fd822f5bcce9fae626556280bd4",
    "date": "2025-09-25T07:53:29+07:00",
    "message": "feat(github-pages): add additional environment variables for build process",
    "files": [
      ".github/workflows/github-pages.yml"
    ]
  },
  {
    "hash": "7f828e98d3cfe85ffe37548b8ac180cbeb8651ce",
    "date": "2025-09-25T07:46:55+07:00",
    "message": "fix(vite-plugin): ensure lock file is created and updated only during dev server",
    "files": [
      "vite-plugin.js"
    ]
  },
  {
    "hash": "3abbd656e323185be20d2f6bffe3362b3b1bd574",
    "date": "2025-09-25T07:44:50+07:00",
    "message": "fix(ProxyList): reset page to 1 when filter selection changes",
    "files": [
      "src/react/pages/ProxyList.tsx"
    ]
  },
  {
    "hash": "68d60eb8355d0a8860ca414f6e53199efe8b31ad",
    "date": "2025-09-25T07:41:02+07:00",
    "message": "refactor(vite-gh-pages): optimize Cheerio memory usage and clarify comments\n\n- Change Cheerio instance `$` from const to let in `cacheBustHtml` and set to null after use to help garbage collection.\n- In `copyIndexToRoutes`, read HTML content once and use a local Cheerio instance for each route to avoid memory leaks.\n- Add and clarify comments for route handling, Cheerio usage, and debugging.\n- Remove redundant or unclear comments, replacing them with concise, meaningful explanations.",
    "files": [
      "vite-gh-pages.js"
    ]
  },
  {
    "hash": "b1a26b880c62d7f44a07050f53ca04793265029d",
    "date": "2025-09-25T07:32:32+07:00",
    "message": "refactor(vite-gh-pages): remove redundant check for identical source and destination in copyIndexToRoutes",
    "files": [
      "vite-gh-pages.js"
    ]
  },
  {
    "hash": "a8cd5fb7c115868d1c733a4bafb1a2618ac80e1f",
    "date": "2025-09-25T07:31:52+07:00",
    "message": "feat(vite-gh-pages): add support for canonical and social meta tags in route HTML",
    "files": [
      "vite-gh-pages.js"
    ]
  },
  {
    "hash": "c2d4308412b4cfbb027ccc2c9354ba0d9f92c0cf",
    "date": "2025-09-25T07:26:33+07:00",
    "message": "feat(vite-gh-pages): add support for dynamic meta thumbnails in route HTML",
    "files": [
      "vite-gh-pages.js"
    ]
  },
  {
    "hash": "48baaff69aeaae8fd06dd4bb7d2fd31cf8d164e8",
    "date": "2025-09-25T07:24:23+07:00",
    "message": "refactor(vite-plugin): extract and optimize index.html production copy logic\n\n- Move index.html production copy logic to a new async function `copyIndexForProduction`\n- Use `copyIndexToRoutes` to copy index.html to all route destinations in dist/react\n- Replace inline copy logic in `indexHtmlReplacementPlugin` with call to `copyIndexForProduction`\n- Improve error handling and code clarity",
    "files": [
      "vite-plugin.js"
    ]
  },
  {
    "hash": "b3cf65ad11a1d1483ff70088a03b7e2b7b761bc5",
    "date": "2025-09-24T13:39:57+07:00",
    "message": "feat(vite-gh-pages): enhance SPA route HTML with SEO and social meta tags\n\n- Dynamically update <title> for each route based on route.title\n- Add or update meta[property=\"og:title\"] and meta[name=\"twitter:title\"] for each route\n- Add or update meta[name=\"description\"], meta[property=\"og:description\"], and meta[name=\"twitter:description\"] for each route\n- Write modified HTML to each route's index.html for proper SPA routing and improved SEO/social sharing",
    "files": [
      "vite-gh-pages.js"
    ]
  },
  {
    "hash": "10e20cc7fdd5e2045eb03d9027dc714d50d6fd81",
    "date": "2025-09-24T13:29:57+07:00",
    "message": "refactor(vite-gh-pages): add sourceHtml param to copyIndexToRoutes\n\n- Add optional `sourceHtml` parameter to `copyIndexToRoutes` for specifying the source index.html file\n- Update logic to use `sourceHtml` instead of hardcoded build output path\n- Improve flexibility for copying index.html to route destinations\n- Update JSDoc to document new parameter",
    "files": [
      "vite-gh-pages.js"
    ]
  },
  {
    "hash": "ed034f2094509f061c222e9036f1fd9d3e5b1be6",
    "date": "2025-09-24T13:27:23+07:00",
    "message": "refactor(vite-gh-pages): extract cache busting logic to reusable function\n\n- Move cache busting logic for index.html into a new exportable function `cacheBustHtml`\n- Replace inline cache busting in `deploy` with a call to `cacheBustHtml`\n- Allow cache busting to be reused for other HTML files and support optional version parameter\n- Improve code clarity and maintainability",
    "files": [
      "vite-gh-pages.js"
    ]
  },
  {
    "hash": "811cb5f2b1add6e5ed6142702c9fb86c648c2f91",
    "date": "2025-09-23T17:19:31+07:00",
    "message": "fix(meta): escape reserved column name \"key\" in meta table schema\n\n- Add quotes to \"key\" in SQLite schema and backticks to `key` in MySQL schema to prevent SQL syntax errors due to reserved word usage.",
    "files": [
      "src/PhpProxyHunter/Meta.php"
    ]
  },
  {
    "hash": "edaf0b6358773781012fdf157f34b62a442c5097",
    "date": "2025-09-23T17:02:28+07:00",
    "message": "feat(meta): add driver detection and auto-create meta table\n\nAdds `$driver` property to store the database driver name.\nMeta constructor now ensures the `meta` table exists by executing\nthe appropriate schema for SQLite or MySQL.",
    "files": [
      "src/PhpProxyHunter/Meta.php"
    ]
  },
  {
    "hash": "034789183a5e43332f739fe294c45483ba374d92",
    "date": "2025-09-23T17:01:10+07:00",
    "message": "feat(activity-log): add migration support for action_type column\n\nIntroduces `ActivityLogMigration` class to handle schema changes\nfor the `activity_log` table, specifically the `action_type` column.\n- Integrates migration execution into `ActivityLog` constructor.\n- Ensures migration is tracked using the `Meta` table.\n- Closes migration resources on shutdown.",
    "files": [
      "src/PhpProxyHunter/ActivityLog.php",
      "src/PhpProxyHunter/ActivityLogMigration.php"
    ]
  },
  {
    "hash": "19abb05f02cd11ff408cf532051d07f2fd99cc1f",
    "date": "2025-09-23T17:00:08+07:00",
    "message": "fix(meta): escape key in SQL queries for consistency",
    "files": [
      "src/PhpProxyHunter/Meta.php"
    ]
  },
  {
    "hash": "59b129ed5e3bf22279cdec7090d15ef8c6448e0b",
    "date": "2025-09-23T16:44:37+07:00",
    "message": "feat(meta): add Meta class for handling database meta information\n\nIntroduces a new `Meta` class that manages meta information schema\nfor SQLite and MySQL databases. Includes methods to check, get,\nand set key-value pairs in the `meta` table, along with schema\ndefinitions and lifecycle handling.",
    "files": [
      "src/PhpProxyHunter/Meta.php"
    ]
  },
  {
    "hash": "23d3d4548737c9b98fdceb09292aa934ccda5e63",
    "date": "2025-09-23T16:43:38+07:00",
    "message": "feat(const): add PACKAGE_VERSION constant for versioning",
    "files": [
      "src/PhpProxyHunter/const.php"
    ]
  },
  {
    "hash": "672b9944369d64ba08f9444f2011c61580edcec3",
    "date": "2025-09-23T16:31:01+07:00",
    "message": "feat(user-info): log user profile updates to activity log",
    "files": [
      "php_backend/user-info.php"
    ]
  },
  {
    "hash": "46fa5f2b00094b722f1160d516f312b0badb86fc",
    "date": "2025-09-23T16:20:34+07:00",
    "message": "refactor(ui): unify table structure and styles for LogsSection and UserActivityCard\n\n- Merged table header and body into a single table in LogsSection to ensure column alignment.\n- Applied consistent scroll container and sticky header approach.\n- Updated UserActivityCard table to use the same padding, border, and header classes as LogsSection.\n- Ensured both components use `px-2 py-1` for th/td, consistent text sizing, and sticky header styles.\n- Removed redundant table wrappers and extra classes for a cleaner, unified UI.",
    "files": [
      "src/react/pages/admin/LogsSection.tsx",
      "src/react/pages/dashboard/UserActivityCard.tsx"
    ]
  },
  {
    "hash": "18e04a6b96f24444a045481da9667868e3c77c1d",
    "date": "2025-09-22T17:09:47+07:00",
    "message": "refactor(dashboard): simplify and modularize UserActivityCard table rendering\n\n- Remove inline fallback comment for total count assignment.\n- Introduce a `columns` array to define table headers and their order.\n- Add a `getColumnValue` helper function to extract and normalize log values for each column.\n- Refactor table rendering to use `columns.map` for both headers and body cells, ensuring consistent order and easier maintenance.\n- Replace previous manual row rendering logic with a more modular and DRY approach.\n- Move scrollable area to the table wrapper and apply consistent sticky header and cell styling.",
    "files": [
      "src/react/pages/dashboard/UserActivityCard.tsx"
    ]
  },
  {
    "hash": "debfde1283f62161d8056167a29272ec81a3806f",
    "date": "2025-09-22T16:51:46+07:00",
    "message": "refactor(UserActivityCard): make activity table body scrollable with sticky header\n\n- Refactored the user activity table to separate the header and body, enabling only the table content (tbody) to be scrollable while keeping the header fixed.\n- Applied Tailwind CSS classes for sticky header and scrollable body for better UX and consistency with LogsSection.",
    "files": [
      "src/react/pages/dashboard/UserActivityCard.tsx"
    ]
  },
  {
    "hash": "1d05c48d73d2dd1ae849dfcb7a0042e104794f91",
    "date": "2025-09-22T16:50:36+07:00",
    "message": "feat(ActivityLog): add script to populate activity log with sample admin actions",
    "files": [
      "tests/PhpProxyHunter/ActivityLogPopulate.php"
    ]
  },
  {
    "hash": "dafe38afc3682a9f94f1683d9d2b51efd1739828",
    "date": "2025-09-22T16:40:44+07:00",
    "message": "fix(config): ensure CLOUD_SQLITE_SECRET is retrieved from $_ENV if available",
    "files": [
      "cloud_sqlite/config.php"
    ]
  },
  {
    "hash": "09d891b46a14b421a83a671037872ef0834ef21e",
    "date": "2025-09-22T16:40:04+07:00",
    "message": "refactor(env): move getAdminEmails helper to dedicated env.php\n\n- remove getAdminEmails definition from google-oauth.php\n- create src/database/env.php to centralize environment variable helpers\n- keep same functionality: parse ADMIN_EMAILS from env and trim values",
    "files": [
      "php_backend/google-oauth.php",
      "src/database/env.php"
    ]
  },
  {
    "hash": "c08792583947c0734d47a4199b6de2f087f947e4",
    "date": "2025-09-22T16:24:44+07:00",
    "message": "refactor(LogsSection): make table body scrollable with fixed header\n\n- Refactored the logs table to separate the header and body, enabling only the table content (tbody) to be scrollable while keeping the header fixed.\n- Applied Tailwind CSS classes for sticky header and scrollable body.\n- Improved accessibility by adding scope=\"col\" to table headers.",
    "files": [
      "src/react/pages/admin/LogsSection.tsx"
    ]
  },
  {
    "hash": "f9234c17818647c4fa9372b29b9cc1d3daeb2025",
    "date": "2025-09-22T15:16:55+07:00",
    "message": "feat(instructions): update and expand guidelines for GitHub Copilot usage across various languages",
    "files": [
      ".github/instructions/all.instructions.md",
      ".github/instructions/nodejs.instructions.md",
      ".github/instructions/php.instructions.md",
      ".github/instructions/python.instructions.md",
      ".github/instructions/react.instruction.md"
    ]
  },
  {
    "hash": "b3236b45c71a500fbff35a91f9904bb2cdf2e876",
    "date": "2025-09-22T13:50:05+07:00",
    "message": "feat(tailwind): enable dark mode and extend custom color palette",
    "files": [
      "tailwind.config.js"
    ]
  },
  {
    "hash": "298f5a8b2264533e9a91611896b9dc21a7565c9b",
    "date": "2025-09-22T12:26:43+07:00",
    "message": "feat(user-info): add functionality to retrieve user info by email or ID for admins",
    "files": [
      "php_backend/user-info.php"
    ]
  },
  {
    "hash": "767268b6cf44d4980684ebe85bce0ed1c8c42581",
    "date": "2025-09-22T12:19:52+07:00",
    "message": "feat(admin/logs): add refresh button to reload logs manually",
    "files": [
      "src/react/pages/admin/LogsSection.tsx"
    ]
  },
  {
    "hash": "dc9fe9958870ca3c669c80ab40086eb0b10cca1e",
    "date": "2025-09-22T11:24:22+07:00",
    "message": "fix(UserDB): ensure database connection is properly closed and set to null",
    "files": [
      "src/PhpProxyHunter/UserDB.php"
    ]
  },
  {
    "hash": "575a226e2595dff8d1479cb9782aa8944b7f25f0",
    "date": "2025-09-22T11:10:39+07:00",
    "message": "fix(sqlite): prevent index creation error by using IF NOT EXISTS\n\n- Updated SQLite schema to use CREATE INDEX IF NOT EXISTS for all activity_log indexes.\n- This avoids errors when indexes already exist during repeated schema initialization.",
    "files": [
      "src/PhpProxyHunter/ActivityLog.php",
      "tests/PhpProxyHunter/ActivityLogTest.php"
    ]
  },
  {
    "hash": "88017791c59af6b83318417c058f1cf97fc8fced",
    "date": "2025-09-22T11:09:23+07:00",
    "message": "test: update ActivityLogTest to remove empty assertion in recent logs test\n\n- Renamed testRecentReturnsEmptyInitially to testRecentReturns for clarity.\n- Removed assertion that expected zero logs, allowing for flexible initial state.",
    "files": [
      "tests/PhpProxyHunter/ActivityLogTest.php"
    ]
  },
  {
    "hash": "02d1e01edc53c58c55c0fac254fdd9239cf363da",
    "date": "2025-09-22T11:05:33+07:00",
    "message": "test(activity-log): use file-based SQLite database with tmp directory instead of in-memory DB",
    "files": [
      "tests/PhpProxyHunter/ActivityLogTest.php"
    ]
  },
  {
    "hash": "47e4cc97db442ae0cb4fa3d98e91dbf968356154",
    "date": "2025-09-22T11:03:09+07:00",
    "message": "fix(activity-log): handle CLI execution by setting default IP and user agent to \"CLI\"",
    "files": [
      "src/PhpProxyHunter/ActivityLog.php"
    ]
  },
  {
    "hash": "4988fe34bd28e7c0299a8f154db30f31a8abb649",
    "date": "2025-09-21T18:46:42+07:00",
    "message": "feat(ActivityLog): add close method and destructor for resource management",
    "files": [
      "src/PhpProxyHunter/ActivityLog.php"
    ]
  },
  {
    "hash": "2336f5afaf3934bebf382ddb5a6053ee6399b65a",
    "date": "2025-09-21T18:37:10+07:00",
    "message": "refactor(phpcs): disable severity for space after class keyword in anonymous classes",
    "files": [
      "phpcs.xml"
    ]
  },
  {
    "hash": "09e06ecac2f6b1b6b03656ffe789a4011d8327f1",
    "date": "2025-09-21T18:09:58+07:00",
    "message": "refactor(logs): simplify LogsResponse and LogEntry interfaces",
    "files": [
      "src/react/pages/admin/LogsSection.tsx",
      "types/php_backend/logs.d.ts"
    ]
  },
  {
    "hash": "41ae3c20e7dad46388cf762506d595fd420693e9",
    "date": "2025-09-21T17:29:58+07:00",
    "message": "feat(ui): add pagination and localization to UserActivityCard\n\n- Refactored `UserActivityCard.tsx` to support paginated log fetching, including page navigation and page size selection.\n- Added new translation keys for pagination and table headers to `en.json` and `id.json`:\n  - prev, next, page, rows_per_page, action, timestamp, details\n- Updated UI to use a table for activity logs with full dark mode support.\n- Removed old dummy data and fetch logic, now uses real API and types.",
    "files": [
      "src/react/locales/en.json",
      "src/react/locales/id.json",
      "src/react/pages/dashboard/UserActivityCard.tsx"
    ]
  },
  {
    "hash": "c7d5dc6240a9c57e3315d5112090b10501ac5d23",
    "date": "2025-09-21T17:24:45+07:00",
    "message": "feat(instructions): add i18next framework details for internationalization",
    "files": [
      ".github/instructions/react.instruction.md"
    ]
  },
  {
    "hash": "e1e1fbd2ac5f19626d1907d9bc24b71be162a70d",
    "date": "2025-09-21T17:19:23+07:00",
    "message": "feat(instructions): add GitHub Copilot guidelines for React components with Tailwind and Flowbite",
    "files": [
      ".github/instructions/react.instruction.md"
    ]
  },
  {
    "hash": "f807e48890de723eac395fffb93008fa221411ec",
    "date": "2025-09-21T17:05:27+07:00",
    "message": "refactor(user-activity-card): move component to dashboard directory",
    "files": [
      "src/react/pages/Dashboard.tsx",
      "src/react/pages/dashboard/UserActivityCard.tsx"
    ]
  },
  {
    "hash": "d8817f332bb7322e3bce8a79294f47d6b1cb9be8",
    "date": "2025-09-21T17:04:00+07:00",
    "message": "feat(user): add getUserLogs function with pagination support\n\n- Introduced `getUserLogs` in `src/react/utils/user.ts` to fetch current user logs\n  with page and pageSize parameters.\n- Added new type definitions in `types/php_backend/logs.d.ts`:\n  - `LogEntry`\n  - `UserLogResponse`",
    "files": [
      "src/react/utils/user.ts",
      "types/php_backend/logs.d.ts"
    ]
  },
  {
    "hash": "ad6bc421af5d0aef52b5f348d9ea3c23bb2a0ea1",
    "date": "2025-09-21T16:57:40+07:00",
    "message": "refactor(user): move UserInfo interface to a separate type definition file",
    "files": [
      "src/react/utils/user.ts",
      "types/php_backend/user.d.ts"
    ]
  },
  {
    "hash": "0318d9932e953cd4675f0b2d8def3a993ac8cd9d",
    "date": "2025-09-21T16:47:19+07:00",
    "message": "fix(logs): prevent unauthenticated access to own logs with JSON error response",
    "files": [
      "php_backend/logs.php"
    ]
  },
  {
    "hash": "ce8e2e5c56a8833541a986e4c772b5941f4d517a",
    "date": "2025-09-21T16:45:31+07:00",
    "message": "feat(logs): update user log retrieval and add pagination support for admin logs",
    "files": [
      "php_backend/logs.php"
    ]
  },
  {
    "hash": "0773a8f600258de4fb1311ca7b5382adf0a508c9",
    "date": "2025-09-21T16:43:53+07:00",
    "message": "feat(ActivityLog): enhance recent logs method to support pagination",
    "files": [
      "src/PhpProxyHunter/ActivityLog.php"
    ]
  },
  {
    "hash": "48d7902bc43a899431c098db46c830eb6d7eb5f9",
    "date": "2025-09-21T15:35:52+07:00",
    "message": "feat(login): integrate logging of successful login attempts with IP and user agent",
    "files": [
      "php_backend/google-oauth.php",
      "php_backend/login.php"
    ]
  },
  {
    "hash": "4ab0df38d1cf42f926d34bca9dbc4499d9c84768",
    "date": "2025-09-21T15:28:31+07:00",
    "message": "feat(ActivityLog): auto-detect IP and user agent in log method if not provided",
    "files": [
      "src/PhpProxyHunter/ActivityLog.php"
    ]
  },
  {
    "hash": "8a2fd1e2ca308574958507d3b39b49bd7882ed38",
    "date": "2025-09-21T15:25:35+07:00",
    "message": "refactor(Server): rename methods to use camelCase convention",
    "files": [
      "src/PhpProxyHunter/Server.php"
    ]
  },
  {
    "hash": "b7b5b3b99f905eb48b6c08e515b51117e586f475",
    "date": "2025-09-21T15:19:30+07:00",
    "message": "feat(CoreDB): add ActivityLog instance to CoreDB\n\n- Add public property `$log_db` to CoreDB for activity log database helper.\n- Instantiate `ActivityLog` in MySQL initialization and assign to `$log_db`.\n- Expose `$log_db` in `php_backend/shared.php` for easier access to activity logging.",
    "files": [
      "php_backend/shared.php",
      "src/PhpProxyHunter/CoreDB.php"
    ]
  },
  {
    "hash": "31fc4e13d25b65b4c98304f428e9622290f6c864",
    "date": "2025-09-21T15:15:09+07:00",
    "message": "refactor(ActivityLog): remove redundant comments in constructor and method definitions",
    "files": [
      "src/PhpProxyHunter/ActivityLog.php"
    ]
  },
  {
    "hash": "fdf279a92c3a847445d3ed6d349927a28ca16a29",
    "date": "2025-09-21T15:13:48+07:00",
    "message": "refactor(ActivityLog): optimize constructor to reduce redundancy\n\n- Centralize PDO extraction from supported types (PDO, SQLiteHelper, MySQLHelper, CoreDB) into a single variable.\n- Assign PDO instance and driver only once after type resolution.\n- Improves readability and maintainability of the constructor logic.",
    "files": [
      "src/PhpProxyHunter/ActivityLog.php"
    ]
  },
  {
    "hash": "c2f274d1575b7ce8b056323700a5e178f0f1cd4d",
    "date": "2025-09-21T15:11:40+07:00",
    "message": "refactor(ActivityLog): make class PHP 7 compatible\n\n- Remove strict_types declaration for broader compatibility.\n- Remove typed properties and parameter/return type hints; use PHPDoc for type annotations.\n- Add PHPDoc blocks for class properties and methods.\n- Update constructor and methods to use PHP 7 compatible signatures.\n- Replace nullable and typed parameters with untyped, default-null parameters.\n- Add explicit null checks for parameter binding in log() method.\n- Minor formatting and doc improvements for clarity and compatibility.",
    "files": [
      "src/PhpProxyHunter/ActivityLog.php"
    ]
  },
  {
    "hash": "7c1ac56f264c1aa67b149cf4fe3879a1650bffef",
    "date": "2025-09-21T15:09:23+07:00",
    "message": "feat(ActivityLog): enhance constructor to support SQLiteHelper and MySQLHelper, and improve error handling",
    "files": [
      "src/PhpProxyHunter/ActivityLog.php"
    ]
  },
  {
    "hash": "90ac467dcb285edd2924e58e43eaa1855f28c548",
    "date": "2025-09-21T15:05:16+07:00",
    "message": "fix(ProxyDB, UserDB): ensure safe closure of database connections in close and destructor methods",
    "files": [
      "src/PhpProxyHunter/ProxyDB.php",
      "src/PhpProxyHunter/UserDB.php"
    ]
  },
  {
    "hash": "3834c6ae8c123dead99a169fa0bffc43d73d9e57",
    "date": "2025-09-21T15:04:35+07:00",
    "message": "feat(ActivityLogTest): add unit tests for ActivityLog class with SQLite and MySQL support",
    "files": [
      "tests/PhpProxyHunter/ActivityLogTest.php"
    ]
  },
  {
    "hash": "edd14eb8eba3ae2a67e8fbcc05dbaab269b26cf6",
    "date": "2025-09-21T15:02:31+07:00",
    "message": "feat(ActivityLog): add SQLite schema for activity log table and update constructor to ensure table creation",
    "files": [
      "src/PhpProxyHunter/ActivityLog.php"
    ]
  },
  {
    "hash": "8fda16b50750483c775fd5c05ee82718291ed277",
    "date": "2025-09-21T14:58:52+07:00",
    "message": "feat(ActivityLog): implement activity logging with structured database table and methods",
    "files": [
      "src/PhpProxyHunter/ActivityLog.php"
    ]
  },
  {
    "hash": "ab1cc1b8be6bf89eb305f0d4d8759076d93c50f7",
    "date": "2025-09-21T14:55:28+07:00",
    "message": "refactor(BaseSQL): change close method to abstract for consistency in subclasses",
    "files": [
      "src/PhpProxyHunter/BaseSQL.php"
    ]
  },
  {
    "hash": "05233e372c44ba050d45604a6f745525d8eba09c",
    "date": "2025-09-20T21:00:17+07:00",
    "message": "refactor!: remove LogsRepository and user_logs table\n\n- Deleted LogsRepository and LogsRepositoryMigrations classes\n- Removed user_logs table from create.sql, mysql-schema.sql, and sqlite-schema.sql\n- Removed references to LogsRepository in CoreDB, UserDB, and logs.php\n- Adjusted UserDB methods to no longer log saldo operations or delete from user_logs\n- Simplified tests by removing truncation and references to user_logs\n- Deleted LogsRepositoryTest\n\nBREAKING CHANGE: user activity and saldo operations are no longer logged in user_logs, and LogsRepository has been removed.",
    "files": [
      "assets/database/create.sql",
      "php_backend/logs.php",
      "src/PhpProxyHunter/CoreDB.php",
      "src/PhpProxyHunter/LogsRepository.php",
      "src/PhpProxyHunter/LogsRepositoryMigrations.php",
      "src/PhpProxyHunter/UserDB.php",
      "src/PhpProxyHunter/assets/mysql-schema.sql",
      "src/PhpProxyHunter/assets/sqlite-schema.sql",
      "tests/PhpProxyHunter/UserDBSaldoArithmeticTest.php",
      "tests/database/LogsRepositoryTest.php"
    ]
  },
  {
    "hash": "58c6c75d3d05358958ad284d761f1c27d5cffc53",
    "date": "2025-09-20T06:32:37+07:00",
    "message": "fix(LogsSection): prevent duplicate log entries by checking previous logs before updating state",
    "files": [
      "src/react/pages/admin/LogsSection.tsx"
    ]
  },
  {
    "hash": "730120ddb918879e12f23af54fdbc6d306932125",
    "date": "2025-09-20T06:09:19+07:00",
    "message": "fix(admin/logs): ensure unique React keys for log rows and prevent concurrent fetches\n\n- Fix duplicate key warning in log table by using a combination of log.id and index for the <tr> key.\n- Add isFetching flag to prevent concurrent fetchLogs calls and ensure proper state reset.",
    "files": [
      "src/react/pages/admin/LogsSection.tsx"
    ]
  },
  {
    "hash": "9c4ff5918c312c7d6d3338c9ea7f10b943ca8a7d",
    "date": "2025-09-20T06:00:14+07:00",
    "message": "feat(LogsSection): implement periodic log fetching every 30 seconds",
    "files": [
      "src/react/pages/admin/LogsSection.tsx"
    ]
  },
  {
    "hash": "f335b7be4dc3b11cad95a56c7cbe7125e1366630",
    "date": "2025-09-19T23:26:23+07:00",
    "message": "fix(UserDB): enhance log action messages for saldo updates based on conditions",
    "files": [
      "packages/proxies-grabber",
      "src/PhpProxyHunter/UserDB.php"
    ]
  },
  {
    "hash": "39b780e1b6f4df8800fd2d772ec7476849645a68",
    "date": "2025-09-19T18:30:07+07:00",
    "message": "fix(logs): improve user authentication error handling in logs retrieval",
    "files": [
      "php_backend/logs.php"
    ]
  },
  {
    "hash": "e0d9765c781bc044ea9adf2709acd7d358e04f46",
    "date": "2025-09-19T18:27:38+07:00",
    "message": "fix(user): handle optional id on user insert\n\n- Use provided `id` if not empty when inserting into `auth_user`\n- Remove empty `id` to allow database auto-increment",
    "files": [
      "src/PhpProxyHunter/UserDB.php"
    ]
  },
  {
    "hash": "474bf24e0132b1382a8576d05048c55ee9184a90",
    "date": "2025-09-19T18:23:54+07:00",
    "message": "feat(logs): include payment logs and add log_table field to all log types\n\n- Add `log_table` field for user, package, and payment logs to identify source table\n- Extend log collection to include `package_payment` records with related user and package info\n- Update cleanup step to also remove `purchased_at` while keeping `log_time`",
    "files": [
      "src/PhpProxyHunter/LogsRepository.php"
    ]
  },
  {
    "hash": "6d6a939aa2e86b0c91ce7b6b07507e3ae0b1c559",
    "date": "2025-09-19T18:20:12+07:00",
    "message": "feat(CoreDB): ensure proper closure of database connections in destructor",
    "files": [
      "src/PhpProxyHunter/CoreDB.php"
    ]
  },
  {
    "hash": "e0ce6a7422cfb9fd5e3ad0be35967464d891dd4e",
    "date": "2025-09-19T11:17:23+07:00",
    "message": "chore(tmp): move cache, build, and state files into tmp/locks directory",
    "files": [
      ".php-cs-fixer.dist.php",
      "artisan/cleaner.php",
      "bin/build-project.mjs",
      "func-proxy.php",
      "setup.js"
    ]
  },
  {
    "hash": "8edf38b98782d32394408b8b028b6e5ea579c7f0",
    "date": "2025-09-19T11:11:43+07:00",
    "message": "feat(post-merge): conditionally run build script based on dev server lock file presence",
    "files": []
  },
  {
    "hash": "567788b25e2bd03c1cd2bdbbfd8dddded044bf78",
    "date": "2025-09-19T11:09:58+07:00",
    "message": "feat(vite): add dev server lock file handling and prepareVitePlugins integration",
    "files": [
      "vite-plugin.js",
      "vite.config.js"
    ]
  },
  {
    "hash": "3ace59ca36980c01b6ce16ec43e65c03e8c1e4eb",
    "date": "2025-09-19T11:00:29+07:00",
    "message": "feat(logs): add endpoint to fetch authenticated user's logs and update admin logs query",
    "files": [
      "php_backend/logs.php"
    ]
  },
  {
    "hash": "aff7f2831ad8b40eeb6e2c3f2482837164ab88c7",
    "date": "2025-09-19T10:59:19+07:00",
    "message": "feat(logs): add filtering by user_id and package_id to getLogsFromDb",
    "files": [
      "src/PhpProxyHunter/LogsRepository.php"
    ]
  },
  {
    "hash": "65e0fb003687eb7f597dab1ad2654aaf09239893",
    "date": "2025-09-19T10:44:34+07:00",
    "message": "feat(CoreDB): add showCreationTable method for retrieving table creation SQL",
    "files": [
      "src/PhpProxyHunter/CoreDB.php"
    ]
  },
  {
    "hash": "ca786a4918e06d9af4c82af5872e0154c120d339",
    "date": "2025-09-19T10:28:39+07:00",
    "message": "feat(auth): add support for configurable admin emails via .env\n\n- Introduce ADMIN_EMAILS variable in .env.example to allow specifying multiple admin emails.\n- Add getAdminEmails() helper in google-oauth.php to retrieve and parse admin emails from environment.\n- Update finalizeUserSession to check admin status against ADMIN_EMAILS list, improving flexibility and maintainability.",
    "files": [
      ".env.example",
      "php_backend/google-oauth.php"
    ]
  },
  {
    "hash": "16084fd45eb08d9615c44cfc68c5e4fac0f01077",
    "date": "2025-09-19T10:22:30+07:00",
    "message": "refactor(ProxyList): simplify timeAgo import statement",
    "files": [
      "src/react/pages/ProxyList.tsx"
    ]
  },
  {
    "hash": "8b63bd96dd39904dc50bc3891fbdec3eba7454e7",
    "date": "2025-09-17T19:09:27+07:00",
    "message": "refactor(date): centralize timeAgo utility\n\n- move timeAgo implementation into new src/utils/date.js module\n- remove duplicate timeAgo functions from proxyManager-src.js and ProxyList.tsx\n- import shared utility in affected files",
    "files": [
      "proxyManager-src.js",
      "src/react/pages/ProxyList.tsx",
      "src/utils/date.js"
    ]
  },
  {
    "hash": "c6f8fe327e13956fb6e53570c3be57c0c34b1c0e",
    "date": "2025-09-17T18:43:12+07:00",
    "message": "refactor: standardize string quotes to single quotes across JavaScript files",
    "files": [
      "django_backend/apps/core/statics/js/base_script.js",
      "django_backend/apps/proxy/statics/checker_result.js",
      "django_backend/apps/proxy/statics/proxy_index.js"
    ]
  },
  {
    "hash": "6a947768313157c3070e75ada88aa144b72a1692",
    "date": "2025-09-17T18:20:03+07:00",
    "message": "feat(logs): dynamic table rendering for logs with flexible columns\n\n- strip raw `timestamp` and `created_at` fields, keep only `log_time`\n- introduce dynamic header generation based on log keys\n- exclude internal fields (ids, log_level, log_type) from display\n- render logs in a generic key/value table with JSON stringification for objects",
    "files": [
      "src/PhpProxyHunter/LogsRepository.php",
      "src/react/pages/admin/LogsSection.tsx"
    ]
  },
  {
    "hash": "18b73e6c9f54b7ebc42e0e871da0e1e0c0b5c58d",
    "date": "2025-09-17T17:49:33+07:00",
    "message": "feat(types): add stub type definition for 'php_backend'",
    "files": [
      "types/php_backend.d.ts"
    ]
  },
  {
    "hash": "867b0524c5650f4e7efdfd22b669f1b34bcde63c",
    "date": "2025-09-17T17:39:45+07:00",
    "message": "feat(logs): enhance logs with user and package details\n\n- join user_logs with auth_user to include username and email\n- join package_logs with packages to include package name\n- update types to reflect new fields for user and package logs\n- improve LogsSection UI: scrollable table, smaller text, and richer log display",
    "files": [
      "src/PhpProxyHunter/LogsRepository.php",
      "src/react/pages/admin/LogsSection.tsx",
      "types/php_backend/logs.d.ts"
    ]
  },
  {
    "hash": "80796166b204a9bd3790509a13945a31a9767c69",
    "date": "2025-09-17T17:24:08+07:00",
    "message": "feat(admin): add logs pagination and fetch from backend\n\n- create reusable Pagination component\n- add LogsResponse, UserLog, and PackageLog types\n- update LogsSection to fetch logs from backend with pagination\n- handle loading and empty states",
    "files": [
      "src/react/components/Pagination.tsx",
      "src/react/pages/admin/LogsSection.tsx",
      "types/php_backend/logs.d.ts"
    ]
  },
  {
    "hash": "684a7cf07bb42f2127c17753bcff3791efa9e2b9",
    "date": "2025-09-17T17:09:22+07:00",
    "message": "feat(logs): add pagination and merge logs from user_logs and package_logs\n\n- Support page and per_page parameters in logs.php with validation\n- Extend LogsRepository to detect driver and use helper for table checks\n- Update getLogsFromDb() to fetch logs from both user_logs and package_logs\n- Combine, sort, and paginate logs by timestamp\n- Return structured JSON response including page, per_page, logs, and count",
    "files": [
      "php_backend/logs.php",
      "src/PhpProxyHunter/LogsRepository.php"
    ]
  },
  {
    "hash": "510302b96f074105a8d28b8a7bc4fd0bac7301e7",
    "date": "2025-09-17T17:03:36+07:00",
    "message": "feat(db): add hasTable() method to check table existence\n\n- Add abstract hasTable() method to BaseSQL\n- Implement hasTable() in CoreDB, MySQLHelper, and SQLiteHelper\n- Add tests in CoreDBTest to verify table existence detection",
    "files": [
      "src/PhpProxyHunter/BaseSQL.php",
      "src/PhpProxyHunter/CoreDB.php",
      "src/PhpProxyHunter/MySQLHelper.php",
      "src/PhpProxyHunter/SQLiteHelper.php",
      "tests/PhpProxyHunter/CoreDBTest.php"
    ]
  },
  {
    "hash": "f1c72b11a440be2036a84e459bf71423877c3d6d",
    "date": "2025-09-17T16:44:31+07:00",
    "message": "feat(logs): allow admins to fetch all logs in JSON format\n\n- Add global $isAdmin check in logs.php\n- Return logs from database as JSON when user is admin\n- Preserve existing hash-based log retrieval",
    "files": [
      "php_backend/logs.php"
    ]
  },
  {
    "hash": "739865bec6f812c922b82773b12393e125c2683e",
    "date": "2025-09-17T16:39:37+07:00",
    "message": "feat(Admin): add LogsSection component to display log activity",
    "files": [
      "src/react/pages/Admin.tsx",
      "src/react/pages/admin/LogsSection.tsx"
    ]
  },
  {
    "hash": "b6920644e272a39ac5e2fb7d973ee7d458900cb5",
    "date": "2025-09-17T16:35:47+07:00",
    "message": "refactor(logs): remove user_activity table and related methods\n\n- Drop user_activity table definitions from MySQL and SQLite schemas\n- Remove creation and migration logic for user_activity\n- Delete addActivity() and getActivities() methods from LogsRepository\n- Clean up UserDB to no longer delete from user_activity",
    "files": [
      "src/PhpProxyHunter/LogsRepository.php",
      "src/PhpProxyHunter/LogsRepositoryMigrations.php",
      "src/PhpProxyHunter/UserDB.php",
      "src/PhpProxyHunter/assets/mysql-schema.sql",
      "src/PhpProxyHunter/assets/sqlite-schema.sql"
    ]
  },
  {
    "hash": "636a00018b7a1f30a411460065354505354d3233",
    "date": "2025-09-17T16:26:36+07:00",
    "message": "fix(SQLiteHelper): comment out debug var_dump statements in modifyColumn method",
    "files": [
      "src/PhpProxyHunter/SQLiteHelper.php"
    ]
  },
  {
    "hash": "cbbe366d676d4344c775327a2b8d84e89e61ca23",
    "date": "2025-09-17T16:16:28+07:00",
    "message": "fix(logs): add namespace prefix to json_validate function call in addLog method",
    "files": [
      "src/PhpProxyHunter/LogsRepository.php"
    ]
  },
  {
    "hash": "15e9c47510ab21a28b46d1ce385113935e55e6e1",
    "date": "2025-09-17T15:51:56+07:00",
    "message": "fix(logs): correct require_once placement for shim.php in LogsRepository",
    "files": [
      "src/PhpProxyHunter/LogsRepository.php"
    ]
  },
  {
    "hash": "39cc0a6857c61c33fd221b08d6c38dfab1f5246a",
    "date": "2025-09-17T15:47:43+07:00",
    "message": "feat(shim): add PHP 8 compatibility shims for removed/deprecated functions\n\nAdded fallback implementations for functions removed in PHP 8:\n- get_magic_quotes_gpc()\n- get_magic_quotes_runtime()\n- set_magic_quotes_runtime()\n- create_function()\n- each()\n- get_html_translation_table_compat()\n\nThese shims ensure legacy code can run without modification under PHP 8.",
    "files": [
      "src/PhpProxyHunter/shim.php"
    ]
  },
  {
    "hash": "ac42fbc88974c218c51854bc5f719a6f1217999d",
    "date": "2025-09-17T15:45:57+07:00",
    "message": "fix(shim): update json_validate function to match PHP 8.3 polyfill specifications",
    "files": [
      "src/PhpProxyHunter/shim.php"
    ]
  },
  {
    "hash": "08e6a28eec13eb6b05718b26e08e01a1f222e9cf",
    "date": "2025-09-17T15:44:37+07:00",
    "message": "fix(logs): ensure proper JSON validation and fallback encoding\n\n- Added `shim.php` with polyfill for `json_validate` when not available\n- Updated `LogsRepository` to use `json_validate` for `$extraInfo` when storing logs\n- Fallback to `json_encode` with `JSON_UNESCAPED_UNICODE` if not valid JSON",
    "files": [
      "src/PhpProxyHunter/LogsRepository.php",
      "src/PhpProxyHunter/shim.php"
    ]
  },
  {
    "hash": "c1eed74c7c022164224b1fd0cc3cbc14e081414d",
    "date": "2025-09-17T15:01:08+07:00",
    "message": "fix(recaptcha): ensure reCAPTCHA secret key is configured before verification",
    "files": [
      "php_backend/recaptcha.php"
    ]
  },
  {
    "hash": "3e032d5fa3a28504f09166b57f8c63b3b8c6d993",
    "date": "2025-09-17T15:00:22+07:00",
    "message": "refactor(recaptcha): improve code structure and enhance reCAPTCHA verification logic",
    "files": [
      "php_backend/recaptcha.php"
    ]
  },
  {
    "hash": "136f4d04989b7ef402aa8f092a56d38916e588bb",
    "date": "2025-09-17T14:54:43+07:00",
    "message": "feat(proxy): use createUrl utility for fetching cURL timeout in PHP",
    "files": [
      "src/react/pages/ProxyList/ModifyCurl.tsx"
    ]
  },
  {
    "hash": "77dc966969fb28ee51b7d271a8f1e48e2732dc2e",
    "date": "2025-09-17T14:52:50+07:00",
    "message": "feat(proxy): add configurable cURL timeout setting via UI and backend\n\n- Added backend support in `proxy-checker.php` to handle `set_curl_timeout` requests\n  - Validates timeout range (1–300 seconds)\n  - Updates and persists user config\n  - Applies custom timeout in `getPublicIP` and `getWebsiteTitle`\n- Updated `ProxyList.tsx` to include new `ModifyCurl` section\n- Implemented `ModifyCurl.tsx` React component\n  - Allows users to set cURL timeout via form\n  - Displays success or error messages",
    "files": [
      "php_backend/proxy-checker.php",
      "src/react/pages/ProxyList.tsx",
      "src/react/pages/ProxyList/ModifyCurl.tsx"
    ]
  },
  {
    "hash": "62a5b51457102b24fec74fa9b5a8089ef8ea14d0",
    "date": "2025-09-17T14:31:47+07:00",
    "message": "feat(ci): load .env.example and set VITE_ variables in GitHub Actions\n\n- Add dotenv import and load .env.example in vite-gh-pages.config.js\n- In GitHub CI, ensure all variables from .env.example are set as environment variables, prefixed with VITE_ if needed\n- Improves environment consistency for Vite builds on GitHub Pages",
    "files": [
      "vite-gh-pages.config.js"
    ]
  },
  {
    "hash": "99f6da5fd03634f5fb7d24d06939484515e6864f",
    "date": "2025-09-17T14:26:47+07:00",
    "message": "refactor(react): decouple log viewer state and improve proxy fetch error handling\n\n- Refactored `LogViewer` to manage its own state and polling logic internally, removing the need to pass `logViewer` and `setLogViewer` props from `ProxyList`.\n- Updated `handleRecheck` to remove all `setLogViewer` usage and related state updates.\n- Enhanced `getWorkingProxies` and `fetchAndSetProxies` to accept an optional `setShowModal` callback. If the proxy fetch returns a 403 Forbidden or a non-array result, the reCAPTCHA modal is shown automatically.\n- Updated all usages of `fetchAndSetProxies` to pass `setShowModal` for consistent error handling.\n- Removed the unused close button from the `LogViewer` UI.\n- Cleaned up legacy state and effect code related to log viewer management in `ProxyList`.",
    "files": [
      "src/react/pages/ProxyList.tsx",
      "src/react/pages/ProxyList/LogViewer.tsx"
    ]
  },
  {
    "hash": "57bd5f5d0a34fec51c208e53872a55ed57769acd",
    "date": "2025-09-17T14:03:49+07:00",
    "message": "feat(log-viewer): add reset log functionality in UI and backend\n\n- Added `resetLog` handling in `proxy-checker.php` to clear the log file on request\n- Updated `LogViewer` component to include a \"Reset Log\" button\n- Implemented API call to reset log and refetch updated log content\n- Improved state handling for loading, log content, and URL updates",
    "files": [
      "php_backend/proxy-checker.php",
      "src/react/pages/ProxyList/LogViewer.tsx"
    ]
  },
  {
    "hash": "4ad04b511aa3bed1c82fc2dc0cecec42e09ae281",
    "date": "2025-09-17T13:42:02+07:00",
    "message": "docs(snackbar): add TSDoc comments and usage examples\n\n- Documented `SnackbarType`, `SnackbarOptions`, `SnackbarProviderProps`, and `SnackbarContextProps`\n- Added examples for `showSnackbar` usage and provider setup\n- Improved clarity of prop descriptions and default values",
    "files": [
      "src/react/components/Snackbar.tsx"
    ]
  },
  {
    "hash": "d90fcf69179f60bd8677a61df7fcca2fbe915c31",
    "date": "2025-09-17T13:39:19+07:00",
    "message": "feat(snackbar): add stackable notifications with configurable max count\n\n- Introduced `stackable` and `maxSnackbars` props in `SnackbarProvider`\n- Support multiple concurrent snackbars when stackable is enabled\n- Updated close handling for individual stacked snackbars\n- Enabled `stackable` mode in `index.tsx`\n- Added stackable demo button in `SnackBarSample`",
    "files": [
      "src/react/components/Snackbar.tsx",
      "src/react/index.tsx",
      "src/react/pages/samples/SnackBarSample.tsx"
    ]
  },
  {
    "hash": "b7a8a48eb83e206dda7e526a2c130fc5fca1ebf5",
    "date": "2025-09-17T13:30:22+07:00",
    "message": "feat(react): add Snackbar component and integrate notifications\n\n- Introduced `Snackbar` context and provider for global toast-style notifications\n- Added `useSnackbar` hook for triggering messages\n- Integrated Snackbar into `ProxyList` for proxy re-check feedback\n- Wrapped app in `SnackbarProvider` in `index.tsx`\n- Added `/examples/snackbar` route with `SnackBarSample` demo page",
    "files": [
      "src/react/components/Snackbar.tsx",
      "src/react/index.tsx",
      "src/react/pages/ProxyList.tsx",
      "src/react/pages/samples/SnackBarSample.tsx"
    ]
  },
  {
    "hash": "615e4aeb20c36c21940abb152a86d57ddd10f919",
    "date": "2025-09-17T13:02:19+07:00",
    "message": "fix(proxy-checker): improve logging and status file handling during proxy checks",
    "files": [
      "php_backend/proxy-checker.php"
    ]
  },
  {
    "hash": "98239c4cf993355f38aa2f7f84159e48b1393ab3",
    "date": "2025-09-17T12:43:19+07:00",
    "message": "fix(proxy-checker): log attempts to access IP services with proxy details",
    "files": [
      "php_backend/proxy-checker.php"
    ]
  },
  {
    "hash": "e6479af806472195974371363a7f9b60b2be70d2",
    "date": "2025-09-17T12:37:16+07:00",
    "message": "refactor(proxy-checker): extract proxy details formatting to helper\n\n- Introduced `build_proxy_details` function to generate proxy details array and string, reducing code duplication.\n- Replaced repeated proxy details formatting logic with calls to the new helper throughout proxy checking flow.\n- Improved maintainability and readability by centralizing proxy details construction.",
    "files": [
      "php_backend/proxy-checker.php"
    ]
  },
  {
    "hash": "18b09bfab9bc900d972b1ab94a5bfb4831af9a3a",
    "date": "2025-09-17T12:36:02+07:00",
    "message": "feat(proxy-list): add automatic refresh of proxy list every minute",
    "files": [
      "src/react/pages/ProxyList.tsx"
    ]
  },
  {
    "hash": "343ff5211866abd578f9b521362b2ddd8970339c",
    "date": "2025-09-17T12:31:48+07:00",
    "message": "fix(proxy-checker): enhance shutdown logging with proxy details and ensure lock file removal",
    "files": [
      "php_backend/proxy-checker.php"
    ]
  },
  {
    "hash": "693edd68ee206e58db8d10a7f1c4e1911eacec2c",
    "date": "2025-09-17T12:26:12+07:00",
    "message": "refactor(react): extract log viewer section to LogViewer component\n\n- Moved the log viewer UI from ProxyList.tsx into a new dedicated component, ProxyList/LogViewer.tsx, for improved modularity and code organization.\n- Updated ProxyList.tsx to use the new <LogViewer /> component.",
    "files": [
      "src/react/pages/ProxyList.tsx",
      "src/react/pages/ProxyList/LogViewer.tsx"
    ]
  },
  {
    "hash": "173f24638cd348568da9dfc8f4d11edaa5429467",
    "date": "2025-09-17T12:17:21+07:00",
    "message": "refactor(react): move ProxyCheckerApiUsage to separate ApiUsage component\n\n- Extracted the ProxyCheckerApiUsage section from ProxyList.tsx into a new file, ProxyList/ApiUsage.tsx, for better modularity and maintainability.\n- Updated ProxyList.tsx to import and use the new ApiUsage component.\n- Replaced all local useMemo/useState imports with React namespace usage for consistency.",
    "files": [
      "src/react/pages/ProxyList.tsx",
      "src/react/pages/ProxyList/ApiUsage.tsx"
    ]
  },
  {
    "hash": "4d4d3cbcfd3b42a0127014441ac94df3ba0e155f",
    "date": "2025-09-17T12:02:53+07:00",
    "message": "fix(proxy-checker): ensure working proxies are saved to JSON on shutdown",
    "files": [
      "php_backend/proxy-checker.php"
    ]
  },
  {
    "hash": "4905dfe01ef84d872c62881022dbdee7ad89c82b",
    "date": "2025-09-17T11:56:23+07:00",
    "message": "feat(proxy-list): add always-visible log viewer with polling and improved recheck UX\n\n- Introduce `LogViewerState` type and state to manage log viewer UI and polling.\n- Refactor `handleRecheck` to accept `setLogViewer` and update log viewer state on recheck.\n- On mount, auto-fetch user ID and set log/status URLs for log viewer.\n- Implement polling logic to fetch and update logs every 3 seconds, only updating UI if log content changes.\n- Remove unnecessary console.log from proxy processing.\n- Add always-visible log viewer section styled for dark/light mode and Flowbite compatibility.\n- Update recheck button to trigger new `handleRecheck` signature.\n- Improve user feedback and log loading state.",
    "files": [
      "src/react/pages/ProxyList.tsx"
    ]
  },
  {
    "hash": "b8852ff4630c86859796b6ac79448a70fc4769a8",
    "date": "2025-09-17T11:54:26+07:00",
    "message": "feat(proxy-checker): add detailed logging of proxy details before performing checks",
    "files": [
      "php_backend/proxy-checker.php"
    ]
  },
  {
    "hash": "f8df8752998e95a6e839e74128ffe3cef74c552e",
    "date": "2025-09-17T11:49:32+07:00",
    "message": "fix(proxy-checker): improve dead and active proxy messages with detailed proxy information",
    "files": [
      "php_backend/proxy-checker.php"
    ]
  },
  {
    "hash": "8218cab83b98fecbfe8b527363e3659f38fe8b8c",
    "date": "2025-09-17T11:46:49+07:00",
    "message": "fix(proxy-checker): enhance dead proxy messages with detailed proxy information",
    "files": [
      "php_backend/proxy-checker.php"
    ]
  },
  {
    "hash": "95145941c39eb34c88705af0e4a218d5420f327e",
    "date": "2025-09-17T11:30:50+07:00",
    "message": "fix(CodeBlock): prevent warning by unsetting previous highlight before re-highlighting",
    "files": [
      "src/react/components/CodeBlock.tsx"
    ]
  },
  {
    "hash": "203f4265498161d8a0713d11c113eaa9a3f2539f",
    "date": "2025-09-17T11:28:53+07:00",
    "message": "feat(ProxyList): implement proxy re-check functionality with API call support",
    "files": [
      "src/react/pages/ProxyList.tsx"
    ]
  },
  {
    "hash": "298437950f971d4513cc11d4b3a90b2770aa0a89",
    "date": "2025-09-17T11:26:09+07:00",
    "message": "fix(proxy-checker): decode URL-encoded request parameters for proxy authentication",
    "files": [
      "php_backend/proxy-checker.php"
    ]
  },
  {
    "hash": "9ae19e58722444c23a6018dd09f2f7a19ddedeac",
    "date": "2025-09-17T11:21:57+07:00",
    "message": "refactor(proxy-list): replace <pre> blocks with CodeBlock component for API usage examples",
    "files": [
      "src/react/pages/ProxyList.tsx"
    ]
  },
  {
    "hash": "aa97f30f4ff05b12b64651c273be458b115147ef",
    "date": "2025-09-17T11:18:32+07:00",
    "message": "feat(CodeBlock): add CodeBlock component for syntax highlighting",
    "files": [
      "src/react/components/CodeBlock.tsx"
    ]
  },
  {
    "hash": "edd4abbc2424a14ac5e80648a1da78a8550f40d4",
    "date": "2025-09-17T11:10:28+07:00",
    "message": "feat(ProxyList): add API usage section with examples for proxy checking",
    "files": [
      "src/react/pages/ProxyList.tsx"
    ]
  },
  {
    "hash": "33a2d29b6441c058c1ecdce03d063fef54bc5968",
    "date": "2025-09-17T11:05:24+07:00",
    "message": "fix(Navbar): update proxy manager link to point to /proxy-list",
    "files": [
      "src/react/components/Navbar.tsx"
    ]
  },
  {
    "hash": "9886b08722987c1270452c56ce47bd787d144ec1",
    "date": "2025-09-17T11:02:35+07:00",
    "message": "fix(proxy-list): sort proxies by last_check date in descending order",
    "files": [
      "src/react/pages/ProxyList.tsx"
    ]
  },
  {
    "hash": "bee19bfc0431b16090e9ecf43bf3f682af757bfc",
    "date": "2025-09-17T11:01:35+07:00",
    "message": "refactor(proxy-checker): remove redundant safe_unlink calls for lock file\n\nEliminate multiple direct calls to safe_unlink($lockFile) within proxy checking logic.\nLock file is now only unlinked once at process shutdown via register_shutdown_function,\npreventing duplicate unlink attempts and ensuring cleaner resource management.",
    "files": [
      "php_backend/proxy-checker.php"
    ]
  },
  {
    "hash": "b59d22763c846d1f0000945e8579b69dfa91f0ee",
    "date": "2025-09-17T11:00:12+07:00",
    "message": "feat(proxy-checker): mark proxies as dead when no public IP is detected",
    "files": [
      "php_backend/proxy-checker.php"
    ]
  },
  {
    "hash": "37028a5301867902f37869a32f8f831ba8fdd53c",
    "date": "2025-09-17T10:55:43+07:00",
    "message": "fix(proxy-checker): update proxy status to 'unknown' when IP mismatch or unreachable",
    "files": [
      "php_backend/proxy-checker.php"
    ]
  },
  {
    "hash": "e3ad362d1bdfaee89379ab5218c503c61cb21f7c",
    "date": "2025-09-17T10:53:26+07:00",
    "message": "fix(proxy-checker): add last_check timestamp to active proxy updates",
    "files": [
      "php_backend/proxy-checker.php"
    ]
  },
  {
    "hash": "460eefc3553fc37773a868cc0dc4be5cf75e8ff3",
    "date": "2025-09-17T10:49:27+07:00",
    "message": "refactor(proxy-list): remove sslFilter state and integrate SSL option into typeFilter",
    "files": [
      "src/react/pages/ProxyList.tsx"
    ]
  },
  {
    "hash": "f5354f9d4fc7d1dcbe57f989d0457626c7582f4b",
    "date": "2025-09-17T10:42:42+07:00",
    "message": "fix(deps): remove proxies-grabber dependency resolutions",
    "files": [
      "package.json"
    ]
  },
  {
    "hash": "ffa4559a999f9cf81f835ecdf482a84dc9cb07b8",
    "date": "2025-09-17T10:40:14+07:00",
    "message": "fix(deps): add puppeteer and selenium with fingerprints to external dependencies",
    "files": [
      "rollup.php.js",
      "rollup.project.js",
      "rollup.whatsapp.js"
    ]
  },
  {
    "hash": "1489feae51b06db44d8fb0ff579fba76ede4cb9d",
    "date": "2025-09-17T10:39:37+07:00",
    "message": "fix(deps): update typescript to version 5.8.3",
    "files": [
      "packages/baileys",
      "packages/proxies-grabber"
    ]
  },
  {
    "hash": "83d8c4153150a7d9f1da47beef3a860d0b49bfbd",
    "date": "2025-09-17T10:27:41+07:00",
    "message": "fix(build): include additional file extensions in source file checksum calculation",
    "files": [
      "bin/build-project.mjs"
    ]
  },
  {
    "hash": "cfa8dd168b85d3ff1839e77cb27a576618a3129f",
    "date": "2025-09-17T09:55:33+07:00",
    "message": "fix(build): update checksum calculation to include all package.json files in the project",
    "files": [
      "bin/build-project.mjs"
    ]
  },
  {
    "hash": "b054fbb325906de48b754269337cfc1839411e01",
    "date": "2025-09-17T09:53:20+07:00",
    "message": "build(script): split checksum tracking into install and build steps in build-project.mjs",
    "files": [
      "bin/build-project.mjs"
    ]
  },
  {
    "hash": "9f7eec9dd21fc891a87ff09875a77bb4e2973151",
    "date": "2025-09-17T09:51:57+07:00",
    "message": "build(vite): load `.env.example` in GitHub CI and ensure VITE_ variables are properly injected",
    "files": [
      "vite.config.js"
    ]
  },
  {
    "hash": "86b698dab21b093700e762a0fbd9ef0a4fca6206",
    "date": "2025-09-17T09:46:49+07:00",
    "message": "refactor(env): rename `.env-sample` to `.env.example` and update documentation references",
    "files": [
      ".env.example",
      "cloud_sqlite/readme.md"
    ]
  },
  {
    "hash": "d13835b6b6a0aed7b73a3d8c45812dafb38c8e70",
    "date": "2025-09-17T09:44:58+07:00",
    "message": "fix(vite): enable overriding of environment variables when loading .env file",
    "files": [
      "vite.config.js"
    ]
  },
  {
    "hash": "098f0c451169d04213f13804f23974f949f2ede7",
    "date": "2025-09-17T09:43:19+07:00",
    "message": "build(vite): use dotenv parsed config instead of process.env for VITE_ variables",
    "files": [
      "vite.config.js"
    ]
  },
  {
    "hash": "d30360a706301155ccc2cd10d7f32ce639c459c0",
    "date": "2025-09-17T09:42:29+07:00",
    "message": "chore(husky): run commit history builder earlier in post-merge hook",
    "files": []
  },
  {
    "hash": "20c048c7836d56a36bc302711368114293ff346c",
    "date": "2025-09-17T09:35:51+07:00",
    "message": "style(ProxyList): improve filter layout for better usability and responsiveness",
    "files": [
      "src/react/pages/ProxyList.tsx"
    ]
  },
  {
    "hash": "2e3300804e3f68c22eb1d4a32152f058e7a5be42",
    "date": "2025-09-17T09:10:43+07:00",
    "message": "feat(vite): ensure process.env.VITE_ variables are set for better accessibility",
    "files": [
      "vite.config.js"
    ]
  },
  {
    "hash": "2ebf6474bb200ba8810dceae5f0976f5fc03b4bf",
    "date": "2025-09-17T09:08:45+07:00",
    "message": "fix(fix-perm): remove .phar files from ownership change for PHP files",
    "files": [
      "bin/fix-perm"
    ]
  },
  {
    "hash": "7c11c6ca9078431429bf86c568a1fde54719a6a4",
    "date": "2025-09-17T09:00:37+07:00",
    "message": "feat(vite): expose non-VITE_ env variables in VITE_ format for better accessibility",
    "files": [
      "vite.config.js"
    ]
  },
  {
    "hash": "e999984e87aad3d5f4fea693dbffeaacd1ced36e",
    "date": "2025-09-17T08:58:15+07:00",
    "message": "build(vite): load dotenv and inject all VITE_ env variables including git commit hash",
    "files": [
      "types/vite-env.d.ts",
      "vite.config.js"
    ]
  },
  {
    "hash": "848a13706be657479596a50252dd72e7bec7f764",
    "date": "2025-09-17T08:50:00+07:00",
    "message": "fix(proxy-list): enhance SSL filtering logic for improved proxy selection",
    "files": [
      "src/react/pages/ProxyList.tsx"
    ]
  },
  {
    "hash": "c5cfe1bfbaf2c2c830001c120843eb2f7f39c9a6",
    "date": "2025-09-17T08:45:43+07:00",
    "message": "feat(proxy-list): add new Proxy List page with reCAPTCHA protection, filtering, and pagination",
    "files": [
      "package.json",
      "src/react/pages/Home.tsx",
      "src/react/pages/ProxyList.tsx",
      "src/react/routes.js",
      "src/react/routes.json"
    ]
  },
  {
    "hash": "54d9f3f31e51a72167fc6a1cefd000ffdde4d4cf",
    "date": "2025-09-17T06:57:03+07:00",
    "message": "fix(recaptcha): refactor request handling to use parsed query data for reCAPTCHA verification\n- add status check endpoint and unify request parsing",
    "files": [
      "php_backend/recaptcha.php"
    ]
  },
  {
    "hash": "bb99a78e3e372f87f844b95848b956bde3d67a48",
    "date": "2025-09-17T06:43:00+07:00",
    "message": "feat(embed): add CORS headers to allow cross-origin requests",
    "files": [
      "embed.php"
    ]
  },
  {
    "hash": "521e0748c2921d1ac1b55f5f933a0ed85faa4328",
    "date": "2025-09-15T23:15:27+07:00",
    "message": "feat(proxy-checker): implement proxy checking functionality with CORS support and logging",
    "files": [
      "php_backend/proxy-checker.php"
    ]
  },
  {
    "hash": "7647b1c5ac9c8272a14580cbe89d287736a1c72a",
    "date": "2025-09-15T22:00:42+07:00",
    "message": "feat(clean-caches): add clean-caches.cmd script to execute php artisan cleaner for windows",
    "files": [
      "bin/clean-caches.cmd"
    ]
  },
  {
    "hash": "764feb5b1335d38195b581c8bcdb856c7fefd4ef",
    "date": "2025-09-15T21:59:44+07:00",
    "message": "fix(cleaner): enhance file date retrieval with exec fallback for unsupported cases",
    "files": [
      "artisan/cleaner.php"
    ]
  },
  {
    "hash": "963c972524fc560eefb717170e065bbbac5f1f1a",
    "date": "2025-09-15T21:58:17+07:00",
    "message": "fix(cleaner): fallback to file creation time if modification time unavailable",
    "files": [
      "artisan/cleaner.php"
    ]
  },
  {
    "hash": "c2fe2a8404e6fb17f282cd2709aeddec679a9de3",
    "date": "2025-09-15T21:53:49+07:00",
    "message": "feat(clear-caches): add php artisan cleaner command to Composer cache cleanup",
    "files": [
      "bin/clear-caches"
    ]
  },
  {
    "hash": "c025d4fb359b5a1c74aba68c3dfd3eb57698c9e6",
    "date": "2025-09-15T17:33:58+07:00",
    "message": "refactor: rename geoPlugin to GeoPlugin for PSR compliance\n\n- Rename file `geoPlugin.php` to `GeoPlugin.php`\n- Update class name from `geoPlugin` to `GeoPlugin`\n- Update references in `GeoIpHelper` and `GeoPlugin2` to use `GeoPlugin`\n- Standardize docblocks, comments, user agent string, and error messages to `GeoPlugin`",
    "files": [
      "src/PhpProxyHunter/GeoIpHelper.php",
      "src/PhpProxyHunter/GeoPlugin.php",
      "src/PhpProxyHunter/GeoPlugin2.php"
    ]
  },
  {
    "hash": "47ba0a1925f828dc3ba9877ad53bcf400dc30db5",
    "date": "2025-09-15T17:32:00+07:00",
    "message": "refactor: rename geoPlugin2 to GeoPlugin2 for PSR compliance\n\n- Rename file `geoPlugin2.php` to `GeoPlugin2.php`\n- Update class name from `geoPlugin2` to `GeoPlugin2`\n- Adjust error log messages to use updated class name\n- Update `geoPlugin` to reference `GeoPlugin2` instead of `geoPlugin2`",
    "files": [
      "src/PhpProxyHunter/GeoPlugin2.php",
      "src/PhpProxyHunter/geoPlugin.php"
    ]
  },
  {
    "hash": "9fd85496a4b4eae02023deb8b7641c661dc53a7b",
    "date": "2025-09-15T17:30:04+07:00",
    "message": "fix(extractor.php): reduce default limit in extractProxies function from 1000 to 100",
    "files": [
      "src/utils/proxy/extractor.php"
    ]
  },
  {
    "hash": "4e0cb7e92c01093d779c756500caf838866a0c71",
    "date": "2025-09-15T17:29:19+07:00",
    "message": "feat(geoPlugin2): add automatic GeoLite2 database download with fallback URLs\n\n- Introduce `$url_downloads` list with multiple sources for ASN, City, and Country databases\n- Implement constructor logic to check and download missing or outdated database files\n- Add `downloadFile` helper with cURL for robust file fetching, including SSL fallback and error logging\n- Ensure local databases are kept up to date before initializing MaxMind Reader instances",
    "files": [
      "geoIp.php",
      "src/PhpProxyHunter/geoPlugin.php",
      "src/PhpProxyHunter/geoPlugin2.php"
    ]
  },
  {
    "hash": "d7166e9555f8df2451e84ff77244561d82a307b6",
    "date": "2025-09-15T15:37:46+07:00",
    "message": "feat(func.php): add functions to manage user log files",
    "files": [
      "func.php"
    ]
  },
  {
    "hash": "c50f5bd5ba5b6a9cb8967e93a0c6540bcefbe843",
    "date": "2025-09-15T15:03:54+07:00",
    "message": "feat(func.php): add getUserStatusFile function to retrieve user status",
    "files": [
      "func.php"
    ]
  },
  {
    "hash": "404d0f73226b4b981c8760702b3a18e58166ee29",
    "date": "2025-09-15T15:00:20+07:00",
    "message": "refactor(shared.php): update require statement to load func-proxy.php",
    "files": [
      "php_backend/shared.php"
    ]
  },
  {
    "hash": "467beae6d98c51f35c825b87985cff4738316335",
    "date": "2025-09-15T14:59:43+07:00",
    "message": "refactor(php): improve PHP 7 compatibility and code clarity\n\n- Remove strict_types declaration for broader compatibility.\n- Remove unused imports of Proxy and ProxyDB.\n- Replace PHP 7+ type hints and return types with PHP 5/7 compatible docblocks.\n- Refactor function signatures to remove union and nullable types, using docblocks for type information.\n- Use short array syntax for all arrays.\n- Add or update docblocks for all functions to clarify parameter and return types.\n- Improve inline comments for SSL version selection and array handling.\n- Minor whitespace and formatting adjustments for consistency.",
    "files": [
      "func-proxy.php"
    ]
  },
  {
    "hash": "ead8d1215c6a8fdd70fd18d3804b33fadafc8b4a",
    "date": "2025-09-15T14:53:10+07:00",
    "message": "feat(proxydb): add support for CoreDB instance in constructor\n\n- Updated constructor docblock to include `CoreDB`\n- Allow passing `CoreDB` to ProxyDB constructor and use its `$db` property\n- Clarified MySQL-specific parameter descriptions in docblock",
    "files": [
      "src/PhpProxyHunter/ProxyDB.php"
    ]
  },
  {
    "hash": "545ca628a3757e28a195cedc934adc3e73189f34",
    "date": "2025-09-15T14:27:39+07:00",
    "message": "docs: remove deprecated UI preview images",
    "files": [
      "readme.md"
    ]
  },
  {
    "hash": "e6fd8349d17d83668f9af11a01f6012ff7bfc54c",
    "date": "2025-09-15T14:22:50+07:00",
    "message": "docs: add image for proxy checker parallel in README",
    "files": [
      "readme.md"
    ]
  },
  {
    "hash": "ddd4908837f97384c7036d12bb3bca18769fbf20",
    "date": "2025-09-15T14:06:10+07:00",
    "message": "refactor: update references from proxies-all.php to proxyCollector.php\n\n- Replaced `artisan/proxies-all.php` with `artisan/proxyCollector.php` in GitHub workflows\n- Updated script references in `bin/run-php` and `fix-nginx-perm.sh`\n- Adjusted documentation in `readme.md` to reflect new script name",
    "files": [
      ".github/workflows/checker-php.yml",
      ".github/workflows/checker-php.yml.txt",
      ".github/workflows/checker.yml.txt",
      "bin/run-php",
      "fix-nginx-perm.sh",
      "readme.md"
    ]
  },
  {
    "hash": "c30e9454779d5f75830b0562346b19f5c2ab5868",
    "date": "2025-09-15T14:05:01+07:00",
    "message": "refactor: move proxies-all.php to artisan/proxyCollector.php and update references\n\n- Renamed `proxies-all.php` to `artisan/proxyCollector.php`\n- Updated all workflow scripts, shell scripts, and documentation to use new path\n- Adjusted file includes and paths inside `proxyCollector.php` for correct relative references",
    "files": [
      ".github/workflows/checker-php.yml",
      ".github/workflows/checker-php.yml.txt",
      ".github/workflows/checker.yml.txt",
      "artisan/proxyCollector.php",
      "bin/run-php",
      "fix-nginx-perm.sh",
      "readme.md"
    ]
  },
  {
    "hash": "8a4cd2bc7f80dcdba8fbdce96b4127af5a5b8781",
    "date": "2025-09-15T13:35:24+07:00",
    "message": "fix(phpcs): disable multi-line control structure spacing rules",
    "files": [
      "phpcs.xml"
    ]
  },
  {
    "hash": "a79199230a27aebd605bed5f9d38c4e913f71562",
    "date": "2025-09-15T11:26:07+07:00",
    "message": "chore: update baileys v7",
    "files": [
      "packages/baileys"
    ]
  },
  {
    "hash": "89b6dfd7e878c45512c44caab7016479c3cb37e2",
    "date": "2025-09-15T10:50:50+07:00",
    "message": "fix(checker-php): add execution of composer-installer script before composer config",
    "files": [
      ".github/workflows/checker-php.yml"
    ]
  },
  {
    "hash": "c22114c9ad1aecb82744c27e2ce2aae0e441ded4",
    "date": "2025-09-15T10:49:45+07:00",
    "message": "docs(composer-installer): add JSDoc comments for functions in the script",
    "files": [
      "scripts/composer-installer.js"
    ]
  },
  {
    "hash": "6f5fce7fd106c8ad054f1c09a14544d884ec75d6",
    "date": "2025-09-15T10:03:32+07:00",
    "message": "fix(git-history.builder): correct output file path for git history JSON",
    "files": [
      "src/dev/git-history.builder.ts"
    ]
  },
  {
    "hash": "6aca2a7d79ec8be41914567313863e4ff64486fb",
    "date": "2025-09-15T09:59:10+07:00",
    "message": "build(dev): update git-history builder to write output to multiple locations\n\n- switched to using full `fs` and `path` modules instead of destructured imports\n- now writes `git-history.json` to both:\n  - `public/data`\n  - `dist/react`\n- added log message for each output file",
    "files": [
      "src/dev/git-history.builder.ts"
    ]
  },
  {
    "hash": "bb55e8e80dae34a0c36452f4fc4aac1966b98531",
    "date": "2025-09-15T09:52:13+07:00",
    "message": "fix(post-merge): remove unsupported OS check in post-merge script",
    "files": []
  },
  {
    "hash": "1b455a65c9e020d28a255c755f5468c023ef8526",
    "date": "2025-09-15T09:50:16+07:00",
    "message": "fix(post-merge): correct variable reference for commit history builder script",
    "files": []
  },
  {
    "hash": "293458dc0e84ce943182e79b5dc8b149e00efa63",
    "date": "2025-09-15T09:48:27+07:00",
    "message": "feat(post-merge): add commit history builder script execution",
    "files": []
  },
  {
    "hash": "2515aef60d2b01ab2702dcb8c8b8aec4e27ace46",
    "date": "2025-09-15T09:43:57+07:00",
    "message": "fix(LogsRepository): update constructor to accept CoreDB instance and throw exception for invalid types",
    "files": [
      "src/PhpProxyHunter/LogsRepository.php"
    ]
  },
  {
    "hash": "1167a827df5afd058f41dd8bf4e78a76c8b6607b",
    "date": "2025-09-15T09:37:19+07:00",
    "message": "fix(userdb): remove debug echo for auth_user table creation",
    "files": [
      "src/PhpProxyHunter/UserDB.php"
    ]
  },
  {
    "hash": "8ad39ad34be87b292ce105f65e765f2da06aa1ab",
    "date": "2025-09-15T09:27:51+07:00",
    "message": "feat(img): add image proxy with caching and validation\n\n- introduced php_backend/img.php\n- fetches remote images via cURL with 10s timeout and max size of 5MB\n- caches responses for 24h in tmp/image-cache with metadata\n- supports cache bypass with `refresh=1`\n- validates URL scheme and optional allowed hosts\n- streams content while writing to cache\n- ensures only valid image content-types are served",
    "files": [
      "php_backend/img.php"
    ]
  },
  {
    "hash": "d6dec570a171295857b1cfb7c885ba2e17c3f9cd",
    "date": "2025-09-15T09:27:03+07:00",
    "message": "feat(userdb): auto-create auth_user table based on driver type\n\n- auto-detects database driver (mysql/sqlite) when initialized with DB helper\n- ensures `auth_user` table exists with driver-specific schema\n- added console output to indicate table creation and driver type\n- updated UserDBTest to use dedicated tmp path for sqlite tests",
    "files": [
      "src/PhpProxyHunter/UserDB.php",
      "tests/PhpProxyHunter/UserDBTest.php"
    ]
  },
  {
    "hash": "a8c274dfe821953a6352610bf2d1fa84bf4a5eda",
    "date": "2025-09-15T09:26:19+07:00",
    "message": "fix(tests): update lock file paths to use local directory instead of system temp dir",
    "files": [
      "tests/PhpProxyHunter/FileLockHelperTest.php",
      "tests/PhpProxyHunter/UserDBSaldoArithmeticTest.php"
    ]
  },
  {
    "hash": "ff5c2c167a6f0c46903fc96892a4dd1279e6323a",
    "date": "2025-09-15T09:25:38+07:00",
    "message": "feat(session): add FileSessionHandler for filesystem-based session management\n\n- implemented FileSessionHandler class using SessionHandlerInterface\n- supports configurable session file path, prefix, and postfix\n- handles reading, writing, destroying, and garbage collection of session files\n- validates directory existence and writability on initialization",
    "files": [
      "src/FileSessionHandler.php"
    ]
  },
  {
    "hash": "7450899c4ff424960afec3ea779ae11c9de386b2",
    "date": "2025-09-15T09:24:50+07:00",
    "message": "fix(proxydb): ensure proxies are removed from added_proxies table\n\n- ProxyDB::remove now deletes from both `proxies` and `added_proxies` to maintain consistency\n- updated ProxyDBTest:\n  - use dedicated tmp path for sqlite tests\n  - added cleanup calls to remove test proxy in isAlreadyAdded/markAsAdded test",
    "files": [
      "src/PhpProxyHunter/ProxyDB.php",
      "tests/PhpProxyHunter/ProxyDBTest.php"
    ]
  },
  {
    "hash": "d69a164130b7cefe46cd3b7b1c0bc0484b56491b",
    "date": "2025-09-15T09:23:43+07:00",
    "message": "feat(sqlite): improve table creation and schema modification debugging\n\n- createTable: filter out empty or whitespace-only columns to prevent syntax errors\n- modifyColumn:\n  - wrapped CREATE TABLE execution in try/catch with debug logging to file and error log\n  - added var_dump outputs for generated SQL during modification\n- getTable definition: applied fixSQLiteSyntax to clean up SQL before parsing\n- introduced fixSQLiteSyntax helper:\n  - strips comments\n  - normalizes whitespace",
    "files": [
      "src/PhpProxyHunter/SQLiteHelper.php"
    ]
  },
  {
    "hash": "369d10bb7fecb4c258f85c804771dbd96baa51ef",
    "date": "2025-09-15T09:22:34+07:00",
    "message": "feat(logs): improve schema migrations and add validation for required tables\n\n- LogsRepository: added check to ensure `auth_user` table exists before creating logs\n- LogsRepositoryMigrations:\n  - ensured `meta` table is created for both MySQL and SQLite\n  - added conditional handling for `log_type` column creation\n  - added migration step to include `user_id` column in `user_activity`\n  - improved handling of `details` column updates with driver-specific logic\n- added LogRepositoryMigrationsDebug script for migration testing\n- updated LogsRepositoryTest to use dedicated tmp sqlite path",
    "files": [
      "src/PhpProxyHunter/LogsRepository.php",
      "src/PhpProxyHunter/LogsRepositoryMigrations.php",
      "tests/PhpProxyHunter/LogRepositoryMigrationsDebug.php",
      "tests/database/LogsRepositoryTest.php"
    ]
  },
  {
    "hash": "e8e26d12c1938763bc8168d2e1204ad144a0edc3",
    "date": "2025-09-15T09:21:28+07:00",
    "message": "refactor(schema): remove user_discount table from MySQL and SQLite schemas",
    "files": [
      "src/PhpProxyHunter/assets/mysql-schema.sql",
      "src/PhpProxyHunter/assets/sqlite-schema.sql"
    ]
  },
  {
    "hash": "e15cc7fb9ae01b1a28345c171848cc554ce42b08",
    "date": "2025-09-15T09:20:35+07:00",
    "message": "feat(coredb): extend BaseSQL and add delegated DB utility methods\n\n- CoreDB now extends BaseSQL\n- added delegation methods for common DB operations:\n  - createTable, insert, execute, count, update, delete\n  - add/modify/drop/columnExists helpers\n  - getTableColumns\n  - transaction control (beginTransaction, commit, rollback)\n- added explicit error handling when schema file cannot be read\n- updated CoreDBTest to use dedicated tmp directory for sqlite tests",
    "files": [
      "src/PhpProxyHunter/CoreDB.php",
      "tests/PhpProxyHunter/CoreDBTest.php"
    ]
  },
  {
    "hash": "5e682d986fe02eba8a1713d71d9da6434a2ecbe2",
    "date": "2025-09-11T18:23:55+07:00",
    "message": "refactor(sql): rename executeCustomQuery to execute across codebase\n\n- Updated BaseSQL abstract method from executeCustomQuery to execute\n- Refactored CoreDB, MySQLHelper, and SQLiteHelper to use execute\n- Replaced executeCustomQuery calls in list.php with execute\n- Adjusted related unit tests to reflect renamed method",
    "files": [
      "list.php",
      "src/PhpProxyHunter/BaseSQL.php",
      "src/PhpProxyHunter/CoreDB.php",
      "src/PhpProxyHunter/MySQLHelper.php",
      "src/PhpProxyHunter/SQLiteHelper.php",
      "tests/PhpProxyHunter/MySQLHelperTest.php",
      "tests/PhpProxyHunter/SQLiteHelperTest.php"
    ]
  },
  {
    "hash": "079a99c805bc29e3e135e6a36a68a0790eb1fecd",
    "date": "2025-09-11T18:19:49+07:00",
    "message": "feat(sql): add transaction support (begin, commit, rollback) to BaseSQL, MySQLHelper, and SQLiteHelper\n\n- Added abstract methods for beginTransaction, commit, and rollback to BaseSQL.\n- Implemented transaction methods in MySQLHelper and SQLiteHelper using PDO.\n- Added PHPUnit tests for transaction commit and rollback in both MySQLHelperTest and SQLiteHelperTest.",
    "files": [
      "src/PhpProxyHunter/BaseSQL.php",
      "src/PhpProxyHunter/MySQLHelper.php",
      "src/PhpProxyHunter/SQLiteHelper.php",
      "tests/PhpProxyHunter/MySQLHelperTest.php",
      "tests/PhpProxyHunter/SQLiteHelperTest.php"
    ]
  },
  {
    "hash": "5f9291ba49e6d51a0991547c2c5507300424a17b",
    "date": "2025-09-11T18:12:00+07:00",
    "message": "test(SQLiteHelperTest): add unit tests for modifyColumnIfExists method",
    "files": [
      "tests/PhpProxyHunter/SQLiteHelperTest.php"
    ]
  },
  {
    "hash": "6b2c9cc4d2ee5d5ded2e50ae72e0155a677a807b",
    "date": "2025-09-10T15:58:17+07:00",
    "message": "feat(database): implement modifyColumnIfExists method for dynamic column modification",
    "files": [
      "src/PhpProxyHunter/BaseSQL.php",
      "src/PhpProxyHunter/MySQLHelper.php",
      "src/PhpProxyHunter/SQLiteHelper.php",
      "tests/PhpProxyHunter/SQLiteHelperDebug.php"
    ]
  },
  {
    "hash": "ddc19f85b6d41c8af0cc22de14c42e82dabbf8f0",
    "date": "2025-09-10T15:57:22+07:00",
    "message": "feat(LogsRepository): update user_activity details column type for MySQL and SQLite",
    "files": [
      "src/PhpProxyHunter/LogsRepositoryMigrations.php"
    ]
  },
  {
    "hash": "591ada30eac5ff7ca8e311d2929eb2bf0f8cda88",
    "date": "2025-09-10T15:35:27+07:00",
    "message": "feat(LogsRepository): add migration handling for log repository schema changes",
    "files": [
      "src/PhpProxyHunter/LogsRepository.php",
      "src/PhpProxyHunter/LogsRepositoryMigrations.php"
    ]
  },
  {
    "hash": "7f461ba93b5b66b029cea8e366170b24aceec736",
    "date": "2025-09-10T15:30:14+07:00",
    "message": "fix(LogsRepository): add missing use statement for PDO",
    "files": [
      "src/PhpProxyHunter/LogsRepository.php"
    ]
  },
  {
    "hash": "9cc479e64509cf27c98519ebc6607358b015c589",
    "date": "2025-09-10T15:24:05+07:00",
    "message": "feat(db): support PDO injection in MySQLHelper and SQLiteHelper constructors\n\n- Updated MySQLHelper to accept either host credentials or an existing PDO instance\n- Updated SQLiteHelper to accept either database path or an existing PDO instance\n- Improved unique key generation to handle PDO-based connections\n- Enhanced SQLiteHelper::dropColumnIfExists to rebuild table schema safely\n- Added new test cases for constructor with PDO, table operations, and column management\n- Introduced SQLiteHelperDebug for debugging schema changes",
    "files": [
      "src/PhpProxyHunter/MySQLHelper.php",
      "src/PhpProxyHunter/SQLiteHelper.php",
      "tests/PhpProxyHunter/MySQLHelperTest.php",
      "tests/PhpProxyHunter/SQLiteHelperDebug.php",
      "tests/PhpProxyHunter/SQLiteHelperTest.php"
    ]
  },
  {
    "hash": "3795620398aff715014f87a52247a3b988f57e52",
    "date": "2025-09-10T14:26:30+07:00",
    "message": "feat(sql): add schema management methods for MySQL and SQLite helpers\n\n- Added abstract methods in BaseSQL for column and table schema operations:\n  - addColumnIfNotExists\n  - columnExists\n  - dropColumnIfExists\n  - getTableColumns\n- Implemented schema management in MySQLHelper using DESCRIBE and ALTER TABLE\n- Implemented schema management in SQLiteHelper using PRAGMA and ALTER TABLE\n- Updated PHPDoc and type hints for stricter definitions\n- Enabled strict typing across BaseSQL",
    "files": [
      "src/PhpProxyHunter/BaseSQL.php",
      "src/PhpProxyHunter/MySQLHelper.php",
      "src/PhpProxyHunter/SQLiteHelper.php"
    ]
  },
  {
    "hash": "9a6bba2d6cd9bc93e9a75c4b60a53e6c1b3523fa",
    "date": "2025-09-10T14:19:04+07:00",
    "message": "refactor(sql): introduce BaseSQL abstract class and extend MySQLHelper, SQLiteHelper from it",
    "files": [
      "src/PhpProxyHunter/BaseSQL.php",
      "src/PhpProxyHunter/MySQLHelper.php",
      "src/PhpProxyHunter/SQLiteHelper.php"
    ]
  },
  {
    "hash": "fb33865f24a21b48ebf75a23cc56630b09c29479",
    "date": "2025-09-10T14:12:55+07:00",
    "message": "refactor(UserDBTest): simplify user deletion logic in test cases",
    "files": [
      "tests/PhpProxyHunter/UserDBTest.php"
    ]
  },
  {
    "hash": "e6820b659f5f3b4336f8ff547c8075b0d1c298f0",
    "date": "2025-09-10T14:04:41+07:00",
    "message": "test(MySQLHelper): add unit tests for MySQLHelper class",
    "files": [
      "tests/PhpProxyHunter/MySQLHelperTest.php"
    ]
  },
  {
    "hash": "c398eed066289c04ac6fd469d7f3bd015ea524fd",
    "date": "2025-09-10T13:50:56+07:00",
    "message": "refactor(SQLiteHelper): rename static property $_databases to $databases",
    "files": [
      "src/PhpProxyHunter/SQLiteHelper.php"
    ]
  },
  {
    "hash": "66d5f7f6d4fdeb4994f0c7a96a0ac66fec718909",
    "date": "2025-09-10T13:22:19+07:00",
    "message": "feat: add mariadb support and proxy translation script\n\n- add `mariadb` dependency to package.json\n- add new script `src/react/i18n-translator.ts` for proxy translation and MySQL/MariaDB CRUD operations\n  - uses mariadb for database connection and schema setup\n  - implements proxy translation, proxy checking, and saving results to the database\n  - uses RFC3339 date format for processed proxies\n  - shuffles proxies before checking\n- add new test/debug script `tests/database/mysql-native-password-debug.ts` for managing MySQL user authentication plugin and printing user plugin info",
    "files": [
      "package.json",
      "src/react/i18n-translator.ts",
      "tests/database/mysql-native-password-debug.ts"
    ]
  },
  {
    "hash": "de718104c8c2bdd2574b064ccabb5dc27f1ba030",
    "date": "2025-09-10T11:44:57+07:00",
    "message": "fix(package): update proxies-grabber package URL to the latest version",
    "files": [
      "package.json"
    ]
  },
  {
    "hash": "81f6e4fd076766bc5d071d0fdbbe6dea2f448dd9",
    "date": "2025-09-10T11:39:47+07:00",
    "message": "chore: update locales",
    "files": [
      "src/react/locales/en.json",
      "src/react/locales/id.json"
    ]
  },
  {
    "hash": "1cdb9047abdc752206b1e622186de478ee7dd9c7",
    "date": "2025-09-10T10:38:02+07:00",
    "message": "feat(UserActivity): add UserActivityCard component and integrate user activity fetching",
    "files": [
      "src/react/locales/en.json",
      "src/react/locales/id.json",
      "src/react/pages/Dashboard.tsx",
      "src/react/pages/components/UserActivityCard.tsx"
    ]
  },
  {
    "hash": "79f92d2b21533c11373fe62a94122e99d47aa6f7",
    "date": "2025-09-10T10:37:08+07:00",
    "message": "refactor(userdb): rename get_saldo to getPoint and update all usages\n\n- Renamed the UserDB method `get_saldo` to `getPoint` for consistency with point-based terminology.\n- Updated all references to `get_saldo` in backend PHP files and tests.\n- Improved PHPDoc to reflect the new method name and clarify the return value.",
    "files": [
      "src/PhpProxyHunter/UserDB.php",
      "tests/PhpProxyHunter/UserDBSaldoArithmeticTest.php",
      "tests/PhpProxyHunter/UserDBTest.php"
    ]
  },
  {
    "hash": "976dfc8c0eade23c1303e19d9c0c07f639b2a951",
    "date": "2025-09-10T10:33:06+07:00",
    "message": "refactor(userdb): rename update_saldo to updatePoint and update all usages\n\n- Renamed the UserDB method `update_saldo` to `updatePoint` for improved clarity and consistency.\n- Updated all references to `update_saldo` in backend PHP files and tests.\n- Enhanced the PHPDoc for the method to clarify parameters, return value, and logging side effects.",
    "files": [
      "php_backend/refill-saldo.php",
      "php_backend/user-info.php",
      "src/PhpProxyHunter/UserDB.php",
      "tests/PhpProxyHunter/UserDBSaldoArithmeticTest.php",
      "tests/PhpProxyHunter/UserDBTest.php"
    ]
  },
  {
    "hash": "a8afe25fd8bc7c80a4e27eb844d353bc6d29d655",
    "date": "2025-09-10T10:28:35+07:00",
    "message": "feat(UserDB): replace direct database log insertion with logsRepository method",
    "files": [
      "src/PhpProxyHunter/UserDB.php"
    ]
  },
  {
    "hash": "225827396c5c96ba173253e9a8c0fe206b97f4c9",
    "date": "2025-09-10T10:27:28+07:00",
    "message": "feat(UserDB): add logsRepository property and initialize in constructor",
    "files": [
      "src/PhpProxyHunter/UserDB.php"
    ]
  },
  {
    "hash": "1e305bda741f55ba4930cf98ad1919aa42230de8",
    "date": "2025-09-10T10:26:32+07:00",
    "message": "feat(CoreDB): initialize LogsRepository instance in constructor",
    "files": [
      "src/PhpProxyHunter/CoreDB.php"
    ]
  },
  {
    "hash": "d3d351d7cfb4d186812d87d9788e8e43c497a5df",
    "date": "2025-09-10T10:25:20+07:00",
    "message": "refactor: move LogsRepository to PhpProxyHunter namespace and update imports",
    "files": [
      "php_backend/logs.php",
      "src/PhpProxyHunter/LogsRepository.php",
      "tests/database/LogsRepositoryTest.php"
    ]
  },
  {
    "hash": "2d1bf4e20553726e90c89f1e68b0d1a2d804f93b",
    "date": "2025-09-10T10:10:31+07:00",
    "message": "test(database): use UserDB for user management in LogsRepositoryTest\n\n- Add UserDB as a dependency for managing test users in MySQL tests.\n- Add reusable test user info and userId as class properties.\n- Refactor MySQL test setup to create and clean up test users using UserDB.\n- Ensure consistent user management for addLog and addActivity tests.",
    "files": [
      "tests/database/LogsRepositoryTest.php"
    ]
  },
  {
    "hash": "cd5d4d955028079630c42ce5510467d3980bdfeb",
    "date": "2025-09-10T10:01:19+07:00",
    "message": "feat(UserDB): enhance delete method to remove related records from user_activity, user_discount, user_logs, and user_fields",
    "files": [
      "src/PhpProxyHunter/UserDB.php"
    ]
  },
  {
    "hash": "6ac46935ce0aa3b0eebe8e14c34f4c6e0975e947",
    "date": "2025-09-10T09:47:56+07:00",
    "message": "feat(UserDB): add delete method to remove users and related records",
    "files": [
      "src/PhpProxyHunter/UserDB.php",
      "tests/PhpProxyHunter/UserDBTest.php"
    ]
  },
  {
    "hash": "756ea33cd469d6c1ec33923d2003cfedc97154be",
    "date": "2025-09-10T09:39:33+07:00",
    "message": "test: enhance UserDBTest cleanup to remove related child records\n\nExpanded the cleanup logic to delete entries from user_logs and user_fields before removing users, and adjusted deletion from auth_user to target by user IDs instead of filtering by username or email. This ensures a more reliable and consistent database state during tests.",
    "files": [
      "tests/PhpProxyHunter/UserDBTest.php"
    ]
  },
  {
    "hash": "3273b8b2a7b9dfc796f841aebaf9e7a2b2b6252c",
    "date": "2025-09-10T09:27:35+07:00",
    "message": "test: unify saldo arithmetic tests with data provider\n\n- replace separate SQLite and MySQL tests with single parameterized test using dbProvider\n- ensure SQLite database is properly created and removed after test\n- add MySQL setup and cleanup inside data-driven test\n- prevent duplicate user insertion by checking existence before adding",
    "files": [
      "tests/PhpProxyHunter/UserDBSaldoArithmeticTest.php"
    ]
  },
  {
    "hash": "e4f3c3dbe5df9d1fb97328e8480fd812771ef0bb",
    "date": "2025-09-10T09:24:45+07:00",
    "message": "feat(schema): add user_discount table for managing user discounts and packages",
    "files": [
      "src/PhpProxyHunter/assets/mysql-schema.sql",
      "src/PhpProxyHunter/assets/sqlite-schema.sql"
    ]
  },
  {
    "hash": "4e4c3cfa1e9706a196f5fd6c6385746ec0a436c6",
    "date": "2025-09-10T09:16:02+07:00",
    "message": "refactor(userdb): optimize update_saldo to reduce queries and improve logging\n\nReplaced multiple select queries with a single saldo lookup, removed redundant\nfinal query by returning the calculated saldo, and ensured extra_info is\nproperly normalized before logging.",
    "files": [
      "src/PhpProxyHunter/UserDB.php"
    ]
  },
  {
    "hash": "c3f3b243335abd68d7923b02963a50019ba9b7eb",
    "date": "2025-09-10T08:50:24+07:00",
    "message": "fix(LogRepository): ensure valid JSON or null for extra_info in addLog\n\n- Updated addLog to handle empty or null extra_info values for MySQL JSON columns.\n- Prevents invalid JSON errors by inserting null when extra_info is empty or null, and encoding arrays/objects as JSON.",
    "files": [
      "src/database/LogsRepository.php"
    ]
  },
  {
    "hash": "5b8f5629cdc7eed41ec9be7b2c25a8fb1d2f14e1",
    "date": "2025-09-10T08:40:49+07:00",
    "message": "feat(schema): add user_logs and user_activity tables for enhanced logging and activity tracking",
    "files": [
      "src/PhpProxyHunter/assets/mysql-schema.sql",
      "src/PhpProxyHunter/assets/sqlite-schema.sql"
    ]
  },
  {
    "hash": "5fd8ac47d1c66fceece7c6484823318d81a34b4f",
    "date": "2025-09-10T08:39:15+07:00",
    "message": "refactor(logs): decouple LogsRepository from CoreDB, accept PDO directly\n\n- Changed LogsRepository to accept a PDO instance in the constructor instead of CoreDB.\n- Updated driver detection to use PDO's getAttribute(PDO::ATTR_DRIVER_NAME).\n- Updated test setup to pass PDO instance from CoreDB to LogsRepository.",
    "files": [
      "src/database/LogsRepository.php",
      "tests/database/LogsRepositoryTest.php"
    ]
  },
  {
    "hash": "945658e21d2ca69a9202c274f8f1582e02812002",
    "date": "2025-09-10T08:36:40+07:00",
    "message": "refactor(database): move user_logs and user_activity table creation into LogsRepository",
    "files": [
      "src/PhpProxyHunter/assets/mysql-schema.sql",
      "src/PhpProxyHunter/assets/sqlite-schema.sql",
      "src/database/LogsRepository.php"
    ]
  },
  {
    "hash": "109d504df12ab20cc6b8d97db1ced4d891a935cd",
    "date": "2025-09-10T08:10:21+07:00",
    "message": "feat(schema,logs): enhance user log and activity storage, add file log helpers\n\n- Updated MySQL and SQLite schemas:\n  - Added `id` as primary key to `user_logs` and `user_activity` tables.\n  - Changed `extra_info`/`details` columns to use JSON (MySQL) or TEXT (SQLite, for JSON1 compatibility).\n  - Added more descriptive comments and improved structure for both tables.\n- Refactored `LogsRepository`:\n  - Added PHPDoc and type annotations for properties.\n  - Added constructor to initialize PDO and driver.\n  - Added `addLogByHash` method to write log content to file, auto-encoding arrays/objects as JSON.\n  - Added `getLogFilePath` helper to resolve log file path by hash.\n  - Refactored `getLogsByHash` to use `getLogFilePath` and support file-based log retrieval.\n  - Ensured all file log helpers throw clear exceptions if required functions are missing.\n- Added PHPUnit test for `LogsRepository` covering DB and file-based log operations for both SQLite and MySQL.",
    "files": [
      "src/PhpProxyHunter/assets/mysql-schema.sql",
      "src/PhpProxyHunter/assets/sqlite-schema.sql",
      "src/database/LogsRepository.php",
      "tests/database/LogsRepositoryTest.php"
    ]
  },
  {
    "hash": "81351f417fbf383e22ae3bb0cfb2585868d6bdf9",
    "date": "2025-09-10T07:20:23+07:00",
    "message": "feat(logs): refactor logs endpoint to use LogsRepository and shared DB\n\n- Refactored `php_backend/logs.php` to use a new `LogsRepository` class for fetching logs by hash.\n- Included `shared.php` for consistent database and utility function loading.\n- Added `src/database/LogsRepository.php` with a method to retrieve log content by hash, using helper functions for file access.\n- Improves maintainability and centralizes log file access logic.",
    "files": [
      "php_backend/logs.php",
      "src/database/LogsRepository.php"
    ]
  },
  {
    "hash": "afd7868800698928f13bc46079f90c4d464e42db",
    "date": "2025-09-10T07:12:16+07:00",
    "message": "refactor(logs): streamline request handling and improve code structure",
    "files": [
      "php_backend/logs.php"
    ]
  },
  {
    "hash": "5df3c92cfd944ef2f5b94674a8d2487da0dd4f84",
    "date": "2025-09-10T07:03:24+07:00",
    "message": "chore(Admin): replace saldo-related components to point-related",
    "files": [
      "src/react/pages/Admin.tsx",
      "src/react/pages/admin/AddPointForm.tsx",
      "src/react/pages/admin/ManagerPoint.tsx"
    ]
  },
  {
    "hash": "5be6854d8f8bef870132c00eb7cb54c3d1f78410",
    "date": "2025-09-10T06:05:55+07:00",
    "message": "feat(Dashboard): refactor to use DashboardContent component for improved structure",
    "files": [
      "src/react/pages/Dashboard.tsx",
      "src/react/pages/dashboard/DashboardContent.tsx"
    ]
  },
  {
    "hash": "37136e4609607b217b2bbc5f177081cd98921d76",
    "date": "2025-09-10T06:03:35+07:00",
    "message": "fix(SaldoManager): adjust margin for improved layout consistency",
    "files": [
      "src/react/pages/admin/SaldoManager.tsx"
    ]
  },
  {
    "hash": "87dc4f055510678ac370f4c4784e8bfaeb5dac57",
    "date": "2025-09-10T05:04:25+07:00",
    "message": "fix(copyIndexToRoutes): prevent copying index.html to itself\n\n- Add check to skip copying when source and destination paths are identical\n- Log skipped action for clarity",
    "files": [
      "vite-gh-pages.js"
    ]
  },
  {
    "hash": "d432a88394fd713856924eb769d67e8e92078744",
    "date": "2025-09-10T05:01:26+07:00",
    "message": "fix(deploy): use path.join for consistent file path handling in upload functions",
    "files": [
      "bin/deploy-vps.mjs"
    ]
  },
  {
    "hash": "cd53e2431a496f661590d5eb02fd039d5f691266",
    "date": "2025-09-10T04:59:35+07:00",
    "message": "fix(ReferenceError): __dirname is not defined",
    "files": [
      "bin/deploy-vps.mjs"
    ]
  },
  {
    "hash": "ae15d2845cd03b37cfae61a4895d750c77e4b5f0",
    "date": "2025-09-10T04:58:35+07:00",
    "message": "feat(deploy): use absolute maintenance page path and copy index to routes after build\n\n- Use `path.resolve` for maintenance page upload to ensure correct file path.\n- Import and call `copyIndexToRoutes` after building the project to update route indexes in the dist/react directory.",
    "files": [
      "bin/deploy-vps.mjs"
    ]
  },
  {
    "hash": "83b6ff26f6a746c3ab67d9ac299dfacc6a1733b8",
    "date": "2025-09-10T04:55:38+07:00",
    "message": "feat(deploy): add maintenance mode and file upload support\n\n- Introduce `uploadFile` function for single file SFTP uploads\n- Update deployment flow to:\n  - Upload `index.maintenance.html` as temporary maintenance page\n  - Build project\n  - Upload `dist` directory and final `index.html`\n- Add new `index.maintenance.html` page with Tailwind, Flowbite, and Font Awesome",
    "files": [
      "bin/deploy-vps.mjs",
      "index.maintenance.html"
    ]
  },
  {
    "hash": "9a53741a57cdb244cd05b700ef3206b8518f8858",
    "date": "2025-09-10T04:50:43+07:00",
    "message": "refactor(deploy): extract deployGitPath and export copyIndexToRoutes for SPA routing\n\n- Move deployGitPath definition to module scope for reuse.\n- Export copyIndexToRoutes as a standalone function with improved JSDoc.\n- Allow copyIndexToRoutes to accept an optional targetDir for flexible deployment.\n- Refactor deploy to use the new copyIndexToRoutes signature.",
    "files": [
      "vite-gh-pages.js"
    ]
  },
  {
    "hash": "2832ebd165be7b449b7fb11d50a5b91ed56ecef1",
    "date": "2025-09-10T04:07:24+07:00",
    "message": "fix: wrap buildForGithubPages call in conditional to ensure proper execution",
    "files": [
      "vite-gh-pages.js"
    ]
  },
  {
    "hash": "4ebcea2ee3f33153d6acf07a705eb8a198d0a2f2",
    "date": "2025-09-10T04:02:42+07:00",
    "message": "fix(post-merge): replace yarn build with node script for project build",
    "files": []
  },
  {
    "hash": "dfb0f2efc43669046e028b2078cb0cbe63574291",
    "date": "2025-09-10T03:53:02+07:00",
    "message": "fix(build): ensure shell compatibility for spawnSync and update deploy script\n\n- Add `shell: true` to yarn and npm spawnSync calls in build-project.mjs for better cross-platform compatibility.\n- Update deploy-vps.mjs to use build-project.mjs via node instead of direct npm run build, ensuring",
    "files": [
      "bin/build-project.mjs",
      "bin/deploy-vps.mjs"
    ]
  },
  {
    "hash": "fee6d25003cb88c1c1e612b6e73ec9ebe0ea3729",
    "date": "2025-09-10T03:45:20+07:00",
    "message": "feat(build): add checksum-based build caching and dependency install\n\n- Introduce checksum calculation for package.json and src files to detect changes.\n- Skip build and dependency install if no changes detected since last build.\n- Replace rollup config glob/build loop with conditional yarn install and npm build.\n- Store last build checksum in tmp/build/build-project-checksum.txt for future runs.",
    "files": [
      "bin/build-project.mjs"
    ]
  },
  {
    "hash": "c4f0f3bebe870ecec9b3695e50b56516c8e31698",
    "date": "2025-09-10T03:37:49+07:00",
    "message": "refactor: update checksum file path",
    "files": [
      "packages/proxies-grabber",
      "setup.js"
    ]
  },
  {
    "hash": "32fea59ff46fabf42f663e19512eedd4494f2798",
    "date": "2025-09-10T03:35:33+07:00",
    "message": "feat(deploy): add deploy-vps script for remote deployment and git pull functionality",
    "files": [
      "bin/deploy-vps.cmd",
      "bin/deploy-vps.mjs"
    ]
  },
  {
    "hash": "e4073136e10440115105a5664edac7dfce1557ab",
    "date": "2025-09-10T02:59:25+07:00",
    "message": "refactor(bin): rename create-file-hashes scripts to cfh\n\n- Rename all create-file-hashes scripts and references to cfh for brevity and consistency.\n- Update .gitattributes, .husky hooks, and documentation to use the new cfh script name.\n- Adjust merge driver configuration and related shell/cmd scripts to reference cfh.\n- Update internal imports and usage in supporting scripts.",
    "files": [
      ".gitattributes",
      "bin/cfh",
      "bin/cfh.cjs",
      "bin/cfh.cmd",
      "bin/git-pull.cjs",
      "readme.md",
      "setup.sh"
    ]
  },
  {
    "hash": "e2d55dc24d615f496ae6ca2a2b9d8308ca2d3dcd",
    "date": "2025-09-10T02:56:01+07:00",
    "message": "refactor(sqlite-installer): improve platform binary selection and error handling\n\n- Add JSDoc to pickDownload for better documentation.\n- Refactor pickDownload to return undefined and log errors instead of throwing.\n- Update main logic to handle undefined return from pickDownload and log a clear message if no suitable binary is found.",
    "files": [
      "scripts/sqlite-installer.js"
    ]
  },
  {
    "hash": "14026ca27c3d9379a1858c33657392e917c7bc45",
    "date": "2025-09-09T18:02:24+07:00",
    "message": "chore(vscode): add recommended extensions in extensions.json",
    "files": [
      ".vscode/extensions.json"
    ]
  },
  {
    "hash": "855eb4ef2dfe3a545c1e520e5b7aa6d39e5c92aa",
    "date": "2025-09-09T18:00:35+07:00",
    "message": "fix(PHP_CodeSniffer): disable trailing comma rule severity in phpcs.xml",
    "files": [
      "phpcs.xml"
    ]
  },
  {
    "hash": "cacbaf3617bf46a6ae4a5ade0d1baf5cfdae9a7f",
    "date": "2025-09-08T11:01:24+07:00",
    "message": "refactor(i18n): migrate saldo to point terminology and enhance package translations\n\n- Changed all saldo-related translation keys and UI labels to point-related ones in AddSaldoForm, EditSaldoForm, and SaldoManager.\n- Added and updated point-related translation keys in both `en.json` and `id.json`.\n- Added and improved package manager related translation keys in both languages.\n- Updated icon in SaldoManager to a point-related icon (fa-duotone fa-coins).",
    "files": [
      "src/react/locales/en.json",
      "src/react/locales/id.json",
      "src/react/pages/admin/AddSaldoForm.tsx",
      "src/react/pages/admin/EditSaldoForm.tsx",
      "src/react/pages/admin/SaldoManager.tsx"
    ]
  },
  {
    "hash": "bee7d6876e2c9e6b5f4f8b00339077f4d83a9b79",
    "date": "2025-09-08T09:44:56+07:00",
    "message": "refactor: remove toRupiah formatting for saldo in Dashboard, AddSaldoForm, and EditSaldoForm",
    "files": [
      "src/react/pages/Dashboard.tsx",
      "src/react/pages/admin/AddSaldoForm.tsx",
      "src/react/pages/admin/EditSaldoForm.tsx"
    ]
  },
  {
    "hash": "3687c10877f1c6ed25ab433cb6925131195bcdc2",
    "date": "2025-09-08T09:44:16+07:00",
    "message": "chore(UI): rename saldo to point",
    "files": [
      "src/react/locales/en.json",
      "src/react/locales/id.json",
      "src/react/pages/Dashboard.tsx"
    ]
  },
  {
    "hash": "ce1e356e6f779256142613da4a358a84f9473854",
    "date": "2025-09-07T19:19:19+07:00",
    "message": "fix(tailwind): ensure all buttons have pointer cursor for better UX",
    "files": [
      "tailwind.input.css"
    ]
  },
  {
    "hash": "161449de90b81b4c6b9961a6a4b3e1740b21a5ab",
    "date": "2025-09-07T19:01:07+07:00",
    "message": "docs(CoreDB): enhance constructor docblock with additional parameters for MySQL connection",
    "files": [
      "src/PhpProxyHunter/CoreDB.php"
    ]
  },
  {
    "hash": "7dbaa7c603b5fc96c6f1acf3c631efe50889f8b0",
    "date": "2025-09-07T18:59:32+07:00",
    "message": "feat(db): use is_debug_device to load environment-specific DB credentials",
    "files": [
      "php_backend/shared.php"
    ]
  },
  {
    "hash": "04fb2c005e94c8010a6c322709caf4c05110e4de",
    "date": "2025-09-07T18:56:16+07:00",
    "message": "refactor(debug): extract debug device check into is_debug_device and simplify is_debug logic",
    "files": [
      "func.php"
    ]
  },
  {
    "hash": "e21733447eae9e0fbcbaa97790beeb7e3f2ede20",
    "date": "2025-09-07T17:17:35+07:00",
    "message": "feat: add prepare:react script and automatic build steps in vite-plugin.js\n\n- Added `prepare:react` npm script to run `vite-plugin.js`.\n- Updated `vite-plugin.js` to automatically copy index.html, build Tailwind, and run `git-history.builder.ts` when executed directly.",
    "files": [
      "package.json",
      "vite-plugin.js"
    ]
  },
  {
    "hash": "f445e07e2aacebbc28cf242ae266eeddd1d49145",
    "date": "2025-09-07T16:56:46+07:00",
    "message": "feat(modal): add scrollable option and support for larger sizes\n\n- Added `scrollable` prop to allow modal body to scroll for long content.\n- Expanded `size` prop to support '2xl' and '3xl' modal sizes.\n- Updated default size to 'xl' fallback for safety.\n- Enhanced JSDoc comments for props and component usage examples.",
    "files": [
      "src/react/components/Modal.tsx"
    ]
  },
  {
    "hash": "32b67d98bdf15de9b38fece45e5f4ad83603b938",
    "date": "2025-09-07T16:01:50+07:00",
    "message": "feat(db): add MySQL support to ProxyDB and update tests\n\n- Extend ProxyDB to support both SQLite and MySQL databases.\n- Add new constructor parameters for MySQL connection: host, dbname, username, password, and unique constraints.\n- Implement `initMySQL()` method to initialize MySQL database and schema.\n- Refactor `initSQLite()` to separate SQLite initialization logic.\n- Update ProxyDBTest to support both SQLite and MySQL using a data provider.\n- Add setup and teardown methods for handling different database types in tests.\n- Ensure tests add, update, remove, and query proxies for both SQLite and MySQL.",
    "files": [
      "src/PhpProxyHunter/ProxyDB.php",
      "tests/PhpProxyHunter/ProxyDBTest.php"
    ]
  },
  {
    "hash": "b658b63bda3ea27d29ce50e843bde1d3bf97d4d1",
    "date": "2025-09-07T15:59:16+07:00",
    "message": "refactor(tests): update UserDBTest to use getenv for database credentials",
    "files": [
      "tests/PhpProxyHunter/UserDBTest.php"
    ]
  },
  {
    "hash": "0e6719032b2d268e05829d3b08a3b7adc74ad042",
    "date": "2025-09-07T15:53:35+07:00",
    "message": "refactor(core): move ProxyDB initialization into CoreDB\n\n- Removed direct instantiation of `ProxyDB` in `shared.php`.\n- Added `proxy_db` property to `CoreDB` and initialize it alongside `user_db`.\n- Updated `shared.php` to get `proxy_db` from `core_db`.",
    "files": [
      "php_backend/shared.php",
      "src/PhpProxyHunter/CoreDB.php"
    ]
  },
  {
    "hash": "a38a499705675ded5e34d51fdcda01884a091f58",
    "date": "2025-09-07T15:50:26+07:00",
    "message": "refactor(ProxyDB): optimize constructor to support helper instances and improve readability\n\n- Allow $dbLocation parameter to accept SQLiteHelper or MySQLHelper instances directly\n- Simplify database path normalization and in-memory detection\n- Replace die() with RuntimeException when directory creation fails\n- Streamline schema loading with clearer variable names\n- Add inline comments for clarity and maintain existing WAL and auto-vacuum setup\n- Keep daily vacuum maintenance call intact",
    "files": [
      "src/PhpProxyHunter/ProxyDB.php"
    ]
  },
  {
    "hash": "f84d84f45823ab34be540f008b68b29b4e9ba065",
    "date": "2025-09-07T15:46:56+07:00",
    "message": "refactor(proxydb): make ProxyDB compatible with PHP 7 by removing nullable and strict type hints",
    "files": [
      "src/PhpProxyHunter/ProxyDB.php"
    ]
  },
  {
    "hash": "596e75d3f0b133893b6c0525d567fd77c16540c5",
    "date": "2025-09-07T15:46:21+07:00",
    "message": "fix(phpcs): disable inline control structure rule with severity 0",
    "files": [
      "phpcs.xml"
    ]
  },
  {
    "hash": "7bc2cc6efa4ad97c814b81fec77b24b62a885a48",
    "date": "2025-09-07T15:41:07+07:00",
    "message": "refactor(shared): unify database initialization and dotenv loading\n\n- Added dotenv loading to shared.php for consistent environment setup\n- Replaced direct UserDB instantiation with $core_db->user_db\n- Updated CoreDB initialization to use environment variables and sqlite path",
    "files": [
      "php_backend/shared.php"
    ]
  },
  {
    "hash": "9a26b3098eb0589288f7fbe8af79b00b647b5413",
    "date": "2025-09-07T15:33:34+07:00",
    "message": "refactor(google-oauth): make PHP 7 compatible and improve phpdoc\n\n- Replaced null coalescing operators with isset checks\n- Removed scalar and return type hints for PHP 7 compatibility\n- Added detailed phpdoc blocks for utility functions:\n  - createGoogleClient\n  - refreshAccessTokenIfNeeded\n  - finalizeUserSession\n  - jsonResponse",
    "files": [
      "php_backend/google-oauth.php"
    ]
  },
  {
    "hash": "c6a406c3d4e339bdfa0b693692d936d7c7bf77e0",
    "date": "2025-09-07T15:32:00+07:00",
    "message": "refactor(php_backend): centralize DB initialization in shared.php\n\n- Added new `shared.php` to manage common DB connections (`UserDB`, `ProxyDB`, `CoreDB`)\n- Replaced direct `UserDB` and `ProxyDB` instantiations with shared variables\n- Updated `check-https-proxy.php`, `google-oauth.php`, `list-user.php`, `login.php`, `refill-saldo.php`, and `user-info.php` to include `shared.php`\n- Improved maintainability by preventing duplicate DB connection code",
    "files": [
      "php_backend/check-https-proxy.php",
      "php_backend/google-oauth.php",
      "php_backend/list-user.php",
      "php_backend/login.php",
      "php_backend/refill-saldo.php",
      "php_backend/shared.php",
      "php_backend/user-info.php"
    ]
  },
  {
    "hash": "27772c578ec3e6b1f7ca87a111d5d3a9969d9f47",
    "date": "2025-09-07T14:04:00+07:00",
    "message": "fix(phpcs): disable break indent error in switch-case",
    "files": [
      "phpcs.xml"
    ]
  },
  {
    "hash": "e7c3b00e2bbeaa56a19fa8580323dda27955305d",
    "date": "2025-09-07T11:58:02+07:00",
    "message": "refactor(core): allow UserDB to accept existing DB helper instance\n\n- Updated CoreDB to pass an existing SQLiteHelper or MySQLHelper instance to UserDB instead of connection parameters.\n- Modified UserDB constructor to accept a SQLiteHelper or MySQLHelper instance directly, enabling more flexible database management and reducing redundant connections.",
    "files": [
      "src/PhpProxyHunter/CoreDB.php",
      "src/PhpProxyHunter/UserDB.php"
    ]
  },
  {
    "hash": "48a9a8ecb598e2904fc0dc23dd00296255f23c0c",
    "date": "2025-09-07T11:53:51+07:00",
    "message": "refactor(userdb): make class PHP 7 compatible and improve phpdoc\n\n- Removed nullable and typed parameter hints for PHP 7 compatibility\n- Replaced null coalescing operator with isset checks\n- Adjusted return type hints to untyped for PHP 7\n- Added detailed phpdoc for constructor, mysql, sqlite, update, get_saldo, destructor, and close methods\n- Simplified conditions and removed redundant inline comments",
    "files": [
      "src/PhpProxyHunter/UserDB.php"
    ]
  },
  {
    "hash": "50c3203320dc3fa03e9d0c94bfbed6682d5f1c2f",
    "date": "2025-09-06T17:46:29+07:00",
    "message": "feat(modal): add reusable Modal component for displaying dialogs and confirmations and custom content",
    "files": [
      "src/react/components/Modal.tsx"
    ]
  },
  {
    "hash": "191b0fa967a141ee9375ef1c193aedf8c5e9a678",
    "date": "2025-09-06T17:05:26+07:00",
    "message": "refactor(changelog): simplify fetch logic and cache-busting in dev mode\n\n- Consolidate URL creation by using shared params object\n- Add timestamp param only in dev to avoid stale data\n- Use single fetch call with conditional headers\n- Update comments for clarity",
    "files": [
      "src/react/pages/Changelog.tsx"
    ]
  },
  {
    "hash": "1d0bf8961f23011c4b45de63d4ed7d859eb6f847",
    "date": "2025-09-06T17:02:33+07:00",
    "message": "fix(Changelog): add timestamp to URL in development to prevent caching issues",
    "files": [
      "src/react/pages/Changelog.tsx"
    ]
  },
  {
    "hash": "fb88fdb5f10d7da182e2575d6e35c9a3e651e7c1",
    "date": "2025-09-06T16:57:36+07:00",
    "message": "feat(changelog): show placeholder when no files changed in commit\n\nDisplay a placeholder message \"No files changed in this commit.\" in the changelog UI when a commit has an empty or missing `files` array, improving clarity for users viewing the commit history.",
    "files": [
      "src/react/pages/Changelog.tsx"
    ]
  },
  {
    "hash": "229f3809e329588859f3b0249662377a2edc3b69",
    "date": "2025-09-06T16:55:56+07:00",
    "message": "refactor(Changelog): replace oboe streaming with native fetch for git-history.json\n\n- Removed usage of streamJsonFromUrl and oboe.js for streaming JSON.\n- Switched to native fetch with cache-busting and no-cache headers to always retrieve the latest git-history.json.\n- Added a refresh button to manually reload the changelog data.\n- Improved refresh logic by introducing a refreshKey state and resetting pagination on refresh.\n- Cleaned up legacy promise and streaming logic for clarity and reliability.",
    "files": [
      "src/react/pages/Changelog.tsx"
    ]
  },
  {
    "hash": "a2cac1f3d16de8ad3e27aa014dcb06e8c4542fba",
    "date": "2025-09-06T16:49:46+07:00",
    "message": "refactor(json): add no-cache headers to oboe request options",
    "files": [
      "src/react/utils/json.ts"
    ]
  },
  {
    "hash": "6971ba6731a782cab8f36d37c384f624583665af",
    "date": "2025-09-06T16:29:27+07:00",
    "message": "chore(post-commit): add commit history builder execution to post-commit hook",
    "files": []
  },
  {
    "hash": "0cae8ee20fb16221f5c13c745633c0a9c5f5a6a6",
    "date": "2025-09-06T16:02:04+07:00",
    "message": "refactor(coredb): make constructor parameters public fields and remove getters\n\n- Changed all private constructor parameter fields to public properties with updated PHPDoc.\n- Removed redundant getter methods for constructor parameters.\n- Updated constructor to assign values directly to public fields.",
    "files": [
      "src/PhpProxyHunter/CoreDB.php"
    ]
  },
  {
    "hash": "8df0774a57f19006bea328cea0bbb48c7f665fb5",
    "date": "2025-09-06T15:59:31+07:00",
    "message": "test: clean up related user_discount rows before deleting test users in UserDBTest",
    "files": [
      "tests/PhpProxyHunter/UserDBTest.php"
    ]
  },
  {
    "hash": "a63c28ff6cee95774e9a842d1909f495786ce717",
    "date": "2025-09-06T15:56:27+07:00",
    "message": "refactor(CoreDBTest): simplify database cleanup by removing unnecessary truncation",
    "files": [
      "tests/PhpProxyHunter/CoreDBTest.php"
    ]
  },
  {
    "hash": "cce766c91c96158c6652faa657ac7391d0169fd3",
    "date": "2025-09-06T15:54:51+07:00",
    "message": "test(CoreDB): add unit tests for CoreDB class with MySQL and SQLite support",
    "files": [
      "tests/PhpProxyHunter/CoreDBTest.php"
    ]
  },
  {
    "hash": "844750b5b6582abb2a3773f1ec5499b7d724a674",
    "date": "2025-09-06T15:50:26+07:00",
    "message": "chore(phpcs): disable specific PSR-12 rules for CoreDBTest.php\n\n- Disabled `PSR12.Files.FileHeader.SpacingAfterBlock`\n- Disabled `PSR12.ControlStructures.ControlStructureSpacing.LineIndent`",
    "files": [
      "phpcs.xml"
    ]
  },
  {
    "hash": "0a62e5312292ea8814b607a96f571bcc494d7d13",
    "date": "2025-09-06T15:45:19+07:00",
    "message": "refactor(coredb): remove PHP 8+ type hints for PHP 7 compatibility\n\n- Replaced typed properties (?string, ?bool) with untyped properties\n- Removed typed parameters and return types from methods\n- Replaced `\\Throwable` with `\\Exception` in constructor try-catch\n- Replaced null coalescing assignment (`??=`) with explicit null check\n- Adjusted WAL mode check for compatibility with PHP 7",
    "files": [
      "src/PhpProxyHunter/CoreDB.php"
    ]
  },
  {
    "hash": "f5ba61640e64ad249323fc12080bea8b7b963834",
    "date": "2025-09-06T15:43:52+07:00",
    "message": "feat(CoreDB): initialize user_db instance in MySQL and SQLite constructors",
    "files": [
      "src/PhpProxyHunter/CoreDB.php"
    ]
  },
  {
    "hash": "d532e4e426848f58b00dc24083db372ac5a355fd",
    "date": "2025-09-06T14:48:49+07:00",
    "message": "chore(phpcs): disable Squiz.Functions.MultiLineFunctionDeclaration.Indent sniff\n\nSet severity to 0 for Squiz.Functions.MultiLineFunctionDeclaration.Indent in phpcs.xml to suppress multi-line function declaration indent errors.",
    "files": [
      "phpcs.xml"
    ]
  },
  {
    "hash": "ea2db919775073e9bc7dffb5e2b8f08e98985646",
    "date": "2025-09-06T14:38:38+07:00",
    "message": "fix(mysql): add fallback to switch user authentication to caching_sha2_password if mysql_native_password plugin auto-install fails",
    "files": [
      "src/PhpProxyHunter/MySQLHelper.php"
    ]
  },
  {
    "hash": "e4307cab0a509f3ff6f13efebeeeb9b9e7fbfe36",
    "date": "2025-09-06T14:25:48+07:00",
    "message": "refactor: remove redundant PHP_PROXY_HUNTER access checks from database and scheduler classes",
    "files": [
      "src/PhpProxyHunter/MySQLHelper.php",
      "src/PhpProxyHunter/ProxyDB.php",
      "src/PhpProxyHunter/SQLiteHelper.php",
      "src/PhpProxyHunter/Scheduler.php",
      "src/PhpProxyHunter/UserDB.php"
    ]
  },
  {
    "hash": "d3c57e0d040d9e62d77935ca04091f15183c77a8",
    "date": "2025-09-06T14:24:25+07:00",
    "message": "refactor(mysql): rename static property $_databases to $databases for consistency",
    "files": [
      "src/PhpProxyHunter/MySQLHelper.php"
    ]
  },
  {
    "hash": "7efeafc96507da823f25084a174e3eb43b8d6c77",
    "date": "2025-09-06T14:21:17+07:00",
    "message": "fix(mysql): handle missing mysql_native_password plugin by attempting auto-install",
    "files": [
      "src/PhpProxyHunter/MySQLHelper.php"
    ]
  },
  {
    "hash": "0ee8c3cee2fc569babab147ece4b70cf1c062535",
    "date": "2025-09-06T05:33:22+07:00",
    "message": "refactor: add exclusion for incorrect exact indentation in phpcs.xml",
    "files": [
      "phpcs.xml"
    ]
  },
  {
    "hash": "bb76ab040e940e55f24537f4f758d4cde2493cfd",
    "date": "2025-09-05T18:37:54+07:00",
    "message": "refactor: update exclusion patterns in configuration files to improve code quality checks",
    "files": [
      ".php-cs-fixer.dist.php",
      "phpcs.xml"
    ]
  },
  {
    "hash": "9ccee2234b8b7ec29a90a9f5ab8fbd19d2fe690c",
    "date": "2025-09-05T18:35:35+07:00",
    "message": "refactor: add rule to ensure newline after opening PHP tag",
    "files": [
      ".php-cs-fixer.dist.php"
    ]
  },
  {
    "hash": "a3f87413774dd7aca01e16ebc7cabe2265045666",
    "date": "2025-09-05T18:24:29+07:00",
    "message": "refactor: standardize indentation and formatting in phpcs.xml",
    "files": [
      "phpcs.xml"
    ]
  },
  {
    "hash": "e314c2ea6da7f860989c819cdaac8da9604cca93",
    "date": "2025-09-05T17:15:43+07:00",
    "message": "refactor: improve readability of CLI check in cleaner.php",
    "files": [
      "artisan/cleaner.php"
    ]
  },
  {
    "hash": "474d8cb60fa6317cf656c52936366f350150d8b9",
    "date": "2025-09-05T16:58:05+07:00",
    "message": "refactor: code for consistency and readability\n\n- Adjusted whitespace and alignment in various files for improved readability.\n- Standardized string delimiters from double quotes to single quotes where applicable.\n- Ensured consistent variable assignments and formatting across multiple test files.\n- Enhanced user agent generation functions for better clarity and structure.\n- Updated header settings in user agent script to use single quotes for consistency.\n- Cleaned up array definitions and function calls for better visual alignment.",
    "files": [
      "artisan/cleaner.php",
      "artisan/filterPorts.php",
      "artisan/filterPortsBackground.php",
      "artisan/filterPortsDuplicate.php",
      "artisan/proxyFetcher.php",
      "artisan/proxyWorking.php",
      "artisan/proxyWorkingBackground.php",
      "cidr-information/CIDR-check.php",
      "cidr-information/CIDR-ports.php",
      "cidr-information/CIDR-ranges.php",
      "cidr-information/checkPorts.php",
      "cloud_sqlite/config.php",
      "cloud_sqlite/delete.php",
      "cloud_sqlite/fetch-updated.php",
      "cloud_sqlite/fetch.php",
      "cloud_sqlite/init.php",
      "cloud_sqlite/sync.php",
      "data/azenv.php",
      "data/browser.php",
      "data/index.php",
      "data/login.php",
      "data/webgl.php",
      "embed.php",
      "func-proxy.php",
      "func.php",
      "geoIp.php",
      "geoIpBackground.php",
      "github-actions-init.php",
      "index.php",
      "info.php",
      "list.php",
      "logout.php",
      "mergeDB.php",
      "php_backend/check-https-proxy.php",
      "php_backend/get_sms.php",
      "php_backend/google-oauth.php",
      "php_backend/list-user.php",
      "php_backend/login.php",
      "php_backend/logout.php",
      "php_backend/logs.php",
      "php_backend/recaptcha.php",
      "php_backend/refill-saldo.php",
      "php_backend/user-info.php",
      "proxies-all.php",
      "proxyAdd.php",
      "proxyChecker.php",
      "proxyCheckerBackground.php",
      "proxyCheckerParallel-func.php",
      "proxyCheckerParallel.php",
      "proxyManager.php",
      "proxyRespawner.php",
      "scanPorts.php",
      "send_curl.php",
      "src/PhpProxyHunter/CoreDB.php",
      "src/PhpProxyHunter/ExecutionTimer.php",
      "src/PhpProxyHunter/FileLockHelper.php",
      "src/PhpProxyHunter/GeoIpHelper.php",
      "src/PhpProxyHunter/MySQLHelper.php",
      "src/PhpProxyHunter/Proxy.php",
      "src/PhpProxyHunter/ProxyDB.php",
      "src/PhpProxyHunter/SQLiteHelper.php",
      "src/PhpProxyHunter/Server.php",
      "src/PhpProxyHunter/Session.php",
      "src/PhpProxyHunter/UserDB.php",
      "src/PhpProxyHunter/geoPlugin.php",
      "src/PhpProxyHunter/geoPlugin2.php",
      "src/autoload.php",
      "src/hashers/CustomPasswordHasher.php",
      "src/simplehtmldom/Debug.php",
      "src/simplehtmldom/HtmlDocument.php",
      "src/simplehtmldom/HtmlNode.php",
      "src/simplehtmldom/example/example_basic_selector.php",
      "src/simplehtmldom/example/example_callback.php",
      "src/simplehtmldom/example/example_modify_contents.php",
      "src/simplehtmldom/example/scraping/example_scraping_digg.php",
      "src/simplehtmldom/example/scraping/example_scraping_imdb.php",
      "src/simplehtmldom/example/scraping/example_scraping_slashdot.php",
      "src/simplehtmldom/simple_html_dom.php",
      "src/utils/file/crud.php",
      "src/utils/file/index.php",
      "src/utils/file/sanitizer.php",
      "src/utils/proxy/cidr.php",
      "src/utils/proxy/extractor.php",
      "src/utils/proxy/validator.php",
      "src/utils/string/index.php",
      "src/utils/string/useragent.php",
      "src/utils/utils.php",
      "tests/ExecutionTimerTest.php",
      "tests/PhpProxyHunter/SQLiteHelperTest.php",
      "tests/PhpProxyHunter/UserDBSaldoArithmeticTest.php",
      "tests/PhpProxyHunter/UserDBTest.php",
      "tests/SchedulerTest.php",
      "tests/buildCurl.php",
      "tests/checkProxy.php",
      "tests/cidr-random-proxy.php",
      "tests/cloud_sqlite/AuthTest.php",
      "tests/cloud_sqlite/FetchApiTest.php",
      "tests/cloud_sqlite/FetchUpdatedApiTest.php",
      "tests/cloud_sqlite/SyncApiTest.php",
      "tests/curl-test.php",
      "tests/curl-verbose.php",
      "tests/extractPorts.php",
      "tests/extractProxy.php",
      "tests/filterIpPortLines.php",
      "tests/getSmsTest.php",
      "tests/moveLinesToFile.php",
      "tests/removeStringAndMoveToFile.php",
      "tests/removeStringFromFile.php",
      "tests/run-python.php",
      "tests/runScriptInbackground.php",
      "tests/twig-i18n.php",
      "useragent.php"
    ]
  },
  {
    "hash": "356b916de3b0f0dbdaebee1bdd67a8faf81d8506",
    "date": "2025-09-05T16:43:01+07:00",
    "message": "refactor: update PHPCS configuration to include additional rules and improve coding standards",
    "files": [
      "composer.json",
      "phpcs.xml"
    ]
  },
  {
    "hash": "cde945b0e7c6822dc90066e3064468b423ad2a6b",
    "date": "2025-09-05T16:29:39+07:00",
    "message": "refactor: update PHP CS Fixer and PHPCS configuration to align with PSR-12 standards",
    "files": [
      ".php-cs-fixer.dist.php",
      "phpcs.xml"
    ]
  },
  {
    "hash": "4b3c970795c297ca7a8fd307a7f9b0f956f518a8",
    "date": "2025-09-05T12:51:17+07:00",
    "message": "refactor: try implement php linter and fixer",
    "files": [
      ".php-cs-fixer.dist.php",
      ".vscode/settings.json",
      "phpcs.xml"
    ]
  },
  {
    "hash": "bb16974385ffdd60b30a56c00a8726380a3b2d2e",
    "date": "2025-09-05T04:28:38+07:00",
    "message": "refactor(UserDBTest): remove redundant file deletion check for SQLite test database",
    "files": [
      "tests/PhpProxyHunter/UserDBTest.php"
    ]
  },
  {
    "hash": "0a6d961b91bebc316463ed1ad7196c0f882f772f",
    "date": "2025-09-05T04:27:54+07:00",
    "message": "feat(coredb): store constructor parameters and add getters for retrieval",
    "files": [
      "src/PhpProxyHunter/CoreDB.php"
    ]
  },
  {
    "hash": "c990ebb49a73cbdd2e7474fb100e7dc32c0c00ae",
    "date": "2025-09-04T22:11:11+07:00",
    "message": "refactor(admin): move page-level layout styling from SaldoManager to Admin\n\n- Wrapped `SaldoManager` with container in `Admin` for consistent layout\n- Removed redundant min-height and background styling from `SaldoManager`",
    "files": [
      "src/react/pages/Admin.tsx",
      "src/react/pages/admin/SaldoManager.tsx"
    ]
  },
  {
    "hash": "e8d81a9c207f65c2872e8cfe476d5c72be21f534",
    "date": "2025-09-04T21:29:18+07:00",
    "message": "refactor(coredb): improve type safety and schema initialization\n\nAdded strict type hints, replaced `die()` with `RuntimeException`, and extracted schema loading into a reusable `loadSchema` method. Also refactored MySQL/SQLite initialization methods for clarity and maintainability.",
    "files": [
      "src/PhpProxyHunter/CoreDB.php"
    ]
  },
  {
    "hash": "81eb3c282b9c5446eecdd878f8aa3de6d3163b5a",
    "date": "2025-09-04T21:27:53+07:00",
    "message": "feat: add dbPath property to CoreDB for SQLite database file path",
    "files": [
      "src/PhpProxyHunter/CoreDB.php"
    ]
  },
  {
    "hash": "3112b39e6b4a66eb5ae611e36a8f7c49cd37883d",
    "date": "2025-09-04T21:21:57+07:00",
    "message": "fix: update phpunit version constraint to include version 6",
    "files": [
      "composer.json"
    ]
  },
  {
    "hash": "90480f5e5fd0904e7919dcedfa95bec324b8a733",
    "date": "2025-09-04T20:56:05+07:00",
    "message": "feat: add driver property to CoreDB for tracking database type",
    "files": [
      "src/PhpProxyHunter/CoreDB.php"
    ]
  },
  {
    "hash": "efa0beaca04361522a3f0076f2912baff56f0daa",
    "date": "2025-09-04T20:37:26+07:00",
    "message": "feat: enhance CoreDB constructor to support direct SQLite and MySQL initialization",
    "files": [
      "src/PhpProxyHunter/CoreDB.php"
    ]
  },
  {
    "hash": "f7ea8e0d7d77f2b4e432e37d88eae8b8bf3721c1",
    "date": "2025-09-04T19:08:31+07:00",
    "message": "feat: implement CoreDB class for MySQL and SQLite database connections",
    "files": [
      "src/PhpProxyHunter/CoreDB.php"
    ]
  },
  {
    "hash": "9b5bf2911baf99997ad8828737f2758e2e921991",
    "date": "2025-09-04T19:02:41+07:00",
    "message": "fix: update script paths to include 'artisan' for proxyWorking.php",
    "files": [
      "bin/check-proxy.cmd",
      "bin/loop-check-proxy.cmd"
    ]
  },
  {
    "hash": "970d1cc545f83b61b0cae587d035a9704b4ba878",
    "date": "2025-09-04T19:00:36+07:00",
    "message": "fix(geoip): handle missing IPs gracefully in geoPlugin2 and geoPlugin\n\n- Wrap GeoIP2 city lookup in geoPlugin2::locate() with try-catch to prevent fatal errors for missing IPs, returning null instead.\n- Update geoPlugin to check for null from geoPlugin2::locate() before assigning properties.\n- Minor constructor simplification in geoPlugin.",
    "files": [
      "src/PhpProxyHunter/geoPlugin.php",
      "src/PhpProxyHunter/geoPlugin2.php"
    ]
  },
  {
    "hash": "e62dfd0855cb0a6a5abf4dd0cd0d61a7da200250",
    "date": "2025-09-04T18:56:39+07:00",
    "message": "refactor(github-pages): simplify paths for push events in workflow",
    "files": [
      ".github/workflows/github-pages.yml"
    ]
  },
  {
    "hash": "61f8f572a754a75ac7f016e8c46fe4bf77a77104",
    "date": "2025-09-04T18:55:17+07:00",
    "message": "fix(geoPlugin): prevent array_keys warning on null country names\n\n- Added type check for $record->country->names before calling array_keys() in fromGeoIp2CityModel to avoid PHP warning when value is null.",
    "files": [
      "src/PhpProxyHunter/geoPlugin.php"
    ]
  },
  {
    "hash": "d0345d1d33b13afca3311abbdf947082113c5cec",
    "date": "2025-09-04T18:20:34+07:00",
    "message": "feat: add production database configuration to .env-sample",
    "files": [
      ".env-sample"
    ]
  },
  {
    "hash": "4b74c262bf82c3af3ec650650dfdba77971e93b5",
    "date": "2025-09-04T18:11:32+07:00",
    "message": "test: load MySQL config from environment variables in UserDBTest\n\n- Replace hardcoded MySQL connection values with environment-based config\n- Initialize MySQL credentials in setUp() from $_ENV\n- Use Dotenv::createUnsafeImmutable in bootstrap.php\n- Sync $_ENV values to getenv() for compatibility",
    "files": [
      "tests/PhpProxyHunter/UserDBTest.php",
      "tests/bootstrap.php"
    ]
  },
  {
    "hash": "2e46e923464bd04b2d7343afcd2d9413ce752dc3",
    "date": "2025-09-04T18:05:22+07:00",
    "message": "test: refactor UserDBTest for multi-db support and cleanup\n\n- Refactored `UserDBTest` to support both SQLite and MySQL using a data provider.\n- Replaced `setUp`/`tearDown` with `setUpDB`/`tearDownDB` methods parameterized by driver.\n- Added `dbProvider` for running tests on both database types.\n- Cleaned up test database tables before each MySQL test using a loop.\n- Updated tests to use the new setup/teardown and accept the driver as a parameter.\n- Improved test clarity and reduced code duplication.",
    "files": [
      "tests/PhpProxyHunter/UserDBTest.php",
      "tests/bootstrap.php"
    ]
  },
  {
    "hash": "5436b069de84dbeec57d6e5c3383498bbdf1a441",
    "date": "2025-09-04T18:04:22+07:00",
    "message": "refactor: PHP 7 compatible",
    "files": [
      "src/PhpProxyHunter/MySQLHelper.php",
      "src/PhpProxyHunter/SQLiteHelper.php"
    ]
  },
  {
    "hash": "2e6b44b04e45408948dc3291ec46317b7422c75d",
    "date": "2025-09-04T18:03:33+07:00",
    "message": "feat: update deployment and configuration files for improved PHP environment setup",
    "files": [
      ".idea/deployment.xml",
      ".idea/misc.xml",
      ".idea/php-test-framework.xml",
      ".idea/php.xml",
      ".vscode/settings.json"
    ]
  },
  {
    "hash": "b5f78f0de718efeb06940beb5937ed8c73c22c1d",
    "date": "2025-09-03T14:45:49+07:00",
    "message": "fix(vite.config): increase file watching interval to 3000ms for improved reliability",
    "files": [
      "vite.config.js"
    ]
  },
  {
    "hash": "b7f649ad85fd3ccfcf386d91713f4f8a611a52cc",
    "date": "2025-09-03T14:43:39+07:00",
    "message": "feat: add 'browser-with-fingerprints' to external dependencies in rollup configurations",
    "files": [
      "rollup.php.js",
      "rollup.project.js",
      "rollup.whatsapp.js"
    ]
  },
  {
    "hash": "9af3dcda32186f1b790754a9d6ae5a1a152e0cdf",
    "date": "2025-09-03T14:40:28+07:00",
    "message": "fix(vite.config): disable polling for file watching to improve performance",
    "files": [
      "vite.config.js"
    ]
  },
  {
    "hash": "bcdc2c74888f4b8f015001f5fea404d6d903e112",
    "date": "2025-09-03T14:36:16+07:00",
    "message": "refactor(admin): extract saldo management logic to SaldoManager component\n\n- Moved all saldo management logic and UI from Admin.tsx to a new SaldoManager component.\n- Replaced the implementation in Admin.tsx with a simple wrapper that renders <SaldoManager />.\n- Created src/react/pages/admin/SaldoManager.tsx to encapsulate user saldo, password, and user management forms and logic.\n- Improves code organization and separation of concerns in the admin pages.",
    "files": [
      "src/react/pages/Admin.tsx",
      "src/react/pages/admin/SaldoManager.tsx"
    ]
  },
  {
    "hash": "0ab3f4d3dc196c1bb1896e73a995f8eca837680e",
    "date": "2025-09-02T20:11:07+07:00",
    "message": "feat(changelog): render commit messages as markdown\n\n- Added `react-markdown` dependency\n- Updated `Changelog.tsx` to render commit messages using `ReactMarkdown`\n- Introduced `Changelog.module.scss` for link styling in light and dark mode",
    "files": [
      "package.json",
      "src/react/pages/Changelog.module.scss",
      "src/react/pages/Changelog.tsx"
    ]
  },
  {
    "hash": "1a36b9df77ccf34b257e5a13b16a4387e67a0da2",
    "date": "2025-09-02T20:04:43+07:00",
    "message": "fix(vite.config): update watch ignored patterns to exclude specific directories",
    "files": [
      "vite.config.js"
    ]
  },
  {
    "hash": "3dd91339d26fa09baedbae5c2e940c103af3e2ea",
    "date": "2025-09-02T19:59:09+07:00",
    "message": "feat(eslint): extend validation to include additional file types",
    "files": [
      ".vscode/settings.json"
    ]
  },
  {
    "hash": "61f19029c215fae5a54640cacc43db40a7c3bfb9",
    "date": "2025-09-02T19:51:32+07:00",
    "message": "feat(git-history): add unique file filtering and anonymization to commit history",
    "files": [
      "src/dev/git-history-to-json.ts"
    ]
  },
  {
    "hash": "0886fc1fe318f98c617f537b4989c3297543b658",
    "date": "2025-09-02T19:50:18+07:00",
    "message": "feat(git-history): add file anonymization and filtering for banned files",
    "files": [
      "src/dev/git-history-to-json.ts"
    ]
  },
  {
    "hash": "775cf836295d69540c6afde35038577da3a0cb55",
    "date": "2025-09-02T19:43:09+07:00",
    "message": "refactor(vite.config): enhance manual chunking logic for better module organization",
    "files": [
      "vite.config.js"
    ]
  },
  {
    "hash": "cac01206c0c2bd8ecb447672879d07c8cf2cc66f",
    "date": "2025-09-02T19:35:36+07:00",
    "message": "fix(vite.config): set maxParallelFileOps to 2 for improved build performance",
    "files": [
      "vite.config.js"
    ]
  },
  {
    "hash": "4892246a51166c622090706e5530020acf0b52d8",
    "date": "2025-09-02T19:23:53+07:00",
    "message": "refactor(vite.config): comment out watch configuration for clarity",
    "files": [
      "vite.config.js"
    ]
  },
  {
    "hash": "f7198b503cc830a08f87338603a5240968a9d266",
    "date": "2025-09-02T19:17:28+07:00",
    "message": "refactor(vite.config): streamline file watching configuration and enhance manual chunking",
    "files": [
      "vite.config.js"
    ]
  },
  {
    "hash": "3a95a72c53c1f9a27ac7a27f6fee2faadf672c5d",
    "date": "2025-09-02T18:50:46+07:00",
    "message": "fix(github-pages): set timeout 30 mins",
    "files": [
      ".github/workflows/github-pages.yml"
    ]
  },
  {
    "hash": "6804732628c22616cf4cd7eafdb651a0338ae72e",
    "date": "2025-09-02T18:49:18+07:00",
    "message": "feat(vite.config): enhance manual chunking for better module organization",
    "files": [
      "vite.config.js"
    ]
  },
  {
    "hash": "e8a66e011d3e193fafadb4d096363a305748f3f9",
    "date": "2025-09-02T17:30:22+07:00",
    "message": "feat(vite): restrict file watching to specific src extensions\n\nAdded `ignoredFiles` and `includedFiles` patterns to centralize watch configuration.\nConfigured `build.watch` to include only source file extensions while excluding unnecessary paths.\nUpdated `server.watch` to ignore all files except `.tsx`, `.jsx`, `.ts`, `.js`, `.cjs`, and `.mjs` under `src/` for stricter file watching.",
    "files": [
      "vite.config.js"
    ]
  },
  {
    "hash": "b132942ba99ffb259cf9b72a96ef9248c49b26b1",
    "date": "2025-09-02T17:15:24+07:00",
    "message": "Merge pull request #55 from dimaslanjaka/dependabot/npm_and_yarn/chromedriver-139.0.3\n\nbuild(deps): bump chromedriver from 139.0.2 to 139.0.3",
    "files": []
  },
  {
    "hash": "8d85015581c089357f5bb9c2a7302e61a3af4600",
    "date": "2025-09-02T17:15:13+07:00",
    "message": "Merge pull request #56 from dimaslanjaka/dependabot/npm_and_yarn/vite-7.1.4\n\nbuild(deps-dev): bump vite from 7.1.3 to 7.1.4",
    "files": []
  },
  {
    "hash": "724475826e365f389ae3709895149c4fbe724aa5",
    "date": "2025-09-02T10:12:11Z",
    "message": "build(deps-dev): bump vite from 7.1.3 to 7.1.4\n\nBumps [vite](https://github.com/vitejs/vite/tree/HEAD/packages/vite) from 7.1.3 to 7.1.4.\n- [Release notes](https://github.com/vitejs/vite/releases)\n- [Changelog](https://github.com/vitejs/vite/blob/main/packages/vite/CHANGELOG.md)\n- [Commits](https://github.com/vitejs/vite/commits/v7.1.4/packages/vite)\n\n---\nupdated-dependencies:\n- dependency-name: vite\n  dependency-version: 7.1.4\n  dependency-type: direct:development\n  update-type: version-update:semver-patch\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>",
    "files": [
      "package.json"
    ]
  },
  {
    "hash": "0778a746d72bb3179851b78956c00f83e8e9c44b",
    "date": "2025-09-02T17:10:05+07:00",
    "message": "feat(vite.config): enable source maps and optimize chunking for better performance",
    "files": [
      "vite.config.js"
    ]
  },
  {
    "hash": "6aa4cedeef0b5ceb5b7bc3518f6be4f10cd63cd2",
    "date": "2025-09-02T17:01:51+07:00",
    "message": "fix(build): increase memory limit and enable legacy OpenSSL provider for react build",
    "files": [
      "package.json"
    ]
  },
  {
    "hash": "cb7f7297a0d3a6f8ff0210f3b5ef524cf91bdfe5",
    "date": "2025-09-02T16:55:42+07:00",
    "message": "feat(browserlist): add script to update Browserslist database",
    "files": [
      "packages/baileys",
      "packages/gh-pages",
      "scripts/browserlist-updater.js"
    ]
  },
  {
    "hash": "99529a15170e1d1e0d0983417f307a8b0202f53f",
    "date": "2025-09-02T14:46:18+07:00",
    "message": "feat(locales): add user settings translations in English and Indonesian",
    "files": [
      "src/react/locales/en.json",
      "src/react/locales/id.json",
      "src/react/pages/Settings.tsx"
    ]
  },
  {
    "hash": "5a910cdc6bd791c00d8c56743c613e2845d9f092",
    "date": "2025-09-02T14:33:06+07:00",
    "message": "feat(Taskfile): enable corepack",
    "files": [
      "Taskfile.yml"
    ]
  },
  {
    "hash": "8121898af193f2895f92e9bb9aed2f4883d0a16a",
    "date": "2025-09-02T14:31:43+07:00",
    "message": "chore: update Yarn version to 4.9.4",
    "files": [
      ".yarn/releases/yarn-4.9.4.cjs",
      ".yarnrc.yml",
      "package.json"
    ]
  },
  {
    "hash": "6280a08151ce1750f9fd7dfe2153322782008e24",
    "date": "2025-09-02T14:29:33+07:00",
    "message": "fix(Taskfile): improve yarn install error handling",
    "files": [
      "Taskfile.yml"
    ]
  },
  {
    "hash": "7aedf767ce27830c728e76a8648d7dd62bca914a",
    "date": "2025-09-02T14:28:15+07:00",
    "message": "feat(workflows): add Taskfile* to trigger paths in PHP and Python checkers",
    "files": [
      ".github/workflows/checker-php.yml",
      ".github/workflows/checker-python.yml"
    ]
  },
  {
    "hash": "f148439e6e1e56d37ae1ffab21aad46cf7edf7aa",
    "date": "2025-09-02T14:18:41+07:00",
    "message": "feat(Settings): add show/hide password functionality in settings form",
    "files": [
      "src/react/pages/Settings.tsx"
    ]
  },
  {
    "hash": "0480c9dd2c1655dc83d991d8eb1ff74eb2f834ac",
    "date": "2025-09-02T14:16:22+07:00",
    "message": "feat(EditPasswordForm): add show/hide password functionality",
    "files": [
      "src/react/pages/admin/EditPasswordForm.tsx"
    ]
  },
  {
    "hash": "6d7ba2886f7cda00c0b7769db7512cd80b362fb6",
    "date": "2025-09-02T14:12:33+07:00",
    "message": "feat(Login): add show/hide password functionality in login form",
    "files": [
      "src/react/pages/Login.tsx"
    ]
  },
  {
    "hash": "2f280beacc6b0792bbd517a0a3b8a678947e18db",
    "date": "2025-09-02T14:00:46+07:00",
    "message": "refactor(workflows): reorganize dependency installation steps",
    "files": [
      ".github/workflows/checker-php.yml"
    ]
  },
  {
    "hash": "4b02d0e884e5e6741264b17749831b70ea4a8dc6",
    "date": "2025-09-02T13:29:43+07:00",
    "message": "fix(workflows): reorder dependencies installation",
    "files": [
      ".github/workflows/checker-php.yml"
    ]
  },
  {
    "hash": "5fdd7d40f104c634a9ad39c0b053ced94f4c1d95",
    "date": "2025-09-02T12:53:21+07:00",
    "message": "feat(workflows): include 'setup*' paths",
    "files": [
      ".github/workflows/checker-php.yml",
      ".github/workflows/checker-python.yml",
      ".github/workflows/github-pages.yml"
    ]
  },
  {
    "hash": "df80ee53c0abfb2c84108763f566979c744d080b",
    "date": "2025-09-02T12:52:28+07:00",
    "message": "refactor(setup): move dependency imports inside isInstalled block\n\n- Relocate imports for fs-extra, sbg-utility, and upath to only load when dependencies are already installed.\n- Improves efficiency by avoiding unnecessary imports when not needed.",
    "files": [
      "setup.js"
    ]
  },
  {
    "hash": "94783bb1fe60347454167d801750f178b101800d",
    "date": "2025-09-02T12:20:32+07:00",
    "message": "fix(setup): improve dependency installation logic\n\n- Change dependency installation to run `yarn install` when not installed.\n- Reinstall dependencies if `package.json` checksum has changed.\n- Add error handling for failed `yarn install` command.",
    "files": [
      "setup.js"
    ]
  },
  {
    "hash": "510e07a8f251f4c5e3ae12885ec96d0f72fbf4b9",
    "date": "2025-09-02T11:47:33+07:00",
    "message": "Merge branch 'master' of https://github.com/dimaslanjaka/php-proxy-hunter",
    "files": []
  },
  {
    "hash": "8e1a9676e708236c0ae87fd1a6e4e0027cc3aafa",
    "date": "2025-09-02T11:46:52+07:00",
    "message": "Merge pull request #57 from dimaslanjaka/dependabot/github_actions/actions/checkout-5\n\nbuild(deps): bump actions/checkout from 4 to 5",
    "files": []
  },
  {
    "hash": "b97d347634b8a30f3d1fbb5989bd93a269cff005",
    "date": "2025-09-02T11:41:15+07:00",
    "message": "feat(types): improve ads typings and add Google-related type definitions\n\n- remove redundant `globals.d.ts` window declaration\n- extend `window-shim.d.ts` with `adsbygoogle` support\n- reference `window-shim.d.ts` in `general-site-script.js`\n- add type packages: google-ads-scripts, google-publisher-tag, google.maps, google IMA",
    "files": [
      "js/general-site-script.js",
      "js/globals.d.ts",
      "package.json",
      "types/window-shim.d.ts"
    ]
  },
  {
    "hash": "cf370d56733d0a8cf8a9787fe9e483a547727f77",
    "date": "2025-09-02T11:29:02+07:00",
    "message": "docs(js/highlight): refine JSDoc types for callbacks and add param annotation\n\n- Updated callback type in `loadScript` to `(...args: any[]) => any`\n- Made `callback` optional in `loadStyles` with proper type annotation\n- Added JSDoc param annotation for `index` in `loadNext`",
    "files": [
      "js/highlight.js"
    ]
  },
  {
    "hash": "9e812916962f1c2ecc618c9684b11dabdbe83b87",
    "date": "2025-09-02T04:13:50Z",
    "message": "build(deps): bump actions/checkout from 4 to 5\n\nBumps [actions/checkout](https://github.com/actions/checkout) from 4 to 5.\n- [Release notes](https://github.com/actions/checkout/releases)\n- [Changelog](https://github.com/actions/checkout/blob/main/CHANGELOG.md)\n- [Commits](https://github.com/actions/checkout/compare/v4...v5)\n\n---\nupdated-dependencies:\n- dependency-name: actions/checkout\n  dependency-version: '5'\n  dependency-type: direct:production\n  update-type: version-update:semver-major\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>",
    "files": [
      ".github/workflows/checker-php.yml",
      ".github/workflows/checker-python.yml",
      ".github/workflows/clean-caches.yml",
      ".github/workflows/github-pages.yml"
    ]
  },
  {
    "hash": "b624bacee9e62336f40763f9ae7eab4c4ecd0691",
    "date": "2025-09-02T10:47:40+07:00",
    "message": "feat(vite): add customStaticAssetsPlugin for proxyManager files and robots.txt\n\n- Introduced `customStaticAssetsPlugin` to serve `/assets` and `proxyManager.*` files in dev\n- Moved `robots.txt` copy logic into `customStaticAssetsPlugin`\n- Updated `vite.config.js` to register `customStaticAssetsPlugin`\n- Improved JSDoc for `fontsResolverPlugin`",
    "files": [
      "vite-plugin.js",
      "vite.config.js"
    ]
  },
  {
    "hash": "5f9f6a8943e3ea4b618d512b4cbcc8e732000fed",
    "date": "2025-09-02T10:43:34+07:00",
    "message": "docs(js/highlight): add JSDoc annotations and improve hljs type safety\n\n- Added JSDoc comments for functions (`startHighlighter`, `loadScript`, `loadScriptsSequentially`, `loadStyles`, `loadHljs`, `initHljs`)\n- Documented parameters and return types\n- Added `@ts-expect-error` for `hljs.highlightElement` to handle version differences",
    "files": [
      "js/highlight.js"
    ]
  },
  {
    "hash": "fa84cd2edc58652036523b6a974cbb2a6d9708c8",
    "date": "2025-09-02T10:35:37+07:00",
    "message": "fix(package.json): update sbg-utility URL to the latest version",
    "files": [
      "package.json"
    ]
  },
  {
    "hash": "b38788079e1111d0aa0322486c2c502aab081b28",
    "date": "2025-09-02T02:55:27Z",
    "message": "build(deps): bump chromedriver from 139.0.2 to 139.0.3\n\nBumps [chromedriver](https://github.com/giggio/node-chromedriver) from 139.0.2 to 139.0.3.\n- [Commits](https://github.com/giggio/node-chromedriver/compare/139.0.2...139.0.3)\n\n---\nupdated-dependencies:\n- dependency-name: chromedriver\n  dependency-version: 139.0.3\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>",
    "files": [
      "package.json"
    ]
  },
  {
    "hash": "8bb842672728b06a3d6a7faf5a30e7eff07dba07",
    "date": "2025-08-28T13:27:36+07:00",
    "message": "fix(adminer-installer): update composer commands to use php with composer.phar path",
    "files": [
      "scripts/adminer-installer.js"
    ]
  },
  {
    "hash": "8af90ce411c56cfd56c6aa0bce76c79a60b3a7a8",
    "date": "2025-08-28T13:25:05+07:00",
    "message": "fix(scripts): update composer.phar path to use the bin directory",
    "files": [
      "fix-nginx-perm.sh",
      "setup.sh"
    ]
  },
  {
    "hash": "2d1eb36236a0b61950160b3b833030f1ca689d09",
    "date": "2025-08-28T13:23:16+07:00",
    "message": "fix(scripts): add shell: true to all spawnAsync calls for Windows compatibility\n\n- Ensure all spawnAsync commands run in a shell environment by adding shell: true.\n- Fixes issues with command execution on Windows platforms.",
    "files": [
      "scripts/adminer-installer.js"
    ]
  },
  {
    "hash": "8b91011f33b5b27ff9e9a8a0cbfe4822adb12eca",
    "date": "2025-08-28T13:18:30+07:00",
    "message": "fix(adminer-installer): improve composer dependency management by adding conditional install/update logic",
    "files": [
      "packages/proxies-grabber",
      "scripts/adminer-installer.js"
    ]
  },
  {
    "hash": "fefdf9e5628a56c4d5985bca83a9db590f52f907",
    "date": "2025-08-28T13:17:02+07:00",
    "message": "refactor(scripts): switch adminer-installer.js to git-based workflow and enhance security\n\n- Replace manual file downloads with git clone of the adminer repository.\n- Add submodule and composer dependency updates for adminer.\n- Automatically patch both adminer/index.php and editor/index.php to require the project's func.php using a relative path.\n- Inject admin-only access control logic into both files.\n- Remove legacy download and file modification logic in favor of a unified async workflow.",
    "files": [
      "scripts/adminer-installer.js"
    ]
  },
  {
    "hash": "432a325bbab598b47b4271b30debc3773d7cc276",
    "date": "2025-08-28T13:00:59+07:00",
    "message": "chore(postinstall): clean up postinstall script structure",
    "files": [
      "scripts/postinstall.js"
    ]
  },
  {
    "hash": "2e4f35eff9c9e1c261c86fb8235fdb32e59f580a",
    "date": "2025-08-28T13:00:18+07:00",
    "message": "feat(postinstall): add postinstall script to run composer-installer",
    "files": [
      "package.json",
      "scripts/postinstall.js"
    ]
  },
  {
    "hash": "4da464e9f0a27fd71b090de1bb4f3cac12633a5a",
    "date": "2025-08-28T12:56:07+07:00",
    "message": "refactor(composer): move composer.phar to bin directory and update references\n\n- Moved `composer.phar` from project root to `bin/composer.phar` for better organization.\n- Updated all scripts, workflow files, and documentation to reference `php bin/composer.phar` instead of `php composer.phar`.\n- Added `/bin/composer*` to `.gitignore` to exclude composer binaries from version control.\n- Removed the old `composer.phar` from the project root.\n- Added a new script `scripts/composer-installer.js` to automate downloading and setting up Composer in the `bin` directory.",
    "files": [
      ".devcontainer/devcontainer.json",
      ".github/workflows/checker-php.yml",
      ".github/workflows/checker-php.yml.txt",
      ".github/workflows/checker.yml.txt",
      ".gitignore",
      "Taskfile.yml",
      "bin/clear-caches",
      "bin/fix-php",
      "bin/fix-php.cmd",
      "bin/kills",
      "bin/kills.cmd",
      "composer.phar",
      "github-actions-init.php",
      "scripts/composer-installer.js",
      "src/vps/menus/project-manager.py"
    ]
  },
  {
    "hash": "ee0e81045538783afe38ec54f7db4bfad0dc52f4",
    "date": "2025-08-28T12:42:10+07:00",
    "message": "fix(adminer-installer): update modify function to replace 'namespace Adminer;' with custom script",
    "files": [
      "scripts/adminer-installer.js"
    ]
  },
  {
    "hash": "4de8190c2f6b878dee1f6695753b14e93f7aee6c",
    "date": "2025-08-28T12:37:36+07:00",
    "message": "feat(adminer-installer): add script to download and modify Adminer files",
    "files": [
      ".gitignore",
      "scripts/adminer-installer.js"
    ]
  },
  {
    "hash": "b836876b60b36c57685637df36034d90d81e6178",
    "date": "2025-08-28T11:13:32+07:00",
    "message": "refactor(phpliteadmin): rename phpliteadmin.php to index.php",
    "files": [
      "phpliteadmin/index.php"
    ]
  },
  {
    "hash": "3feb7163ac836135fe4e1e2abfc7bdbd628d52b2",
    "date": "2025-08-28T11:00:29+07:00",
    "message": "feat(installer): add unzipper-based extraction with progress for phpmyadmin and sqlite\n\n- Replace system-based zip extraction (unzip/Expand-Archive) with unzipper in both phpmyadmin-installer.js and sqlite-installer.js\n- Show extraction progress percentage and file count during zip extraction\n- Add @vitalets/google-translate-api and unzipper to dependencies\n- Add @types/unzipper to devDependencies\n- Improve downloadFile and extractZip with JSDoc comments and error handling\n- Update phpMyAdmin config: increase LoginCookieValidity and add LoginCookieStore to 1 week, output config.inc.php directly in phpmyadmin/\n- Always extract and create config for phpMyAdmin, even if zip is up to date",
    "files": [
      "package.json",
      "scripts/phpmyadmin-installer.js",
      "scripts/sqlite-installer.js"
    ]
  },
  {
    "hash": "64c9813a793e4bf1ff9c7c0bb7e7bb4957cac1fa",
    "date": "2025-08-28T10:30:38+07:00",
    "message": "fix(settings): update PATH variable to include local NVM and Git binaries",
    "files": [
      ".vscode/settings.json"
    ]
  },
  {
    "hash": "109bb43f228dc673858c4a7c4f0ffb6e6583f49f",
    "date": "2025-08-26T23:33:07+07:00",
    "message": "feat(install_package): enhance installation logging with detailed package names and arguments",
    "files": [
      "requirements_install.py"
    ]
  },
  {
    "hash": "c5c27725ccc5888d85b8f5eebe3aab6e261ec26d",
    "date": "2025-08-26T20:55:57+07:00",
    "message": "refactor(requirements_install): inline is_docker function and remove external import\n\n- Removed import of is_docker from src.utils.device.\n- Added a local is_docker() implementation to detect Docker environment directly within the script.",
    "files": [
      "requirements_install.py"
    ]
  },
  {
    "hash": "862ce4b8f6c49c2d0de52b684bcdaca8b7837fc6",
    "date": "2025-08-26T20:54:44+07:00",
    "message": "refactor(requirements_install): replace requests with urllib for mirror checking\n\n- Removed the external 'requests' dependency.\n- Replaced HTTP HEAD requests for PyPI mirror checking with Python's built-in 'urllib.request'.\n- Maintains functionality without requiring additional packages.",
    "files": [
      "requirements_install.py"
    ]
  },
  {
    "hash": "f88ad0ea3a003bbf4dbe7668e01a94d68d5c4560",
    "date": "2025-08-26T20:51:26+07:00",
    "message": "feat(Taskfile): add echo statement for Python package installation",
    "files": [
      "Taskfile.yml"
    ]
  },
  {
    "hash": "e426ab91befd6863d68727d4a5431af364cbf090",
    "date": "2025-08-26T19:58:14+07:00",
    "message": "feat(set-timezone): add script to set system timezone with argument support",
    "files": [
      "bin/set-timezone"
    ]
  },
  {
    "hash": "0818b41c83e9fc229acfcb09dcdeb997073f98dd",
    "date": "2025-08-26T19:53:51+07:00",
    "message": "fix(clear-caches): remove 'env' from virtualenv cleanup",
    "files": [
      "bin/clear-caches"
    ]
  },
  {
    "hash": "ece8cb9063e8cfec2773bf42e475c4d520b25a24",
    "date": "2025-08-26T19:53:06+07:00",
    "message": "feat(requirements): improve Python executable detection for pip installs\n\n- Add get_python_executable() to prioritize .venv/venv Python executables before falling back to sys.executable.\n- Update install_package and install_requirements to use get_python_executable() for more reliable environment handling.",
    "files": [
      "requirements_install.py"
    ]
  },
  {
    "hash": "b5be32d4ccc9ed568dbb745f63907687c29f0239",
    "date": "2025-08-26T19:02:18+07:00",
    "message": "feat(scripts): enhance clear-caches script with extended cleanup tasks\n\n- Add detailed sections for cache, logs, tmp files, and trash cleanup\n- Improve log cleanup with journalctl rotation and removal of *.gz, *.old, *.log.* files\n- Add support for clearing tmp/logs, tmp/django_caches, and user trash\n- Include cleanup for apt, snap, pip, Python __pycache__, and virtualenvs\n- Add Composer cache clearing (global and local)\n- Add npm, yarn, nvm, and pnpm cache cleanup\n- Show disk and RAM usage after cleanup",
    "files": [
      "bin/clear-caches"
    ]
  },
  {
    "hash": "0da28125433234d5fb654a25a6e1cb2062c64da4",
    "date": "2025-08-26T18:30:33+07:00",
    "message": "docs(readme-nodejs): add system-wide nvm setup and node symlink instructions\n\nExpanded installation guide with:\n- alternative method to load nvm via `/etc/profile.d/nvm.sh`\n- additional option to source nvm using `source`\n- steps to compile & symlink Node, npm, npx, and corepack system-wide",
    "files": [
      "readme-nodejs.md"
    ]
  },
  {
    "hash": "861089b237cbb87421551ac7ba9e7b8615acb839",
    "date": "2025-08-26T18:03:20+07:00",
    "message": "chore(deps): bump dependencies in package.json\n\n- upgrade chromedriver to 139.0.2\n- upgrade i18next to ^25.4.2\n- upgrade proxies-grabber to ^1.1.4\n- upgrade puppeteer to 24.17\n- upgrade react-i18next to ^15.7.2\n- upgrade undici to ^7.15.0\n- upgrade @eslint/js to ^9.34.0\n- upgrade @types/jquery to ^3.5.33\n- upgrade @typescript-eslint/* to ^8.41.0\n- upgrade @vitejs/plugin-react to ^5.0.1\n- upgrade eslint to ^9.34.0\n- upgrade react-router-dom to ^7.8.2\n- upgrade rollup to ^4.48.1\n- upgrade sass to ^1.91.0\n- upgrade vite to 7.1.3\n- add proxies-grabber tarball dependency",
    "files": [
      "package.json"
    ]
  },
  {
    "hash": "81463eec579d6fac8c73118b1f55fb46e139a27d",
    "date": "2025-08-26T17:56:42+07:00",
    "message": "fix(package): update sbg-utility and resolutions for binary-collections and git-command-helper",
    "files": [
      "package.json"
    ]
  },
  {
    "hash": "0a3994cf58b44056eb53795fabe21c68898b8746",
    "date": "2025-08-25T13:13:31+07:00",
    "message": "feat(phpmyadmin-installer): add script to auto-download and extract phpMyAdmin with Node.js",
    "files": [
      ".gitignore",
      "scripts/phpmyadmin-installer.js"
    ]
  },
  {
    "hash": "40b97d06f23598cec21b365596f3e5fe41642759",
    "date": "2025-08-25T13:11:12+07:00",
    "message": "feat(sqlite-installer): add script to auto-download and extract SQLite binaries",
    "files": [
      ".gitignore",
      "scripts/sqlite-installer.js"
    ]
  },
  {
    "hash": "b3618b24a0c82230d1cbc527593459a8bf400a93",
    "date": "2025-08-25T00:41:48+07:00",
    "message": "feat(github-pages): include public directory in cache paths for GitHub Actions",
    "files": [
      ".github/workflows/github-pages.yml"
    ]
  },
  {
    "hash": "7df95e6877d57e20beaca06f33698a360ea079f2",
    "date": "2025-08-25T00:17:54+07:00",
    "message": "feat(gitignore): add .gitignore file to exclude unnecessary files and directories",
    "files": [
      "public/.gitignore"
    ]
  },
  {
    "hash": "b9c71da533ed66d9bd8c91f4670d7c6b7d46da01",
    "date": "2025-08-25T00:15:47+07:00",
    "message": "feat(submodules): add proxies-grabber submodule for enhanced proxy management",
    "files": [
      ".gitmodules",
      "packages/proxies-grabber"
    ]
  },
  {
    "hash": "26d1d521c588bd9a511b061f8ee14204b55d4e21",
    "date": "2025-08-19T13:30:00+07:00",
    "message": "refactor(workflows): replace github-actions-init.cjs with setup.js\n\n- Updated GitHub Actions workflows to run `node setup.js` instead of `node github-actions-init.cjs`\n- Removed legacy `github-actions-init.cjs` script\n- Extended `setup.js` to handle dependency installation and checksum verification\n- Preserved Tailwind build, index.html copy, and browserslist-db update tasks",
    "files": [
      ".github/workflows/clean-caches.yml",
      ".github/workflows/github-pages.yml",
      "github-actions-init.cjs",
      "setup.js"
    ]
  },
  {
    "hash": "639812be4538f52f31632e3d16aecf43b089d664",
    "date": "2025-08-19T07:42:52+07:00",
    "message": "feat(ci): improve GitHub Actions dependency setup and add checksum-based install\n\n- Replace direct `yarn install` step in GitHub Actions with a custom setup using `github-actions-init.cjs`\n- Refactor `github-actions-init.cjs` to use `spawnSync` instead of `execSync` for better process control\n- Expand required packages to include `upath` and `fs-extra`\n- Add checksum comparison for `package.json` to trigger `yarn install` only when dependencies change\n- Store and update checksum in `tmp/checksum.txt` to avoid unnecessary installs\n- Improve logging and error handling for dependency installation",
    "files": [
      ".github/workflows/github-pages.yml",
      "github-actions-init.cjs"
    ]
  },
  {
    "hash": "060b1b9661067f1ea7428825940290d109866908",
    "date": "2025-08-19T06:56:00+07:00",
    "message": "fix(vite.config): conditionally add legacy plugin for non-GitHub CI environments",
    "files": [
      "vite.config.js"
    ]
  },
  {
    "hash": "76a87d2e0ad3cda7215d84c1df4bfa2003dccdf5",
    "date": "2025-08-19T06:53:43+07:00",
    "message": "fix(dependencies): update various package versions for improved stability and performance",
    "files": [
      "package.json"
    ]
  },
  {
    "hash": "7e6085edeaf51a984404633d162dc38a000d1b2d",
    "date": "2025-08-19T06:51:20+07:00",
    "message": "fix(github-pages): add verification for build output and handle missing assets directory",
    "files": [
      "vite-gh-pages.js"
    ]
  },
  {
    "hash": "7037d9508be205f2d8fab5743bd621d8d26c7ef8",
    "date": "2025-08-19T02:40:01+07:00",
    "message": "fix(github-pages): include yarn.lock in cache paths for improved dependency management",
    "files": [
      ".github/workflows/github-pages.yml"
    ]
  },
  {
    "hash": "cec9b12f4d14b699ae97e6d9119d1e2171b1bd4c",
    "date": "2025-08-18T20:34:31+07:00",
    "message": "fix(github-pages): add step to clean dist and tmp directories before installation",
    "files": [
      ".github/workflows/github-pages.yml"
    ]
  },
  {
    "hash": "e2e5b7228cae7ffa296f8dae9cdc62334fb58cff",
    "date": "2025-08-18T20:33:16+07:00",
    "message": "fix(url): handle missing backend hostname in GitHub Pages by falling back to current hostname",
    "files": [
      "src/react/utils/url.ts"
    ]
  },
  {
    "hash": "c11c4581a6a722b78c31adb552523d0f17f9ce6e",
    "date": "2025-08-18T20:30:55+07:00",
    "message": "fix(github-pages): update cache path for node_modules to ensure proper caching",
    "files": [
      ".github/workflows/github-pages.yml"
    ]
  },
  {
    "hash": "3b215b1f8cc119e20d476a1355a321fde6430257",
    "date": "2025-08-18T20:29:24+07:00",
    "message": "feat(github-pages): add environment variables for VITE backend hostnames in build steps",
    "files": [
      ".github/workflows/github-pages.yml"
    ]
  },
  {
    "hash": "238d0f58afc528d4de22f4baeae8a8a21cc62e17",
    "date": "2025-08-18T20:27:37+07:00",
    "message": "feat(github-pages): enhance VITE secrets check with conditional logging",
    "files": [
      ".github/workflows/github-pages.yml"
    ]
  },
  {
    "hash": "bf627415ad608117b71c195c7c4686433e5775e0",
    "date": "2025-08-18T20:09:56+07:00",
    "message": "feat(github-pages): add debug info for backend hostname environment variables",
    "files": [
      ".github/workflows/github-pages.yml"
    ]
  },
  {
    "hash": "1b01329f1cb7af28b7f679469e555590cc016761",
    "date": "2025-08-18T18:50:02+07:00",
    "message": "ci(github-pages): add environment variables for build and deploy\n\n- set VITE_BACKEND_HOSTNAME_DEV and VITE_BACKEND_HOSTNAME_PROD from secrets\n- configure GITHUB_TOKEN to use ACCESS_TOKEN fallback",
    "files": [
      ".github/workflows/github-pages.yml"
    ]
  },
  {
    "hash": "d11c446810ac5685386535018cfcd1f68ecb6e38",
    "date": "2025-08-18T18:46:13+07:00",
    "message": "feat(changelog): improve commit list and pagination UI\n\n- added comment markers for commit list and pagination sections\n- improved file list styling with overflow handling and word breaking\n- updated pagination:\n  - replaced previous/next buttons with first/last page buttons\n  - simplified page number display to show current ±1 only\n  - removed ellipsis display for skipped pages",
    "files": [
      "src/react/pages/Changelog.tsx"
    ]
  },
  {
    "hash": "cea6fc220500731da867240d123b9d0436232a14",
    "date": "2025-08-18T17:20:44+07:00",
    "message": "feat(Navbar): make navbar fixed at the top",
    "files": [
      "src/react/components/Navbar.tsx"
    ]
  },
  {
    "hash": "9fa768d0793fb8cbf918cc3c0077a4051c3df5b4",
    "date": "2025-08-18T17:15:37+07:00",
    "message": "refactor(admin): move password hint from Admin page to EditPasswordForm\n\nThe password hint paragraph was relocated from the Admin page to the EditPasswordForm component to improve component encapsulation and maintainability.",
    "files": [
      "src/react/pages/Admin.tsx",
      "src/react/pages/admin/EditPasswordForm.tsx"
    ]
  },
  {
    "hash": "b86e6e6730a783f79b0572c77d7eb8dfd5dd99c1",
    "date": "2025-08-18T17:10:50+07:00",
    "message": "style(fonts): refine font usage for placeholders, small text, and buttons\n\n- exclude elements with Font Awesome classes from system font overrides\n- set default button font-family to use Cera Pro, Ubuntu, and fallbacks",
    "files": [
      "src/react/fonts.scss"
    ]
  },
  {
    "hash": "8903386501e822e58a7f37ee8f61da3ae6095f78",
    "date": "2025-08-18T17:07:04+07:00",
    "message": "feat(fonts): add system font stack for input placeholders and small text",
    "files": [
      "src/react/fonts.scss"
    ]
  },
  {
    "hash": "78ed455a0b218575aa3bf507790f19c1bacfcbee",
    "date": "2025-08-18T17:02:17+07:00",
    "message": "feat(fonts): add JetBrains Mono, Helvetica Neue, and Ubuntu font support\n\n- added multiple JetBrains Mono font weights/styles to assets\n- added Helvetica Neue LT Pro, Condensed Bold, Light, and Regular variants\n- extended Ubuntu fonts with UbuntuMono in stylesheet.css\n- created src/react/fonts.scss with Ubuntu, Cera Pro, JetBrains Mono, and global font usage\n- updated react entrypoint to import fonts.scss\n- removed redundant font-face definitions from tailwind.input.css\n- introduced fontsResolverPlugin in vite-plugin.js to serve fonts with correct MIME types\n- updated vite.config.js to register fontsResolverPlugin",
    "files": [
      "assets/fonts/index.scss",
      "assets/fonts/ubuntu/stylesheet.css",
      "src/react/fonts.scss",
      "src/react/index.tsx",
      "tailwind.input.css",
      "vite-plugin.js",
      "vite.config.js"
    ]
  },
  {
    "hash": "c4acc9865f4da5ce3abc5e91ebb3fd09ad4423bd",
    "date": "2025-08-18T15:29:26+07:00",
    "message": "feat(i18n): replace i18next-browser-languagedetector with custom language detection\n\n- Removed `i18next-browser-languagedetector` dependency\n- Added custom language detection using browser locale and multiple geolocation APIs (ipapi, ipinfo, ipwho.is, ip-api)\n- Implemented caching of geolocation results in localStorage for 1 hour\n- Moved `getSelectedLanguage` and `setSelectedLanguage` helpers to `i18n.ts`\n- Updated `LanguageSwitcher` to use new detection logic and helpers",
    "files": [
      "package.json",
      "src/react/components/LanguageSwitcher.tsx",
      "src/react/i18n.ts"
    ]
  },
  {
    "hash": "0b65514ec1190d30cec7f3d198edda7db337cd0f",
    "date": "2025-08-18T15:08:53+07:00",
    "message": "refactor(i18n): persist selected language in localStorage and reuse across app\n\n- Added `getSelectedLanguage` and `setSelectedLanguage` helpers in `LanguageSwitcher`\n- Replaced direct `localStorage` access with helper functions for better reuse\n- Updated `i18n.ts` to initialize with saved language from localStorage instead of defaulting to English",
    "files": [
      "src/react/components/LanguageSwitcher.tsx",
      "src/react/i18n.ts"
    ]
  },
  {
    "hash": "4b50eacc6d34321643aa43a60ee635080097ea3b",
    "date": "2025-08-18T14:02:28+07:00",
    "message": "refactor(utils): import isViteDevServer from utils and simplify test mocks\n\n- Imported `isViteDevServer` from `utils` in `i18n.ts`\n- Removed global declarations for `viteBaseUrl` and `isViteDevServer` in tests\n- Updated `url.vitest.ts` to reference and mock values directly from `utilsIndex`\n- Simplified test setup for `createUrl` by avoiding `globalThis` usage",
    "files": [
      "src/react/i18n.ts",
      "tests/react/utils/url.vitest.ts"
    ]
  },
  {
    "hash": "9bf1a950f963a828ef59c107d6d790aff9c1a09f",
    "date": "2025-08-18T13:59:01+07:00",
    "message": "feat(i18n): add browser language detection for automatic locale selection\n\n- Installed `i18next-browser-languagedetector` dependency\n- Configured `i18n.ts` to use `LanguageDetector` before `initReactI18next`\n- Enabled automatic detection of user language with fallback to English\n- Added `debug` mode support for development environment",
    "files": [
      "package.json",
      "src/react/i18n.ts"
    ]
  },
  {
    "hash": "7ac31afbb35496c2a90e7d867bafb6ca90101c42",
    "date": "2025-08-18T13:56:18+07:00",
    "message": "feat(i18n): add multilingual support with English and Indonesian translations\n\n- Added `i18next` and `react-i18next` dependencies\n- Created `i18n.ts` configuration with default and fallback language\n- Added locale files: `en.json` and `id.json`\n- Implemented `LanguageSwitcher` component with persistence via localStorage\n- Updated `Footer` to include language selector\n- Integrated translations in `Admin`, `AddSaldoForm`, `EditPasswordForm`, and `EditSaldoForm`\n- Replaced hardcoded text with `t()` and `<Trans />` for localization",
    "files": [
      "package.json",
      "src/react/components/Footer.tsx",
      "src/react/components/LanguageSwitcher.tsx",
      "src/react/i18n.ts",
      "src/react/index.tsx",
      "src/react/locales/en.json",
      "src/react/locales/id.json",
      "src/react/pages/Admin.tsx",
      "src/react/pages/admin/AddSaldoForm.tsx",
      "src/react/pages/admin/EditPasswordForm.tsx",
      "src/react/pages/admin/EditSaldoForm.tsx"
    ]
  },
  {
    "hash": "71b348b3dbc6dab133b222cf9503dd6bdaf0697a",
    "date": "2025-08-18T13:11:53+07:00",
    "message": "refactor(admin): modularize saldo management components\n\n- Extracted `AddSaldoForm` and `EditSaldoForm` into separate components\n- Updated `Admin.tsx` to use modular forms for better maintainability\n- Switched user selection to use `email` as unique identifier\n- Improved form UX with `autoComplete=\"off\"` and clearer helper texts\n- Added support for editing user passwords alongside saldo management",
    "files": [
      "src/react/pages/Admin.tsx",
      "src/react/pages/admin/AddSaldoForm.tsx",
      "src/react/pages/admin/EditSaldoForm.tsx"
    ]
  },
  {
    "hash": "9f1a797ee7370f10cddfea6b78072a98ad04a0d4",
    "date": "2025-08-18T13:09:51+07:00",
    "message": "feat(admin): allow admins to update user profiles and passwords\n\n- Updated `user-info.php` to support admin updates by email or username\n- Ensured normal users can only update their own account\n- Added JSON response with success/error messages\n- Changed `Settings.tsx` to check `data.success` instead of `data.authenticated`\n- Added new `EditPasswordForm` component for admin to set user passwords",
    "files": [
      "php_backend/user-info.php",
      "src/react/pages/Settings.tsx",
      "src/react/pages/admin/EditPasswordForm.tsx"
    ]
  },
  {
    "hash": "845fbfb6815a8678db6a776e2d38103257e9f02f",
    "date": "2025-08-18T11:44:51+07:00",
    "message": "feat(vite): add support for additional file extensions in alias configuration",
    "files": [
      "vite.config.js"
    ]
  },
  {
    "hash": "c9d24484e21835664e67fa4e0b396a79761c3d69",
    "date": "2025-08-18T11:42:20+07:00",
    "message": "build(vite): add lightningcss with browserslist for CSS transforms and minification\n\n- Added `browserslist` and `lightningcss` dependencies\n- Configured Vite to use `lightningcss` for CSS transformation and minification\n- Integrated `browserslistToTargets` for target environments\n- Enabled terser for JS minification with comment removal",
    "files": [
      "package.json",
      "vite.config.js"
    ]
  },
  {
    "hash": "13d1ff4804d6a32c538eba06ae0869fe3352bfe1",
    "date": "2025-08-18T08:38:41+07:00",
    "message": "refactor(hashing): extract file hashing logic into separate module\n\n- move hashing and tree generation into new `bin/file-hasher.cjs`\n- add reusable `createFileHashes` and `getFileTreeString` functions\n- simplify `create-file-hashes.cjs` to use shared module\n- add dotenv for loading `.env` file\n- export `createFileHashesMain` for reuse by other scripts\n- update `git-pull.cjs` to use `createFileHashesMain` when resolving `.husky/hash.txt` conflicts\n- wrap main logic in async functions with proper error handling",
    "files": [
      "bin/create-file-hashes.cjs",
      "bin/file-hasher.cjs",
      "bin/git-pull.cjs"
    ]
  },
  {
    "hash": "4e39275107a556236372f49f62bbd123148e5157",
    "date": "2025-08-18T08:26:42+07:00",
    "message": "feat(git-pull): improve conflict detection and CLI handling\n\n- add `minimist` for parsing CLI args (--remote, --branch, or positional)\n- replace dry-run merge with real merge + conflict detection via `git status`\n- introduce `getConflictFiles` helper to detect and return conflicted files\n- handle `.husky/hash.txt` conflicts automatically by truncating and staging\n- abort merge safely when other conflicts are detected\n- restrict *.sh chmod and execution to Linux platforms\n- simplify fix-perm error handling\n- remove obsolete shebang and redundant .husky/hash.txt checks",
    "files": [
      "bin/git-pull.cjs"
    ]
  },
  {
    "hash": "5d00eaec2b67a30453c2fc9d61e10a5d0d116ec1",
    "date": "2025-08-18T07:21:18+07:00",
    "message": "feat(saldo): add ability to set saldo to exact value\n\n- Extended `update_saldo` method with `$replace` flag to support replacing saldo instead of incrementing\n- Updated `refill-saldo.php` to handle `set` parameter for saldo replacement\n- Implemented `setSaldoToUser` API function in frontend utils\n- Integrated saldo set functionality into Admin page\n- Added placeholder to AddSaldoForm input\n- Updated and expanded tests to cover saldo replacement scenario",
    "files": [
      "php_backend/refill-saldo.php",
      "src/PhpProxyHunter/UserDB.php",
      "src/react/pages/Admin.tsx",
      "src/react/utils/user.ts",
      "tests/PhpProxyHunter/UserDBSaldoArithmeticTest.php",
      "tests/PhpProxyHunter/UserDBTest.php"
    ]
  },
  {
    "hash": "aa9b912f2c87440546c4f5ac70ea0d4b79443645",
    "date": "2025-08-18T06:59:14+07:00",
    "message": "feat(admin): refactor saldo management UI with modular forms\n\n- Replace single saldo form with two modular components:\n  - AddSaldoForm for incrementing saldo\n  - EditSaldoForm for setting saldo directly\n- Remove inline saldo calculation helper\n- Remove global form submit button; each form now handles its own submission\n- Update layout with two-column grid for better user experience\n- Add placeholder `setSaldoToUser` function for future implementation",
    "files": [
      "src/react/pages/Admin.tsx"
    ]
  },
  {
    "hash": "15b7494307cd5e91739f2ae93164f10fe8a91bae",
    "date": "2025-08-18T05:59:59+07:00",
    "message": "fix(git-pull): add log message for no conflict detection during dry-run",
    "files": [
      "bin/git-pull.cjs"
    ]
  },
  {
    "hash": "327f6af7cc9397e1345c7be4cebf34bf5a7fffe8",
    "date": "2025-08-18T05:57:20+07:00",
    "message": "feat(setup): update setup.js to run browserslist-db update\n\n- Import spawnSync from 'child_process'\n- Add command to run 'npx --yes update-browserslist-db@latest' after build steps",
    "files": [
      "setup.js"
    ]
  },
  {
    "hash": "3e6b7a8a40fbb84e5bc281f90de4fde9cab45e36",
    "date": "2025-08-18T05:55:55+07:00",
    "message": "refactor(cron): delegate MySQL and SQLite backup to bin/backup-db script and add cleanup\n\n- Move MySQL backup logic from .crontab.sh to bin/backup-db for better modularity and maintainability.\n- Enhance bin/backup-db to load .env, support both SQLite and MySQL backups, and use absolute paths.\n- Add automatic removal of old backup files older than 7 days in .crontab.sh to manage disk usage.\n- Improve backup script output and error handling for missing credentials.",
    "files": [
      ".crontab.sh",
      "bin/backup-db"
    ]
  },
  {
    "hash": "afff74079b800a0ced09edcb4ed66f9c51829670",
    "date": "2025-08-18T05:52:49+07:00",
    "message": "refactor(backup): remove obsolete backup script",
    "files": [
      "backup.php"
    ]
  },
  {
    "hash": "246c584541bd6d0640f159a472b982204f74f29e",
    "date": "2025-08-18T05:45:05+07:00",
    "message": "fix(crontab): improve indentation and add MySQL backup functionality",
    "files": [
      ".crontab.sh"
    ]
  },
  {
    "hash": "5ae4e5c9c4775ee35600354c774511db3f68223f",
    "date": "2025-08-18T05:44:05+07:00",
    "message": "fix(extensions): remove shell-format extension and add bash-beautify",
    "files": [
      ".vscode/extensions.json"
    ]
  },
  {
    "hash": "861f5ea9711854a151b7005bea3442276e01e0f8",
    "date": "2025-08-18T05:31:16+07:00",
    "message": "feat(vite): add legacy plugin for broader browser compatibility\n\n- Added `@vitejs/plugin-legacy` and `terser` to devDependencies in package.json.\n- Updated `vite.config.js` to include the legacy plugin with targets for modern browsers (excluding IE 11).\n- This ensures the build outputs are compatible with a wider range of browsers.",
    "files": [
      "package.json",
      "vite.config.js"
    ]
  },
  {
    "hash": "c88379e2c34bd181c15522ee965b0af4bfcad580",
    "date": "2025-08-18T05:21:06+07:00",
    "message": "Merge branch 'master' of https://github.com/dimaslanjaka/php-proxy-hunter",
    "files": []
  },
  {
    "hash": "c528d3be15c5349eb74131dd79eb285be10748c8",
    "date": "2025-08-18T05:20:12+07:00",
    "message": "feat(navbar): remove Twitter link from the navbar",
    "files": [
      "src/react/components/Navbar.tsx"
    ]
  },
  {
    "hash": "7fe81f76a197dd96d8fc4aad28cac3463a5bf2ac",
    "date": "2025-08-18T04:45:09+07:00",
    "message": "fix(git-pull): detect merge conflicts in both stdout and stderr\n\nPreviously, the script only checked stderr for merge conflict messages, which could cause false positives or missed conflicts depending on the Git version and environment. Now, it checks both stdout and stderr to reliably detect merge conflicts during dry-run merges.",
    "files": [
      "bin/git-pull.cjs"
    ]
  },
  {
    "hash": "6177494d58130cfc7e5574dbbb72e0dcf6bf398d",
    "date": "2025-08-18T04:33:28+07:00",
    "message": "feat(admin): add admin check and redirect using react-router-dom\n\n- Imported useNavigate and getUserInfo in Admin page.\n- Added effect to check if the current user is admin; if not, redirect to home using navigate('/').\n- Improved error handling for user info fetch failure.",
    "files": [
      "src/react/pages/Admin.tsx"
    ]
  },
  {
    "hash": "46c19c71c150a40be70e7aecc060b4429b4768ae",
    "date": "2025-08-18T04:32:18+07:00",
    "message": "refactor(user): rename fetchUserInfo to getUserInfo and update related usage\n\n- Renamed fetchUserInfo to getUserInfo in user utility module.\n- Updated all imports and usages in Navbar, Dashboard, and Settings components.\n- Changed UserInfo/SingleUserInfo usage to match new function and type signatures.\n- Made uid property in SingleUserInfo optional for improved type safety.",
    "files": [
      "src/react/components/Navbar.tsx",
      "src/react/pages/Dashboard.tsx",
      "src/react/pages/Settings.tsx",
      "src/react/utils/user.ts"
    ]
  },
  {
    "hash": "348a810ab989daeba2c6534f70376d28135d7be2",
    "date": "2025-08-18T03:35:16+07:00",
    "message": "feat(vps): enhance project manager with NVM sourcing and yarn build support\n\n- Update `pull_latest_code` to source NVM environment and use custom git-pull script\n- Add `yarn_build` function to run `yarn build` with NVM environment sourced\n- Register new \"Run yarn build\" menu item\n- Update docstrings for clarity and accuracy",
    "files": [
      "src/vps/menus/project-manager.py"
    ]
  },
  {
    "hash": "fbc008d4066ccbf098db46a7163d8393633ead60",
    "date": "2025-08-18T03:32:02+07:00",
    "message": "feat(git-pull): auto-resolve .husky/hash.txt conflict during git pull\n\n- Detect if the only merge conflict is .husky/hash.txt during a dry-run merge before git pull\n- If so, automatically truncate and stage .husky/hash.txt, then continue the merge\n- Abort the pull as before if other files are conflicted or if resolution fails",
    "files": [
      "bin/git-pull.cjs"
    ]
  },
  {
    "hash": "c6ebf7b396901bf35c330ae95056fdb3b615c86d",
    "date": "2025-08-18T03:28:22+07:00",
    "message": "feat(git-pull): detect and prevent git pull if merge conflicts are expected\n\n- Add logic to fetch latest changes and perform a dry-run merge before running `git pull`\n- Abort the pull if a merge conflict is detected, preventing partial or broken updates\n- Ensure any changes from the dry-run are reset before proceeding with the actual pull",
    "files": [
      "bin/git-pull.cjs"
    ]
  },
  {
    "hash": "b11e9749abf5c9af25e2a106e4ba03fc18072c5a",
    "date": "2025-08-18T02:53:13+07:00",
    "message": "feat(admin): dynamic user list, saldo addition, and error handling\n\n- Refactor Admin page to fetch user list from server using getListOfUsers.\n- Remove static users array; use state for users, selectedUser, saldo, and error.\n- Add helper functions to get current and new saldo, and format as Rupiah.\n- Implement saldo addition with addSaldoToUser and refresh user list after submit.\n- Display current and new saldo inline with arrow icon.\n- Show error messages above the submit button if saldo addition or user refresh fails.\n- Update user select to handle loading and empty states.\n- Add new utility: toRupiah for formatting numbers as Indonesian Rupiah.\n- Update user types and API calls in utils/user.ts for better type safety and extensibility.",
    "files": [
      "src/react/pages/Admin.tsx",
      "src/react/utils/user.ts",
      "src/utils/number.js"
    ]
  },
  {
    "hash": "b36ec081ae294b0d24b632b9462a22f772e92271",
    "date": "2025-08-18T01:55:33+07:00",
    "message": "refactor(react): convert Navbar to function component with route-aware user info fetch\n\n- Refactored Navbar from a class component to a function component using React hooks.\n- Integrated useLocation from react-router-dom to detect route changes.\n- User info is now fetched on every location (route) change to keep the navbar state up-to-date.\n- Added useEffect for click-outside handling and state reset on logout.\n- Improved state management with useState and useRef for menu toggles.",
    "files": [
      "src/react/components/Navbar.tsx"
    ]
  },
  {
    "hash": "fd387378f7a96a265e9e2e5ecfed2efc921d1ec9",
    "date": "2025-08-17T17:22:49+07:00",
    "message": "feat(navbar): hide admin menu for non-admin users\n\n- Add `admin` property to `UserInfo` interface and user state.\n- Only render the /admin link in the Navbar if the current user is an admin.",
    "files": [
      "src/react/components/Navbar.tsx",
      "src/react/utils/user.ts"
    ]
  },
  {
    "hash": "d1720261e98d97776f03c5850271881a9b2655d3",
    "date": "2025-08-17T17:04:09+07:00",
    "message": "refactor(list-user): improve error response structure for unauthorized access",
    "files": [
      "php_backend/list-user.php"
    ]
  },
  {
    "hash": "61a9204f07fa4b784b2830ef9818d3ff59ce06bc",
    "date": "2025-08-17T16:45:00+07:00",
    "message": "refactor(react): use PascalCase 'Component' prop for route mapping and JSX rendering\n\n- Updated route mapping logic to use 'Component' (PascalCase) instead of 'component' for consistency with React conventions.\n- Refactored route rendering in index.tsx to check for existence of 'Component' and render using JSX (<Component />) instead of string-based or lower-case component references.\n- Improved type safety and clarity in route definitions and rendering.",
    "files": [
      "packages/baileys",
      "src/react/index.tsx",
      "src/react/routes.js"
    ]
  },
  {
    "hash": "af454feed49d3b7ebccde5b20fbf9cf6bec314be",
    "date": "2025-08-17T16:14:14+07:00",
    "message": "chore(package): update build script order and remove postinstall\n\n- Updated the build script to run `build:packages` before `build:rollup` and `build:react` for proper dependency build order.\n- Removed the `postinstall` script that previously triggered `build:packages` after install.",
    "files": [
      "package.json"
    ]
  },
  {
    "hash": "83222a8a8abfa70f28c536d134c61db11e628c3e",
    "date": "2025-08-17T16:13:02+07:00",
    "message": "refactor(routes): move route metadata to routes.json and dynamically merge with components\n\n- Extracted all route metadata (path, title, description, thumbnail, canonical) from routes.js into a new routes.json file for better separation of concerns and easier reuse.\n- Updated routes.js to import metadata from routes.json and dynamically assign the correct React component to each route based on its path.\n- Updated vite-gh-pages.js to import routes from routes.json (as JSON) and refactored the route HTML generation logic to support both string and array paths, ensuring all route aliases are handled.",
    "files": [
      "src/react/routes.js",
      "src/react/routes.json",
      "vite-gh-pages.js"
    ]
  },
  {
    "hash": "37755a143c12f08ce08bd810051aa42123e38c32",
    "date": "2025-08-17T15:45:45+07:00",
    "message": "feat(nginx): update access rules for /data and /assets file types",
    "files": [
      ".htaccess_nginx.conf"
    ]
  },
  {
    "hash": "3e7458f61961adee5de9824188940a429d923875",
    "date": "2025-08-17T15:33:44+07:00",
    "message": "feat(nginx): allow public access to /data/git-history.json",
    "files": [
      ".htaccess_nginx.conf"
    ]
  },
  {
    "hash": "09e5527948915715b5e49f5253cbd5b6afaf6c28",
    "date": "2025-08-17T15:27:28+07:00",
    "message": "fix(fix-perm): add user existence check before proceeding with permission changes",
    "files": [
      "bin/fix-perm"
    ]
  },
  {
    "hash": "28b5114aeac57745d70a14f1f7128c285288a281",
    "date": "2025-08-17T15:12:24+07:00",
    "message": "refactor(dashboard): replace axios with fetchUserInfo utility for user data retrieval",
    "files": [
      "src/react/pages/Dashboard.tsx"
    ]
  },
  {
    "hash": "3a4069c6c5e894e1e906635989019b0ac87ce1c7",
    "date": "2025-08-17T15:09:20+07:00",
    "message": "fix(navbar): close dropdowns when clicking outside\n\n- Add document event listener to detect clicks outside user and social dropdowns.\n- Use refs to track dropdown elements and close them when a click occurs outside.\n- Remove event listener on component unmount to prevent memory leaks.",
    "files": [
      "src/react/components/Navbar.tsx"
    ]
  },
  {
    "hash": "5bdf2b86a65c5c38676affbd6ee27e6ab719fb89",
    "date": "2025-08-17T15:04:36+07:00",
    "message": "refactor(react): migrate all fetch calls to axios in user and page components\n\n- Replaced all instances of fetch with axios for HTTP requests in the following files:\n  - src/react/pages/Dashboard.tsx\n  - src/react/pages/Login.tsx\n  - src/react/pages/Logout.tsx\n  - src/react/pages/OauthHandler.tsx\n  - src/react/pages/Settings.tsx\n  - src/react/utils/user.ts\n- Updated imports and usage to use axios for consistency and improved error handling.\n- Ensured all affected components handle axios response structure and errors appropriately.",
    "files": [
      "src/react/pages/Dashboard.tsx",
      "src/react/pages/Login.tsx",
      "src/react/pages/Logout.tsx",
      "src/react/pages/OauthHandler.tsx",
      "src/react/pages/Settings.tsx",
      "src/react/utils/user.ts"
    ]
  },
  {
    "hash": "0653b3151d2d154722f5c70a845e69b2f5e07aa8",
    "date": "2025-08-17T14:57:59+07:00",
    "message": "feat(login): add login API integration and redirect on success\n\n- Integrate login form with backend API using fetch.\n- Use react-router-dom's useNavigate to redirect to /dashboard after successful login.\n- Display error messages for failed login attempts.",
    "files": [
      "src/react/pages/Login.tsx"
    ]
  },
  {
    "hash": "b4fb17d36eec57c3b2ef14e63cb927eb22cc3baa",
    "date": "2025-08-17T14:47:31+07:00",
    "message": "fix(login): unify response structure and improve password verification logic\n\n- Ensure all login responses include 'message' and boolean 'error' keys for consistency.\n- Refactor do_login and verify to always return structured responses.\n- Add support for legacy raw password check and automatic rehashing if detected.\n- Improve admin login response and session handling.\n- Provide clearer error and success messages for all login scenarios.",
    "files": [
      "php_backend/login.php"
    ]
  },
  {
    "hash": "bffb0ceb368414a4be85d6298084c176b61dc4c7",
    "date": "2025-08-17T14:41:57+07:00",
    "message": "fix(hashers): improve robustness of password verification and add tests for invalid formats\n\n- Update password hasher implementations (Node.js, PHP, Python) to safely handle invalid encoded formats and avoid runtime errors.\n- Add comprehensive tests in all languages to ensure verify returns false for empty, malformed, or incomplete encoded strings.\n- Refactor Python hasher to use indexed access for split results, matching logic across implementations.",
    "files": [
      "src/hashers/CustomPasswordHasher.cjs",
      "src/hashers/CustomPasswordHasher.php",
      "src/hashers/CustomPasswordHasher.py",
      "tests/hashers/CustomPasswordHasher.test.cjs",
      "tests/hashers/CustomPasswordHasherTest.php",
      "tests/hashers/CustomPasswordHasherTest.py"
    ]
  },
  {
    "hash": "6a2bd32de8314c9eec4701098df3ce92e82422e8",
    "date": "2025-08-17T14:37:17+07:00",
    "message": "fix(ReferenceError): Cannot access 'productionEnv' before initialization",
    "files": [
      ".env.mjs"
    ]
  },
  {
    "hash": "19790c3a3a7a3a8082526b016c81c869e39f1a60",
    "date": "2025-08-17T14:36:23+07:00",
    "message": "feat(setup): run setup.js in prepare script and add setup.js for build steps\n\n- Update the \"prepare\" npm script to run both husky and setup.js.\n- Add new setup.js file to automate loading environment variables, building Tailwind CSS, and copying index.html.",
    "files": [
      "package.json",
      "setup.js"
    ]
  },
  {
    "hash": "4eb40c37cd1ee4b2aae2e1198a30fd47393e4e42",
    "date": "2025-08-17T14:23:08+07:00",
    "message": "feat(Logout): replace anchor tag with Link component for navigation",
    "files": [
      "src/react/pages/Logout.tsx"
    ]
  },
  {
    "hash": "318bb3fccdc94556b3525c2fea8ced741b5e27be",
    "date": "2025-08-17T14:22:15+07:00",
    "message": "feat(Link): export Link component as aLink and aHref for easier usage",
    "files": [
      "src/react/components/Link.tsx"
    ]
  },
  {
    "hash": "a7fdab22ec990071221bca96ecead7008210ae23",
    "date": "2025-08-17T14:16:42+07:00",
    "message": "feat(react): support multiple paths per route\n\n- Refactored route rendering in `index.tsx` to accept `path` as a string or array of strings, creating multiple `<Route />` elements when an array is provided.\n- Updated `/oauth` route in `routes.js` to support both `/oauth` and `/oauth/google` paths for the `OauthHandler` component.",
    "files": [
      "src/react/index.tsx",
      "src/react/routes.js"
    ]
  },
  {
    "hash": "8f5f8725e45ffbbfb3d0f67acaf86579b36a7b4a",
    "date": "2025-08-17T14:12:45+07:00",
    "message": "feat(instructions): update applyTo pattern to include cjs and mjs file extensions",
    "files": [
      ".github/instructions/nodejs.instructions.md"
    ]
  },
  {
    "hash": "99d5916121f7d175653c01a85d4245c2f2089f4b",
    "date": "2025-08-17T14:05:10+07:00",
    "message": "feat(Admin): enhance dark mode support and improve styling for user selection and saldo input",
    "files": [
      "src/react/pages/Admin.tsx"
    ]
  },
  {
    "hash": "7254aee06defeed100278fdf67bbd0fc2ecca807",
    "date": "2025-08-17T13:55:40+07:00",
    "message": "feat(robots.txt, vite-plugin): disallow admin, tmp, and embed.php in robots.txt; automate robots.txt copying in build\n\n- Added Disallow rules for /admin, /tmp, and /embed.php in robots.txt to restrict crawler access.\n- Updated vite-plugin.js to automatically copy robots.txt to production directories if the file exists and is not empty.",
    "files": [
      "robots.txt",
      "vite-plugin.js"
    ]
  },
  {
    "hash": "b243bac5ad28e732598f29954201e6eaa98f2349",
    "date": "2025-08-17T13:52:10+07:00",
    "message": "feat(logout): add logout page, route, and user dropdown link with dark mode support\n\n- Added a new Logout page (`src/react/pages/Logout.tsx`) that calls the backend logout endpoint, handles the JSON response, and displays status messages with Font Awesome Pro icons.\n- Implemented dark mode support for the Logout page using Tailwind/Flowbite classes.\n- Added a `/logout` route to the app in `src/react/routes.js`.\n- Added a Logout link with icon to the user dropdown in the Navbar for authenticated users.",
    "files": [
      "src/react/components/Navbar.tsx",
      "src/react/pages/Logout.tsx",
      "src/react/routes.js"
    ]
  },
  {
    "hash": "8b9ef4d99e25154ea3fcf596f745d719176fec29",
    "date": "2025-08-17T13:42:39+07:00",
    "message": "feat(navbar, admin, routes): unify user dropdown, add admin page, and clean up imports\n\n- Refactored Navbar to use a single user dropdown for both authenticated and unauthenticated users, removing duplicate dropdown logic.\n- Added `userMenuOpen` state to Navbar for better dropdown control.\n- Implemented toggle handlers to ensure only one dropdown (user or social) is open at a time.\n- Added new `Admin` page (`src/react/pages/Admin.tsx`) with a form to add saldo for users.\n- Updated route imports in `src/react/routes.js` to use `.tsx` suffix and registered the new `/admin` route.",
    "files": [
      "src/react/components/Navbar.tsx",
      "src/react/pages/Admin.tsx",
      "src/react/routes.js",
      "src/react/utils/url.ts"
    ]
  },
  {
    "hash": "d6d9b69706fc2707cbeb9e1fbc1f6cff04cff28f",
    "date": "2025-08-17T13:24:29+07:00",
    "message": "refactor(react): centralize route definitions and simplify routing\n\n- Removed individual route imports and static <Route> declarations from index.tsx.\n- Introduced a new src/react/routes.js file exporting an array of route objects with their respective components and metadata.\n- Updated index.tsx to dynamically generate <Route> elements from the centralized routes array.\n- Deleted the obsolete src/react/routes.json file.\n- Updated vite-gh-pages.js to import routes from routes.js instead of the removed JSON file.",
    "files": [
      "src/react/index.tsx",
      "src/react/routes.js",
      "src/react/routes.json",
      "vite-gh-pages.js"
    ]
  },
  {
    "hash": "48ebf139340021b6ef431d1f0c388da7f4c1c8ea",
    "date": "2025-08-17T12:55:35+07:00",
    "message": "fix(index.php): update allowed file extensions for asset routing and improve MIME type handling",
    "files": [
      "index.php"
    ]
  },
  {
    "hash": "ab6d3fd0983fe60de80fbdb37759341868f32bbf",
    "date": "2025-08-17T12:48:51+07:00",
    "message": "feat(css): add Ubuntu font-face and apply to body in Tailwind input\n\n- Added @font-face for 'Ubuntu' using UbuntuMono-R.ttf in tailwind.input.css\n- Set 'Ubuntu' as the default font-family for the body element",
    "files": [
      "assets/fonts/ubuntu/CONTRIBUTING.txt",
      "assets/fonts/ubuntu/FONTLOG.txt",
      "assets/fonts/ubuntu/LICENCE-FAQ.txt",
      "assets/fonts/ubuntu/LICENCE.txt",
      "assets/fonts/ubuntu/README.txt",
      "assets/fonts/ubuntu/TRADEMARKS.txt",
      "assets/fonts/ubuntu/Ubuntu-B.ttf",
      "assets/fonts/ubuntu/Ubuntu-BI.ttf",
      "assets/fonts/ubuntu/Ubuntu-C.ttf",
      "assets/fonts/ubuntu/Ubuntu-L.ttf",
      "assets/fonts/ubuntu/Ubuntu-LI.ttf",
      "assets/fonts/ubuntu/Ubuntu-M.ttf",
      "assets/fonts/ubuntu/Ubuntu-MI.ttf",
      "assets/fonts/ubuntu/Ubuntu-R.ttf",
      "assets/fonts/ubuntu/Ubuntu-RI.ttf",
      "assets/fonts/ubuntu/Ubuntu-Th.ttf",
      "assets/fonts/ubuntu/UbuntuMono-B.ttf",
      "assets/fonts/ubuntu/UbuntuMono-BI.ttf",
      "assets/fonts/ubuntu/UbuntuMono-R.ttf",
      "assets/fonts/ubuntu/UbuntuMono-RI.ttf",
      "assets/fonts/ubuntu/copyright.txt",
      "tailwind.input.css",
      "vite-plugin.js"
    ]
  },
  {
    "hash": "0d230f0f8a0a9f24e921df04039600fb687214aa",
    "date": "2025-08-17T12:22:35+07:00",
    "message": "refactor(index.php): optimize static asset serving logic and remove redundancy\n\n- Removed redundant file path and extension handling for /assets and /data routes.\n- Unified file existence checks using a loop to try both the project root and /dist/react directories.\n- Centralized MIME type detection and response logic.\n- Ensured allowed extension rule is enforced before serving any file.",
    "files": [
      "index.php"
    ]
  },
  {
    "hash": "bf39bf8d10bc97176b5b8733162e62edcc0a3202",
    "date": "2025-08-17T12:16:29+07:00",
    "message": "chore(nginx): comment out static file location block for js, css, images, and icons\n\nThe location block handling static files with caching and logging settings has been commented out. This change allows requests for missing static files to be handled by the main try_files rule, enabling fallback to index.php.",
    "files": [
      ".htaccess_nginx.conf"
    ]
  },
  {
    "hash": "37846c1dc2a9a16de9d968d4a0d2b87440298ba9",
    "date": "2025-08-17T12:12:46+07:00",
    "message": "fix(tailwind): add local font reference for bold Ubuntu font",
    "files": [
      "tailwind.input.css"
    ]
  },
  {
    "hash": "7e3f68b141cb45b5bd607130aa3abd5d297acf0f",
    "date": "2025-08-17T12:05:10+07:00",
    "message": "fix(vite): exclude .deploy_git directory from watch list",
    "files": [
      "vite.config.js"
    ]
  },
  {
    "hash": "b2559a0b637368a7438efcd7407638af69713855",
    "date": "2025-08-17T12:04:04+07:00",
    "message": "fix(github-pages): ensure job runs for both php-proxy-hunter and android-traffic-exchange repositories",
    "files": [
      ".github/workflows/github-pages.yml"
    ]
  },
  {
    "hash": "1c2ace0cb99ab4836f6a2af726684600f354625a",
    "date": "2025-08-17T12:00:55+07:00",
    "message": "chore(husky): handle yarn install failure gracefully in post-merge hook\n\n- Updated `.husky/post-merge` to echo a message if `yarn install` fails, improving post-merge script robustness.",
    "files": []
  },
  {
    "hash": "98c3cbb8a2b4557c602764022f1e03aeafe61d4b",
    "date": "2025-08-17T11:55:04+07:00",
    "message": "feat(react): add streaming JSON utility with oboe.js and integrate in Changelog\n\n- Added `oboe` and `@types/oboe` dependencies to `package.json` for streaming JSON parsing.\n- Created `streamJsonFromUrl` async generator in `src/react/utils/json.ts` to stream large JSON files using oboe.js.\n- Refactored `Changelog` page to use the new streaming helper for loading git history, improving performance with large files.\n- Added integration test for `streamJsonFromUrl` in `tests/react/utils/json.test.ts` using a real public JSON endpoint.",
    "files": [
      "package.json",
      "src/react/pages/Changelog.tsx",
      "src/react/utils/json.ts",
      "tests/react/utils/json.test.ts"
    ]
  },
  {
    "hash": "0ceb1bdebcc07dd36dad38a216ad6cbaec7a5cee",
    "date": "2025-08-15T20:51:24+07:00",
    "message": "refactor(proxy): update logger, test structure, and utility usage\n\n- Move logger implementation from node_browser/logger.js to src/proxy/logger.js and update imports accordingly.\n- Replace deprecated toMs utility with toMilliseconds from sbg-utility in ProxyChecker and hunter modules.\n- Remove src/proxy/filterTest.test.js and add tests/proxy/filterTest.direct.js for direct test execution.\n- Move and rename test files from src/proxy/*.test.js to tests/proxy/*.direct.js, updating import paths to use src/ structure.\n- Update tsconfig.json to include ./tests/**/* instead of ./test/**/* in the include section.\n- General code cleanup and modernization of proxy-related modules and tests.",
    "files": [
      "src/proxy/ProxyChecker.js",
      "src/proxy/filterTest.test.js",
      "src/proxy/hunter.js",
      "src/proxy/logger.js",
      "tests/proxy/ProxyChecker.direct.js",
      "tests/proxy/filterTest.direct.js",
      "tests/proxy/hunter.direct.js",
      "tests/proxy/portOpen.direct.js",
      "tests/proxy/proxyWorking.direct.js",
      "tsconfig.json"
    ]
  },
  {
    "hash": "2238433158e48b8b687fec601168b6a2fed7d602",
    "date": "2025-08-15T20:23:05+07:00",
    "message": "fix(func.php): update parameter type for curlGetWithProxy function to allow nullable proxy",
    "files": [
      "func.php"
    ]
  },
  {
    "hash": "e919d40b3c6971c84ea7afa9cdc1a0dbde05ad69",
    "date": "2025-08-15T20:13:56+07:00",
    "message": "fix(systemd,php-fpm): improve PHP-FPM socket permissions, service config, and log handling\n\n- Uncomment listen.mode in php-fpm-pool.ini to explicitly set socket permissions to 0660.\n- Simplify php-fpm.service by removing unnecessary directives and comments for better compatibility.\n- Update restart-server script to ensure /var/log/php-fpm.log exists with correct permissions and ownership for www-data.\n- Add copying of nginx config to sites-available in restart-server for consistent deployment.",
    "files": [
      "assets/systemctl/php-fpm-pool.ini",
      "assets/systemctl/php-fpm.service",
      "bin/restart-server"
    ]
  },
  {
    "hash": "f174ec4edb46aeda580f74e2416af13fda7a97e6",
    "date": "2025-08-15T19:33:24+07:00",
    "message": "fix(HtmlDocument): ensure string input for document loading and improve noise handling",
    "files": [
      "src/simplehtmldom/HtmlDocument.php"
    ]
  },
  {
    "hash": "08d7b7a3344c65572f5627be052784da69ec7ae8",
    "date": "2025-08-15T18:59:08+07:00",
    "message": "fix: use file path without query string for file operations\n\nUpdate file_exists, finfo_file, and readfile to use the path without query parameters, ensuring correct file detection and serving when query strings are present.",
    "files": [
      "index.php"
    ]
  },
  {
    "hash": "44665bf889b9b9af909061bf90161aebac3cc392",
    "date": "2025-08-15T18:57:21+07:00",
    "message": "fix: correctly detect file extension by removing query string from file path\n\nUse parse_url to extract the path before checking the file extension, ensuring files with query parameters are handled properly.",
    "files": [
      "index.php"
    ]
  },
  {
    "hash": "84b077a4362821f78941dbddf9f37cc388b1abba",
    "date": "2025-08-15T18:54:07+07:00",
    "message": "fix(index.php): decode URL for asset and data routing to handle special characters",
    "files": [
      "index.php"
    ]
  },
  {
    "hash": "9f3d26414dab84e73e625d195871dd024a2618cb",
    "date": "2025-08-15T18:44:19+07:00",
    "message": "fix(index-html-replacement): improve file copy logic to handle empty source files",
    "files": [
      "vite-plugin.js"
    ]
  },
  {
    "hash": "30441e22b445496b4cc2a6580424b9acb406309e",
    "date": "2025-08-15T18:40:38+07:00",
    "message": "refactor: extract and reuse copyIndexHtml utility for index.html copying\n\n- Move index.dev.html to index.html copy logic into a reusable copyIndexHtml function in vite-plugin.js.\n- Replace inline copy logic in vite-gh-pages.js and indexHtmlReplacementPlugin with the new utility.\n- Add JSDoc to copyIndexHtml for clarity and maintainability.",
    "files": [
      "vite-gh-pages.js",
      "vite-plugin.js"
    ]
  },
  {
    "hash": "48846a27e439d030d8735fd7f094895ca7726b79",
    "date": "2025-08-15T18:32:54+07:00",
    "message": "fix(post-merge): remove unnecessary --no-dev flag from composer arguments",
    "files": []
  },
  {
    "hash": "020723f7cdbf13f7e4fd8b9a7ac29bbcdf60077d",
    "date": "2025-08-15T18:19:33+07:00",
    "message": "fix(build): ensure index.dev.html is copied to index.html before building",
    "files": [
      "vite-gh-pages.js"
    ]
  },
  {
    "hash": "0356600afb322e14a781a629d5a3c95b8b1d623c",
    "date": "2025-08-15T18:12:51+07:00",
    "message": "fix(post-merge): simplify submodule update logic by removing VPS condition",
    "files": []
  },
  {
    "hash": "eafa6adbababdc33357792b193e5ce7dda79928d",
    "date": "2025-08-15T18:11:30+07:00",
    "message": "fix(restart-server): enable PHP-FPM service if not already enabled before starting",
    "files": [
      "bin/restart-server"
    ]
  },
  {
    "hash": "fd97166618f5f35ea2f2f319f2e3dcf57a8f697c",
    "date": "2025-08-15T17:59:26+07:00",
    "message": "fix(php-fpm): change service type from forking to simple for better process management",
    "files": [
      "assets/systemctl/php-fpm.service"
    ]
  },
  {
    "hash": "ba89e7a812b161e1909a9426c5750aca97eb0d69",
    "date": "2025-08-15T17:55:16+07:00",
    "message": "fix(restart-server): ensure /run/php directory ownership is set for www-data user",
    "files": [
      "bin/restart-server"
    ]
  },
  {
    "hash": "1c35e1253d2cddbb81fd1c47cd48588a0db94f98",
    "date": "2025-08-15T17:44:29+07:00",
    "message": "feat(index): update CORS to allow all headers and methods, extend localhost list, support font assets, adjust asset path, and improve MIME handling for js/css",
    "files": [
      "index.php"
    ]
  },
  {
    "hash": "dcb508c768d3b473348183dc13ffb6b8321ce932",
    "date": "2025-08-15T17:31:47+07:00",
    "message": "fix(readme): add command to remove all crontab entries for www-data user",
    "files": [
      "readme.md"
    ]
  },
  {
    "hash": "f8168fdd57f6de775ed101d1578066a739d78f34",
    "date": "2025-08-15T17:28:13+07:00",
    "message": "fix(post-merge): update submodule installation command to use the latest version",
    "files": []
  },
  {
    "hash": "9119cdc4904e51377faee31acbdb0dcff51789bb",
    "date": "2025-08-15T16:58:13+07:00",
    "message": "feat(index): allow js and css assets, improve error messages for 403 and 404 responses",
    "files": [
      "index.php"
    ]
  },
  {
    "hash": "4de43eb267aec44eea65882226dd460bd14ec412",
    "date": "2025-08-15T16:52:17+07:00",
    "message": "refactor!: remove legacy MVC controllers, views, and translations\n\n- Remove all files in `controllers/`, `src/mvc/`, `views/`, and `translations/` related to the old PHP MVC and Twig-based frontend.\n- Update `.htaccess` and `.htaccess_nginx.conf` to block access to the `src` folder instead of the `views` folder.\n- Clean up `composer.json` autoload paths by removing references to `translations/ext` and `src/mvc`.\n- Update submodule `packages/baileys` to latest commit.\n\nBREAKING CHANGE: The legacy PHP MVC controllers, Twig templates, and translation files have been removed. All related routes and frontend features depending on these files are no longer available.",
    "files": [
      ".htaccess",
      ".htaccess_nginx.conf",
      "composer.json",
      "controllers/CheckDuplicateProxyController.php",
      "controllers/ListDuplicateProxyController.php",
      "controllers/LogoutController.php",
      "controllers/ProfileController.php",
      "controllers/UserController.php",
      "controllers/autoload.php",
      "packages/baileys",
      "src/mvc/BaseController.php",
      "translations/ext/BooleanStringExtension.php",
      "translations/ext/CountryCodeExtension.php",
      "translations/ext/TranslationExtension.php",
      "translations/messages.en.yaml",
      "translations/messages.id.yaml",
      "views/404.twig",
      "views/_partials/landing.twig",
      "views/_partials/login.twig",
      "views/_partials/profile-card.twig",
      "views/_widgets/dashboard-menu.twig",
      "views/_widgets/history.twig",
      "views/_widgets/languages.twig",
      "views/admin/index.twig",
      "views/admin/refill-saldo.twig",
      "views/assets/css/template.scss",
      "views/assets/js/_widget/dashboard-menu.js",
      "views/assets/js/admin.js",
      "views/assets/js/dashboard.js",
      "views/assets/js/edit-profile.js",
      "views/assets/js/languages.js",
      "views/assets/js/login.js",
      "views/assets/js/profile-card.js",
      "views/assets/js/refill-saldo.js",
      "views/assets/js/template.js",
      "views/assets/js/user/logs.js",
      "views/assets/js/utils/url.js",
      "views/assets/json/dashboard-menu.jsonc",
      "views/dashboard/index.twig",
      "views/index.twig",
      "views/list-duplicate-proxy/index.twig",
      "views/login/index.twig",
      "views/profile/edit.twig",
      "views/readme.md",
      "views/template.twig",
      "views/user/logs.twig"
    ]
  },
  {
    "hash": "8816047a466a047de4d6aa765d7bb07d445d22ad",
    "date": "2025-08-15T16:27:42+07:00",
    "message": "fix(post-merge): enhance submodule update logic for VPS environments",
    "files": []
  },
  {
    "hash": "bf2bc8bab9b4c35a567208a2625eb2a2edab4deb",
    "date": "2025-08-15T16:09:46+07:00",
    "message": "fix(editorconfig): add Bash and shell script formatting rules to .editorconfig\nfix(vscode): enable ShellFormat and configure supported languages in settings.json",
    "files": [
      ".editorconfig",
      ".vscode/settings.json"
    ]
  },
  {
    "hash": "548b71a9b9c3fccfb8519396fc4c59d89897ba5d",
    "date": "2025-08-15T16:09:15+07:00",
    "message": "fix(post-merge): enhance composer installation logic to support VPS environments and user-specific execution",
    "files": []
  },
  {
    "hash": "79a62e4bad0672757319806ebe3cbb79bfd9b136",
    "date": "2025-08-15T15:49:21+07:00",
    "message": "fix(vite-plugin): simplify index.html copying logic in indexHtmlReplacementPlugin",
    "files": [
      "vite-plugin.js"
    ]
  },
  {
    "hash": "01d4b4682578435d8f4f2ef762ed5cccd095fc2e",
    "date": "2025-08-15T15:44:52+07:00",
    "message": "fix(vite-plugin): update path handling for HTML files in indexHtmlReplacementPlugin",
    "files": [
      "vite-plugin.js"
    ]
  },
  {
    "hash": "76c5c7fe640d5b2fe913d6e801aff174ed14c2aa",
    "date": "2025-08-15T15:38:28+07:00",
    "message": "fix(vite-plugin): enhance closeBundle logic to check for source file existence before copying",
    "files": [
      "vite-plugin.js"
    ]
  },
  {
    "hash": "41e438288edf64e1b83ffe69f1ba461da0e5b956",
    "date": "2025-08-15T15:36:43+07:00",
    "message": "fix(post-merge): enhance submodule update process with stashing and restoring changes",
    "files": []
  },
  {
    "hash": "06e4906112b6a8649d409070ee4b8fd93f70e3f8",
    "date": "2025-08-15T15:31:30+07:00",
    "message": "feat(post-merge): add submodule update functionality to post-merge hook",
    "files": []
  },
  {
    "hash": "2d4eb607948acf2f8c539c08df6e3244d7141d5b",
    "date": "2025-08-15T15:28:06+07:00",
    "message": "fix(package.json): add resolution for typescript to version ~5.8.0",
    "files": [
      "package.json",
      "packages/baileys"
    ]
  },
  {
    "hash": "fade172bca2c34eae4ecc230343d187cb512ef2a",
    "date": "2025-08-15T14:29:04+07:00",
    "message": "refactor(rollup.project.js): remove unused banner code and clarify return type in modifyOutputCode",
    "files": [
      "rollup.project.js"
    ]
  },
  {
    "hash": "53f667bfddb115d1bbcc056e0f5f115a1f86082f",
    "date": "2025-08-15T13:59:49+07:00",
    "message": "chore(composer.phar): update composer.phar binary to latest version",
    "files": [
      "composer.phar"
    ]
  },
  {
    "hash": "87ee7902edc1d98d1498f21809233f31b0fb17aa",
    "date": "2025-08-15T13:55:16+07:00",
    "message": "fix(pre-commit): correct php-cs-fixer command syntax in pre-commit hook",
    "files": []
  },
  {
    "hash": "b6cce55c3eca4e735aba3acb4c4a6c57387b6df6",
    "date": "2025-08-15T13:53:41+07:00",
    "message": "feat(index.php): restrict /assets and /data routes to specific file types and improve MIME handling\n\n- Added a route to serve files from /assets and /data only if their extensions are in an allowed list (json, txt, images, xml, xsl, jsonc).\n- Automatically detects and sets the correct MIME type for allowed files.\n- Returns 403 Forbidden for disallowed file types and 404 Not Found for missing files.\n- Simplified index file serving logic.",
    "files": [
      "index.php"
    ]
  },
  {
    "hash": "1339410bc2cb55138523a1808d2e2e9c3d9092e8",
    "date": "2025-08-15T13:40:59+07:00",
    "message": "feat(vite-plugin): improve index.html handling for dev and production\n\n- Update `configResolved` to only copy `index.dev.html` to `index.html` in development mode (`serve` command).\n- Add `closeBundle` hook to copy the compiled `dist/react/index.html` to the project root for production builds.\n- Ensures correct index.html is used in both development and production environments.",
    "files": [
      "vite-plugin.js"
    ]
  },
  {
    "hash": "2fadc0f5ea598988a223644840e9895fde18112b",
    "date": "2025-08-15T13:04:28+07:00",
    "message": "feat(php-fpm): add systemd service and config for generic PHP-FPM, update nginx and service scripts\n\n- Add `php-fpm.service`, `php-fpm-pool.ini`, and `php-conf.ini` to `assets/systemctl` for generic PHP-FPM management.\n- Update `.htaccess_nginx.conf` to use a generic `php-fpm.sock` instead of version-specific socket.\n- Update `bin/restart-server` and `bin/stop-server` scripts to handle both old versioned PHP-FPM services and the new generic `php-fpm` service, including improved service start/stop logic and config copying.\n- Add documentation for PHP 7.4 setup in `docs/readme-php7.4.md`.\n- Update `readme-php.md` to reference new generic PHP-FPM setup and troubleshooting steps.\n- Fix permission script to copy updated nginx config.",
    "files": [
      ".htaccess_nginx.conf",
      "assets/systemctl/php-conf.ini",
      "assets/systemctl/php-fpm-pool.ini",
      "assets/systemctl/php-fpm.service",
      "bin/restart-server",
      "bin/stop-server",
      "docs/readme-php7.4.md",
      "fix-nginx-perm.sh",
      "readme-php.md"
    ]
  },
  {
    "hash": "b1fa725260f478c6b0e7f31e59b448190bc20231",
    "date": "2025-08-15T12:08:51+07:00",
    "message": "refactor(CI): drop php build",
    "files": [
      ".github/workflows/build-php.yml.txt"
    ]
  },
  {
    "hash": "9ca588112ed5dadcc24e2bae0f495d934ce54c23",
    "date": "2025-08-15T11:43:24+07:00",
    "message": "fix(workflow): add concurrency settings to prevent overlapping PHP FPM builds",
    "files": [
      ".github/workflows/build-php.yml"
    ]
  },
  {
    "hash": "35478090bb4b8f03d05ecd18032af07d850a9a38",
    "date": "2025-08-15T11:42:00+07:00",
    "message": "fix(workflow): update build script to include additional dependencies and improve staging directory setup",
    "files": [
      ".github/workflows/build-php.yml"
    ]
  },
  {
    "hash": "dd1e75abaefa92fd753078c6a3b7fb8769563fcd",
    "date": "2025-08-15T11:39:19+07:00",
    "message": "fix(workflow): ensure staging directory for PHP installation is created before install",
    "files": [
      ".github/workflows/build-php.yml"
    ]
  },
  {
    "hash": "b70942f1c9da9bf9dd4905e7785f7aa9fe9c56c9",
    "date": "2025-08-15T11:36:45+07:00",
    "message": "fix(workflow): improve build process by adding cache setup and conditional checks for SQLite and PHP source",
    "files": [
      ".github/workflows/build-php.yml"
    ]
  },
  {
    "hash": "586729d7d5b1f9a7edf56fe6d1dc0796cd5e0187",
    "date": "2025-08-15T11:28:48+07:00",
    "message": "fix(workflow): add libonig-dev to build dependencies for PHP FPM",
    "files": [
      ".github/workflows/build-php.yml"
    ]
  },
  {
    "hash": "031688d3666725d5f37a565c4497910551c5e868",
    "date": "2025-08-15T11:27:47+07:00",
    "message": "fix(workflow): update cron schedule for PHP FPM build to run every 24 hours",
    "files": [
      ".github/workflows/build-php.yml"
    ]
  },
  {
    "hash": "ba7d6ab03c8c4e1580ff4473d491e856e23e6fe4",
    "date": "2025-08-15T11:23:16+07:00",
    "message": "feat(workflow): add GitHub Actions workflow for building PHP FPM with SQLite",
    "files": [
      ".github/workflows/build-php.yml"
    ]
  },
  {
    "hash": "edd63674b5c8dc79d69e275a8c184401eda1e83f",
    "date": "2025-08-15T10:25:17+07:00",
    "message": "fix(setup): check for user existence before script execution",
    "files": [
      "setup.sh"
    ]
  },
  {
    "hash": "42dd91fcb8bf417ef7528cc9ca2920c806e9f69d",
    "date": "2025-08-15T09:37:50+07:00",
    "message": "fix(php): update PHP version range",
    "files": [
      "bin/restart-server",
      "bin/stop-server"
    ]
  },
  {
    "hash": "d28f7227c91f8e685d4ac05ed85229f8914a727b",
    "date": "2025-08-15T09:33:35+07:00",
    "message": "feat(docs): add guide for building SQLite from source on Linux",
    "files": [
      "readme-sqlite.md"
    ]
  },
  {
    "hash": "39bb6dee3487f10c9411a3a5504f45ed37135267",
    "date": "2025-08-15T07:32:24+07:00",
    "message": "fix(Navbar): remove unused state properties and clean up component",
    "files": [
      "src/react/components/Navbar.tsx"
    ]
  },
  {
    "hash": "634f6bd3fc01fae7108b8cc7c7ccd2df83a32303",
    "date": "2025-08-15T07:29:42+07:00",
    "message": "feat(pages): add NotFound component for 404 error handling",
    "files": [
      "src/react/index.tsx",
      "src/react/pages/NotFound.tsx"
    ]
  },
  {
    "hash": "753107f1d4d5fa7936c9ae6aaee5c77bdfa379e4",
    "date": "2025-08-15T07:22:08+07:00",
    "message": "feat(styles): add custom font-face rules and font output category\n\n- Added @font-face declarations for Ubuntu, Cera Pro, and JetBrains Mono fonts in tailwind.input.css.\n- Applied Ubuntu font to body, Cera Pro to headings, and JetBrains Mono to code elements.\n- Updated Vite config to alias /assets/fonts and output font files to assets/fonts in build.",
    "files": [
      "tailwind.input.css",
      "vite.config.js"
    ]
  },
  {
    "hash": "9a2e7380fbcc39e799fd08df51579102629beb56",
    "date": "2025-08-15T07:18:58+07:00",
    "message": "feat(build): extract Tailwind CSS build logic to separate script and update usage\n\n- Moved Tailwind CSS build logic to new `tailwind.build.js` file with proper JSDoc and CLI support.\n- Updated `build:tailwind` npm script to use `node tailwind.build.js` instead of direct npx command.\n- Refactored `vite-plugin.js` to import and use the new `buildTailwind` function, improving code reuse and maintainability.",
    "files": [
      "package.json",
      "tailwind.build.js",
      "vite-plugin.js"
    ]
  },
  {
    "hash": "3205937c9e1b6b00ef6c207b3fcf54b356aeb767",
    "date": "2025-08-15T06:50:46+07:00",
    "message": "fix(vite): wrap git commit hash in quotes for proper string definition",
    "files": [
      "vite.config.js"
    ]
  },
  {
    "hash": "cae9b09753c5ff0b8a209f354f6dc96482034dd7",
    "date": "2025-08-15T06:47:42+07:00",
    "message": "feat(utils): allow dynamic backend hostname injection in createUrl and add tests\n\n- Refactor `createUrl` to accept optional `opts` parameter for backendDev and backendProd hostnames, enabling dynamic injection for testability.\n- Update JSDoc for `createUrl` to document new options and behavior.\n- Fallback to Vite env variables if options are not provided.\n- Add comprehensive Vitest test suite for `createUrl` covering:\n  - index.html appending for directory paths\n  - origin usage for non-PHP paths\n  - query parameter appending\n  - viteBaseUrl handling\n  - backend hostname selection for PHP files, with injected values for dev/prod",
    "files": [
      "src/react/utils/url.ts",
      "tests/react/utils/url.vitest.ts"
    ]
  },
  {
    "hash": "a2d2cb7dd9c8a323b2c4124ca02059944f35c599",
    "date": "2025-08-15T06:45:51+07:00",
    "message": "test(vitest): integrate Vitest for unit testing\n\n- add `vitest` dependency to package.json\n- create `vitest.config.ts` reusing Vite configuration\n- configure test environment with jsdom and global support\n- simplify vite.config.js export for compatibility",
    "files": [
      "package.json",
      "vite.config.js",
      "vitest.config.ts"
    ]
  },
  {
    "hash": "43c55193625f768ab17edb1cd1381e6c2bf464fd",
    "date": "2025-08-15T06:10:20+07:00",
    "message": "feat(build): add git commit hash as cache buster for git history fetch\n\n- inject `VITE_GIT_COMMIT` into Vite config using current git commit hash\n- append commit hash as query param when fetching `/data/git-history.json`\n- prevents stale fetches by ensuring cache is invalidated per commit",
    "files": [
      "src/react/pages/Changelog.tsx",
      "vite.config.js"
    ]
  },
  {
    "hash": "4eeabe84a9bff17306c00b7b76b88451a51bc8c8",
    "date": "2025-08-15T05:48:16+07:00",
    "message": "fix(settings): add source map resolution options for vite debugging",
    "files": [
      ".vscode/settings.json"
    ]
  },
  {
    "hash": "4ed2e8ce70a74f1f7553299da5a569853a57e7bb",
    "date": "2025-08-15T05:36:38+07:00",
    "message": "ci(github-pages): add scheduled workflow to run every 6 hours\n\nAdded a cron schedule trigger to the GitHub Pages workflow for automatic deployment every 6 hours.",
    "files": [
      ".github/workflows/github-pages.yml"
    ]
  },
  {
    "hash": "aaca32dc15e4df11747e90ff516b9b562d050b9a",
    "date": "2025-08-15T05:34:43+07:00",
    "message": "fix(workflows): remove architecture specification from Python setup in CI workflows",
    "files": [
      ".github/workflows/clean-caches.yml",
      ".github/workflows/nuitka-debug.yml.txt",
      ".github/workflows/nuitka.yml.txt"
    ]
  },
  {
    "hash": "204295f4d17342bc408586bdd83126e64c64d784",
    "date": "2025-08-15T05:33:46+07:00",
    "message": "fix(workflows): comment out submodule update steps in clean-caches.yml",
    "files": [
      ".github/workflows/clean-caches.yml"
    ]
  },
  {
    "hash": "094dcc0e4ddcff407be249e300bd1e9ae270a30a",
    "date": "2025-08-15T05:32:15+07:00",
    "message": "refactor(workflows): rename clean.yml to clean-logs.yml and add concurrency control\n\n- Renamed workflow file from `.github/workflows/clean.yml` to `.github/workflows/clean-logs.yml` for clarity.\n- Added `concurrency` group to prevent overlapping workflow runs.",
    "files": [
      ".github/workflows/clean-logs.yml"
    ]
  },
  {
    "hash": "543bdf1c35324577e3673954fb04f1bc8cde8862",
    "date": "2025-08-15T05:28:05+07:00",
    "message": "fix(readme): Add NVM for Windows installation instructions and update library installation command",
    "files": [
      "readme-nodejs.md"
    ]
  },
  {
    "hash": "dfd4899f08489b89aeec6a5d2e78162bb552eb5d",
    "date": "2025-08-15T05:12:48+07:00",
    "message": "fix(readme): Add note about restarting installation steps and update package list command",
    "files": [
      "readme-php.md"
    ]
  },
  {
    "hash": "dfdd345a0b77a236781d03160541bbc1d9b4da0a",
    "date": "2025-08-15T04:43:00+07:00",
    "message": "fix(scripts): Replace submodule-update script with npx binary-collections submodule-install",
    "files": [
      "fix-django.sh",
      "fix-nginx-perm.sh"
    ]
  },
  {
    "hash": "6b9a7761589652ffa8d09148cad6604d6c679ab2",
    "date": "2025-08-15T04:37:37+07:00",
    "message": "fix(composer): Add missing comma in require-dev section for phpunit",
    "files": [
      "composer.json"
    ]
  },
  {
    "hash": "924ea846e7efc6d0b6fe08e8e9ef18fa1ba113cf",
    "date": "2025-08-15T04:08:28+07:00",
    "message": "refactor(bin): use default require for fs/path, replace forEach with for loops, improve error logging\n\n- Switched to default require style for child_process, fs, and path modules.\n- Replaced forEach with for loops for better control and clarity.\n- Updated error logging to include error messages for chmod, script execution, and .husky/hash.txt handling.\n- Used path.join for fix-perm script execution.",
    "files": [
      "bin/git-pull.cjs"
    ]
  },
  {
    "hash": "2a50634233b9fb6d0f76989a5f68f23c6fc75cc2",
    "date": "2025-08-15T03:56:40+07:00",
    "message": "fix(script): Add user existence check for www-data before proceeding",
    "files": [
      "fix-django.sh",
      "fix-nginx-perm.sh"
    ]
  },
  {
    "hash": "e78d1fab426871fa1aef38bb0c0779ffed49d14a",
    "date": "2025-08-15T03:49:21+07:00",
    "message": "fix(workflow): Simplify yarn operations and remove rollup step",
    "files": []
  },
  {
    "hash": "ed8a8f555ce8441905a72104410d28ea4ee4967a",
    "date": "2025-08-15T03:13:55+07:00",
    "message": "fix(workflow): Standardize step names",
    "files": [
      ".github/workflows/checker-php.yml",
      ".github/workflows/checker-python.yml"
    ]
  },
  {
    "hash": "b81d141fc4f6b78c54e3a6ba0229299f9ceebf40",
    "date": "2025-08-15T03:11:34+07:00",
    "message": "fix(workflow): Add cache-dependency-path for yarn",
    "files": [
      ".github/workflows/checker-php.yml",
      ".github/workflows/checker-python.yml"
    ]
  },
  {
    "hash": "b3e9a9f27e09dbb60385c4e67bb8855e8efc6862",
    "date": "2025-08-15T03:08:10+07:00",
    "message": "fix(workflow): Update Node.js version to 22.x and enable yarn caching",
    "files": [
      ".github/workflows/checker-php.yml",
      ".github/workflows/checker-python.yml"
    ]
  },
  {
    "hash": "32ac6ae0815e987319e77412b2ad670277251d69",
    "date": "2025-08-15T03:02:12+07:00",
    "message": "fix(workflow): Update push paths",
    "files": [
      ".github/workflows/checker-php.yml",
      ".github/workflows/checker-python.yml"
    ]
  },
  {
    "hash": "3e12a1bf51f212ef291f68ae253002c2c3a89875",
    "date": "2025-08-15T02:59:57+07:00",
    "message": "fix(workflow): Update cache paths to include subdirectories",
    "files": [
      ".github/workflows/checker-php.yml",
      ".github/workflows/checker-python.yml"
    ]
  },
  {
    "hash": "cdefd22e41ef92d014349ef879da18c166afa7bd",
    "date": "2025-08-15T02:54:23+07:00",
    "message": "fix(task): Enhance yarn install command with error logging",
    "files": [
      "Taskfile.yml"
    ]
  },
  {
    "hash": "cf11dd59c217451f1acd86270f6d7b5f78a47d06",
    "date": "2025-08-15T02:47:33+07:00",
    "message": "fix(ci): Remove git lfs tracking for \"*.rar\" files in workflow configurations",
    "files": [
      ".github/workflows/checker-php.yml",
      ".github/workflows/checker-python.yml"
    ]
  },
  {
    "hash": "51c56b9ccd9e4310615f142bf4634b4feae11a7a",
    "date": "2025-08-15T02:46:55+07:00",
    "message": "Merge branch 'master' of https://github.com/dimaslanjaka/php-proxy-hunter",
    "files": []
  },
  {
    "hash": "8f42c8c09976746c84e682affc6370148a870dbd",
    "date": "2025-08-15T02:46:11+07:00",
    "message": "Merge pull request #51 from dimaslanjaka/dependabot/composer/phpunit/phpunit-tw-9.6or-tw-12.0\n\nbuild(deps-dev): update phpunit/phpunit requirement from ^9.6 to ^9.6 || ^12.0",
    "files": []
  },
  {
    "hash": "cb42146a5db52815296532b9aed5cffb4a7833c6",
    "date": "2025-08-15T02:45:46+07:00",
    "message": "Merge branch 'master' into dependabot/composer/phpunit/phpunit-tw-9.6or-tw-12.0",
    "files": []
  },
  {
    "hash": "379299742ff387649f5f1452b103d122c03d69f9",
    "date": "2025-08-15T02:44:16+07:00",
    "message": "Merge branch 'master' of https://github.com/dimaslanjaka/php-proxy-hunter",
    "files": []
  },
  {
    "hash": "ae8b9b0203f2396e4a09e71a4ccaeb11e63a6ec5",
    "date": "2025-08-15T02:42:10+07:00",
    "message": "Merge pull request #52 from dimaslanjaka/dependabot/composer/symfony/yaml-tw-5.4or-tw-7.0\n\nbuild(deps): update symfony/yaml requirement from ^5.4 to ^5.4 || ^7.0",
    "files": []
  },
  {
    "hash": "4c7c1e06fa57498fd4163b2e3d63daa0635b6852",
    "date": "2025-08-15T02:41:43+07:00",
    "message": "fix(scripts): update build script to include separate rollup and react builds",
    "files": [
      "package.json",
      "packages/gh-pages"
    ]
  },
  {
    "hash": "228efab57b884e8a91e1ae2748f2906cb75d2f08",
    "date": "2025-08-15T02:32:37+07:00",
    "message": "fix(url): ensure backend hostname is defined before constructing URL",
    "files": [
      "src/react/utils/url.ts"
    ]
  },
  {
    "hash": "e4adf5aa8a6b7ac557e2d95a5d4f27cad649b1cc",
    "date": "2025-08-15T02:28:57+07:00",
    "message": "feat(env): split VITE_BACKEND_HOSTNAME into DEV and PROD variants\n\n- Updated `.env-sample` to replace `VITE_BACKEND_HOSTNAME` with `VITE_BACKEND_HOSTNAME_DEV` and `VITE_BACKEND_HOSTNAME_PROD` for clearer environment separation.\n- Modified `src/react/utils/url.ts` to select backend hostname based on dev or prod environment using `isViteDevServer`.\n- Updated type definitions in `types/vite-env.d.ts` to reflect new environment variables.",
    "files": [
      ".env-sample",
      "src/react/utils/url.ts",
      "types/vite-env.d.ts"
    ]
  },
  {
    "hash": "cfe2d9a2f9656a52ab93118cd7348a1444387c56",
    "date": "2025-08-15T01:24:00+07:00",
    "message": "fix(vite): remove git hash from asset filenames for consistent naming",
    "files": [
      "vite.config.js"
    ]
  },
  {
    "hash": "e220265b9a2112427f6bd7d457804ce996265531",
    "date": "2025-08-15T01:22:48+07:00",
    "message": "fix(vite): enhance asset file naming by grouping assets and ensuring proper directory structure",
    "files": [
      "vite.config.js"
    ]
  },
  {
    "hash": "8bef0253c9e8e6a8cfbe579e3f2df68113b79ec7",
    "date": "2025-08-15T00:59:54+07:00",
    "message": "build(vite): ensure unique and consistent hashed filenames for all assets\n\n- Update entry, chunk, and asset file naming patterns to include both the git commit hash and a content hash.\n- Output files now use the format: assets/<gitHash>/[name].[hash].js for JS and assets/<gitHash>/[name].[hash][extname] for other assets.\n- Prevents filename collisions and improves cache busting.",
    "files": [
      "vite.config.js"
    ]
  },
  {
    "hash": "3b7b4866974fc704781182f6e380d58e9241c324",
    "date": "2025-08-15T00:53:09+07:00",
    "message": "build(vite): use git commit hash in asset filenames and output structure\n\n- Add logic to retrieve the latest git commit hash at build time using child_process.\n- Update Vite/Rollup output config to include the git hash in JS, chunk, and asset filenames.\n- Change output directory structure to use `assets/` and `assets/chunks/` for JS, and `assets/<gitHash>/` for other assets.\n- Improves cache busting and traceability of build artifacts.",
    "files": [
      "vite.config.js"
    ]
  },
  {
    "hash": "6cf492c61e8613f66f3d1345c002640b79fab6b2",
    "date": "2025-08-14T16:32:10+07:00",
    "message": "fix(vite): Use Vite/Rollup default hashed filenames for cache busting",
    "files": [
      "vite.config.js"
    ]
  },
  {
    "hash": "fe95225a5cd58745b3644a29ac0a9d49d00efd19",
    "date": "2025-08-14T16:29:05+07:00",
    "message": "refactor(build): clean output directory before build and improve deploy asset handling\n\n- Clean the build output directory before starting the build process to ensure a fresh build.\n- Add existence check before removing old directories in the deploy step to prevent errors.\n- Improve asset copy log to show relative paths for better readability.\n- Handle build process errors with .catch for better error reporting.",
    "files": [
      "vite-gh-pages.js"
    ]
  },
  {
    "hash": "afda38b2237d7566bbc299eb6b88479bff1486a0",
    "date": "2025-08-14T16:21:17+07:00",
    "message": "refactor(vite-gh-pages): improve deploy asset handling and logging\n\n- Copy build output to .deploy_git before cleaning old directories.\n- Clean up old 'assets', 'php', and 'static' directories in .deploy_git with explicit logging.\n- Re-copy only the 'assets' directory from build output to .deploy_git after cleanup.\n- Add log messages for asset copy and directory removal actions.\n- Remove redundant route processing log in route copy loop.",
    "files": [
      "vite-gh-pages.js"
    ]
  },
  {
    "hash": "a94dc1a8a83db0f3c96758a267b3ba0f679f4386",
    "date": "2025-08-14T16:16:49+07:00",
    "message": "refactor(vite-gh-pages): streamline deploy logic and remove redundancy\n\n- Refactored ESM __dirname fix to concise comment.\n- Replaced promise chaining in buildForGithubPages with async/await and try/catch for clearer error handling.\n- Combined .deploy_git directory setup and update logic for clarity.\n- Unified asset and PHP cleanup into a single loop before copying build output.\n- Simplified cache busting logic: load HTML directly into Cheerio, declare relIndexHtml once, and use it for all logging.\n- Refactored route HTML copy logic: use deployGitPath for all routes, ensure directory, and handle errors with concise logging.\n- Removed redundant variable declarations and improved code readability.",
    "files": [
      "vite-gh-pages.js"
    ]
  },
  {
    "hash": "fe99a13eae6f464dd572cd6ac057e1e577e024d5",
    "date": "2025-08-14T15:46:13+07:00",
    "message": "chore(ci): fetch full git history in github-pages workflow\n\nSet fetch-depth: 0 for both repository and gh-pages branch checkout steps to ensure complete commit history is available during workflow execution.",
    "files": [
      ".github/workflows/github-pages.yml"
    ]
  },
  {
    "hash": "abc65db7eaa754f7d5d95d6e3d46287ce0f936a6",
    "date": "2025-08-14T15:44:35+07:00",
    "message": "refactor(utils): simplify createUrl logic and debug output\n\n- Removed isViteDevServer import and related logic from createUrl.\n- Now always uses VITE_BACKEND_HOSTNAME for PHP file URLs.\n- Reduced and clarified debug logging in createUrl for easier tracing.",
    "files": [
      "src/react/utils/url.ts"
    ]
  },
  {
    "hash": "ea709e460f835d193c698c52150c9abac0525d5f",
    "date": "2025-08-14T15:43:19+07:00",
    "message": "refactor(react): remove React.lazy and Suspense, use static imports for all pages\n\n- Replaced all React.lazy dynamic imports with direct static imports for page components.\n- Removed Suspense wrapper and fallback from the main app layout.\n- This change resolves hydration issues and DOMException errors caused by mismatched fallback nodes during SSR/CSR hydration.",
    "files": [
      "src/react/index.tsx"
    ]
  },
  {
    "hash": "5f2da1521cfccebfa04bed64dea6c02208a4e801",
    "date": "2025-08-14T15:42:06+07:00",
    "message": "fix(build): disable minification",
    "files": [
      "vite.config.js"
    ]
  },
  {
    "hash": "fa3ae92bb2932f48cb397f30e8ebcd663e296ede",
    "date": "2025-08-14T15:37:22+07:00",
    "message": "refactor(vite-plugin): comment out configureServer function for future use",
    "files": [
      "vite-plugin.js"
    ]
  },
  {
    "hash": "5a5dfa316e4b30c479dc71fd318c578a3caa5445",
    "date": "2025-08-14T15:36:11+07:00",
    "message": "feat(debugger): add remove-node-child-detector utility for DOM operation debugging",
    "files": [
      "src/react/debugger/remove-node-child-detector.js"
    ]
  },
  {
    "hash": "db2678413b6909377ce65491672465582cc484e1",
    "date": "2025-08-14T15:03:15+07:00",
    "message": "chore(package): sort scripts alphabetically and update typescript version\n\n- Reordered the scripts section in package.json for better readability and maintainability.\n- Changed typescript devDependency version from ^5.9.2 to ~5.8.0 for compatibility.",
    "files": [
      "package.json",
      "packages/baileys"
    ]
  },
  {
    "hash": "3505d55ea39440c08977aa893dc79f160c343e3b",
    "date": "2025-08-14T14:54:26+07:00",
    "message": "chore(pre-commit): improve php-cs-fixer config usage and add yarn support for lint-staged\n\n- Specify php-cs-fixer config file in pre-commit hook for consistent formatting.\n- Add conditional logic to use `yarn dlx lint-staged` if Yarn and .yarnrc.yml are present, otherwise fallback to npx.\n- Enhance compatibility for projects using Yarn 2+.",
    "files": []
  },
  {
    "hash": "b6d2d71d9e24501badc4b036bc5c4466b803419b",
    "date": "2025-08-14T14:51:47+07:00",
    "message": "fix(yarn): update .yarnrc.yml configuration for improved caching and workspace handling",
    "files": [
      ".yarnrc.yml"
    ]
  },
  {
    "hash": "badaa740931108b73b6aa64508892d117dab6a25",
    "date": "2025-08-14T08:33:58+07:00",
    "message": "feat(docs): add MySQL setup guide",
    "files": [
      "readme-mysql.md"
    ]
  },
  {
    "hash": "c7138721a5df268984d2edb329e62fbe568812e3",
    "date": "2025-08-14T07:56:23+07:00",
    "message": "refactor(react): move routing and layout to index.tsx\n\n- Removed App.tsx and integrated its routing logic directly into index.tsx\n- Added global Navbar and Footer rendering in index.tsx to wrap all pages\n- Removed individual Navbar and Footer imports/usages from page components",
    "files": [
      "src/react/App.tsx",
      "src/react/index.tsx",
      "src/react/pages/About.tsx",
      "src/react/pages/Changelog.tsx",
      "src/react/pages/Contact.tsx",
      "src/react/pages/Dashboard.tsx",
      "src/react/pages/Home.tsx",
      "src/react/pages/Login.tsx",
      "src/react/pages/OauthHandler.tsx",
      "src/react/pages/Outbound.tsx",
      "src/react/pages/Settings.tsx"
    ]
  },
  {
    "hash": "c4e68e8fad3fc63d8254806d48ae81d73997d747",
    "date": "2025-08-14T07:27:11+07:00",
    "message": "feat(react): update router usage and add Backspace navigation handler\n\n- Replaced `Router` with `BrowserRouter` in `App.tsx` for clarity and consistency with React Router v6+.\n- Added a Backspace key navigation handler in `index.tsx` to allow users to navigate back in history when not focused on input fields, textareas, or contenteditable elements.\n- Switched from rendering `<App />` inside `<React.StrictMode>` to direct rendering for improved flexibility.",
    "files": [
      "src/react/App.tsx",
      "src/react/index.tsx"
    ]
  },
  {
    "hash": "c736bc18fe05d9ee5f46ada639ee824d57166526",
    "date": "2025-08-14T07:10:08+07:00",
    "message": "fix(package.json): update SHA updater command to use binary-collections pkg-res-updater",
    "files": [
      "package-resolution-updater.mjs",
      "package.json"
    ]
  },
  {
    "hash": "f0adf0147ea1e1b42527fca7fe314056d12cdd38",
    "date": "2025-08-14T06:14:02+07:00",
    "message": "fix(lint): specify config file for PHP CS Fixer in lint-staged configuration",
    "files": [
      ".lintstagedrc.json"
    ]
  },
  {
    "hash": "9c42bcef0969b2d34f1f24738c4940012dfb3dae",
    "date": "2025-08-14T05:13:11+07:00",
    "message": "feat(package.json): add dev script for gh-pages build and preview",
    "files": [
      "package.json"
    ]
  },
  {
    "hash": "6dad28603398b529fe5902d5f32025475d19a61e",
    "date": "2025-08-14T05:01:31+07:00",
    "message": "feat(build): add GitHub Pages config and preview support for Vite\n\n- Added `vite-gh-pages.config.js` to provide a Vite config with the correct base path for GitHub Pages deployments.\n- Updated `vite-gh-pages.js` to use the new config and removed inline config merging.\n- Modified `vite.config.js` to export both a named config (`viteConfig`) and a default function for Vite param detection.\n- Updated npm scripts in `package.json`:\n  - Changed `build:gh-pages` to run only the deploy script.\n  - Added `preview:gh-pages` for previewing the GitHub Pages build locally with the correct config.",
    "files": [
      "package.json",
      "vite-gh-pages.config.js",
      "vite-gh-pages.js",
      "vite.config.js"
    ]
  },
  {
    "hash": "4c9ce305d20d3b89357e5ebdf3b0a4625e78bff0",
    "date": "2025-08-14T04:42:19+07:00",
    "message": "fix(workflow): update cleanup script path to use artisan cleaner",
    "files": [
      ".github/workflows/checker-php.yml"
    ]
  },
  {
    "hash": "09429d235a4bc13b6f431855e1d3abdc6182540e",
    "date": "2025-08-13T22:23:25+07:00",
    "message": "refactor(build): move cache busting and route HTML generation from vite-plugin.js to vite-gh-pages.js\n\n- Moved cache busting logic and copying of index.html to route-specific HTML files from the Vite plugin (vite-plugin.js) to the deployment script (vite-gh-pages.js).\n- Simplified vite-plugin.js by removing unnecessary dependencies and the closeBundle hook.\n- Ensured cache busting and route HTML generation now occur only during deployment, improving build clarity and separation of concerns.",
    "files": [
      "vite-gh-pages.js",
      "vite-plugin.js"
    ]
  },
  {
    "hash": "1dec1aa7722ffec956697145086d1b182a895206",
    "date": "2025-08-13T22:22:43+07:00",
    "message": "feat(package.json): add preview and gh-pages build scripts for React",
    "files": [
      "package.json"
    ]
  },
  {
    "hash": "7cb565d87d08ed3fa685fed47e0a6965396790c0",
    "date": "2025-08-13T22:14:04+07:00",
    "message": "chore(github-pages): add cache paths for node_modules, tmp, and dist directories",
    "files": [
      ".github/workflows/github-pages.yml"
    ]
  },
  {
    "hash": "6aeb16ab43389f09b203d52cfa774e782f976461",
    "date": "2025-08-13T22:11:05+07:00",
    "message": "chore(vite.config.js): remove unused code and clean up configuration",
    "files": [
      "vite.config.js"
    ]
  },
  {
    "hash": "03bfbb0813c45d4e20490dad4baf9cb1d72309ca",
    "date": "2025-08-13T22:05:16+07:00",
    "message": "feat(react): sync createUrl with vite base url and improve changelog fetch\n\n- Updated `createUrl` in `src/react/utils/url.ts` to prepend the Vite base URL for non-PHP routes, handle edge cases, and add debug logs.\n- Refactored `Changelog.tsx` to use `createUrl` for fetching git history, ensuring correct path resolution with Vite base.\n- Added `.deploy_git/` to `.gitignore` to exclude deployment artifacts.\n- Updated `vite.config.js` to allow testing with a custom base path (commented example).",
    "files": [
      ".gitignore",
      "src/react/pages/Changelog.tsx",
      "src/react/utils/url.ts",
      "vite.config.js"
    ]
  },
  {
    "hash": "bbedb106bef32b13704ab878b7abbc34edd4375c",
    "date": "2025-08-13T20:51:40+07:00",
    "message": "feat(workflow): add concurrency settings to clean GitHub Actions cache",
    "files": [
      ".github/workflows/clean-caches.yml"
    ]
  },
  {
    "hash": "c43817ef9231fb9053051d29103e3c4d04c9ae5f",
    "date": "2025-08-13T20:49:26+07:00",
    "message": "feat(vite-plugin): add git history builder execution in index HTML replacement plugin",
    "files": [
      "vite-plugin.js"
    ]
  },
  {
    "hash": "232255353e788b65af8d53a679e6715c3f95da68",
    "date": "2025-08-13T20:45:52+07:00",
    "message": "refactor(ci): streamline GitHub Pages deployment and improve build script\n\n- Move gh-pages branch checkout before Node.js setup in workflow for better sequence.\n- Remove redundant checkout and manual copy steps; rely on updated build script for deployment.\n- Enhance `vite-gh-pages.js` with JSDoc comments and ESM compatibility.\n- Automate deployment: clone repo if needed, clean assets, copy build output, and remove PHP files.",
    "files": [
      ".github/workflows/github-pages.yml",
      "vite-gh-pages.js"
    ]
  },
  {
    "hash": "688720f0f803c9d469d98355a0eb07d843284809",
    "date": "2025-08-13T20:31:02+07:00",
    "message": "feat(vite-gh-pages): add .no_jekyll file creation to prevent Jekyll processing",
    "files": [
      "vite-gh-pages.js"
    ]
  },
  {
    "hash": "805937a11c7c17e4d50250bfce7086463098eee0",
    "date": "2025-08-13T20:29:29+07:00",
    "message": "refactor(html): replace node-html-parser with cheerio for HTML processing\n\n- Removed node-html-parser dependency from package.json.\n- Switched HTML parsing and serialization in vite-plugin.js to use cheerio.\n- Improved cache-busting logic for script and link tags to ensure version query is reliably added.\n- Updated code to use cheerio's API for DOM manipulation and serialization.",
    "files": [
      "package.json",
      "vite-plugin.js"
    ]
  },
  {
    "hash": "a52ef32124e132f116ec99bc9d6627e765116ddd",
    "date": "2025-08-13T20:18:52+07:00",
    "message": "feat(vite-plugin): add version query to script and link tags in index.html\n\n- Added `node-html-parser` as a dependency.\n- Modified the Vite plugin to parse `index.html` and append a `version` query parameter (using the latest git commit hash) to all script and link tags.\n- Ensures cache busting for static assets after each build.",
    "files": [
      "package.json",
      "vite-plugin.js"
    ]
  },
  {
    "hash": "a1cf996d03f5a8b7d9b9d76e233c38f915ef7c57",
    "date": "2025-08-13T20:18:20+07:00",
    "message": "feat(routes): add metadata for routes including titles, descriptions, thumbnails, and canonical URLs",
    "files": [
      "src/react/routes.json"
    ]
  },
  {
    "hash": "07d84dc838fe23d8c4934c0fc5891b618b14d774",
    "date": "2025-08-13T20:08:33+07:00",
    "message": "refactor(react): rename GitHistory to Changelog\n\n- Renamed `GitHistory` component and file to `Changelog` for clarity and consistency.\n- Updated all imports and route references from `GitHistory` to `Changelog`.\n- Updated `routes.json` to reflect the new component name and added missing route entries for consistency.",
    "files": [
      "src/react/App.tsx",
      "src/react/pages/Changelog.tsx",
      "src/react/routes.json"
    ]
  },
  {
    "hash": "63804a6c5d3de049af8dde93dadbc4fb9e0b4f70",
    "date": "2025-08-13T20:01:49+07:00",
    "message": "fix(App): set basename for Router to use environment variable",
    "files": [
      "src/react/App.tsx"
    ]
  },
  {
    "hash": "75f917c6f134be41abc6f3af276d85fbf5161b68",
    "date": "2025-08-13T19:58:48+07:00",
    "message": "feat(vite-plugin): run closeBundle logic only during build\n\n- Capture Vite command in configResolved and store in a variable.\n- Update closeBundle to skip execution unless running in build mode.\n- Prevents route HTML copying during dev server, ensuring correct behavior for production builds only.",
    "files": [
      "vite-plugin.js"
    ]
  },
  {
    "hash": "76aa4ecaaf3b438dd40f188ae37c231cf9a4b238",
    "date": "2025-08-13T19:54:06+07:00",
    "message": "fix(plugin): add check for existence of index.html before copying in closeBundle",
    "files": [
      "vite-plugin.js"
    ]
  },
  {
    "hash": "42520c56a4ce2ee0d481f978ef0844cdccb66f06",
    "date": "2025-08-13T19:53:17+07:00",
    "message": "refactor(plugin): simplify configResolved by removing middlewareMode logic\n\n- Removed unnecessary middlewareMode enabling from configResolved in indexHtmlReplacementPlugin.\n- The plugin now only handles copying index.dev.html to index.html for development mode.",
    "files": [
      "vite-plugin.js"
    ]
  },
  {
    "hash": "0ae6d67a081a889674d20a5988b4aa1ac2d09afc",
    "date": "2025-08-13T19:50:24+07:00",
    "message": "refactor(plugin): move index.dev.html to index.html copy logic to configResolved for dev mode\n\n- Moved the logic that copies index.dev.html to index.html from configureServer to configResolved in the indexHtmlReplacementPlugin.\n- Ensures index.html is always up-to-date with index.dev.html during development.\n- Added middlewareMode enabling for dev server when running in serve mode.\n- Prevents unnecessary file operations during production build.",
    "files": [
      "vite-plugin.js"
    ]
  },
  {
    "hash": "a520b9a8d9cbba712f579c3c60db04e46bb06c49",
    "date": "2025-08-13T19:47:16+07:00",
    "message": "refactor(build): use dist/react/index.html as the source for route HTML copies and remove index.dev.html from production build process\n\n- Updated the Vite plugin to copy dist/react/index.html instead of dist/react/index.dev.html to specific routes after build.\n- Removed unnecessary copying of index.dev.html to index.html in production.\n- Cleaned up rollupOptions in vite.config.js by removing the custom input for index.dev.html.",
    "files": [
      "vite-plugin.js",
      "vite.config.js"
    ]
  },
  {
    "hash": "e7685f4a1c6fa1de303823fe711bee148c330186",
    "date": "2025-08-13T19:22:34+07:00",
    "message": "chore: update Vite config references in scripts and tasks\n\n- Change Vite commands in `dev:react` and `build:react` scripts to use default config instead of `vite.config.ts`\n- Update `.vscode/tasks.json` to match new Vite command usage",
    "files": [
      ".vscode/tasks.json",
      "package.json"
    ]
  },
  {
    "hash": "ea1ac8df3545ef8b6b801b2b580bfba262433009",
    "date": "2025-08-13T19:20:18+07:00",
    "message": "feat: update GitHub Pages workflow and Vite config for deployment\n\n- Replace `yarn build:react` with `node vite-gh-pages.js` in GitHub Actions workflow\n- Add `vite-gh-pages.js` script to customize Vite build for GitHub Pages with correct base path\n- Rename `vite.config.ts` to `vite.config.js` for compatibility with the new build script",
    "files": [
      ".github/workflows/github-pages.yml",
      "vite-gh-pages.js",
      "vite.config.js"
    ]
  },
  {
    "hash": "2d4ea573840b398110383b22d0badeabd5c18b4c",
    "date": "2025-08-13T18:46:27+07:00",
    "message": "fix(ci): add concurrency settings for GitHub Actions workflow",
    "files": [
      ".github/workflows/github-pages.yml"
    ]
  },
  {
    "hash": "a240d2d5c78678efee41fab13431c9aaf3155476",
    "date": "2025-08-13T18:44:13+07:00",
    "message": "fix(ci): include additional paths for build triggers in GitHub Actions",
    "files": [
      ".github/workflows/github-pages.yml"
    ]
  },
  {
    "hash": "93123b4f3e082d144f4e73267eff7ac0d645c916",
    "date": "2025-08-13T17:47:19+07:00",
    "message": "refactor(vite-plugin): use upath for path operations and improve HTML copying logic\n\n- Switch to using `upath` for consistent path handling across platforms.\n- Refactor Tailwind CSS build to use absolute paths via `process.cwd()` and `upath.join`.\n- Refactor dev server and build hooks to use absolute paths for HTML copying.\n- Add support for copying `index.dev.html` to multiple route-specific HTML files after build.\n- Log file copy operations using relative paths for clearer, shorter output.\n- Import routes from JSON for dynamic route handling in build step.",
    "files": [
      "vite-plugin.js"
    ]
  },
  {
    "hash": "920433c4617cb82f5ee18e766d83be712790b906",
    "date": "2025-08-13T17:32:04+07:00",
    "message": "fix(ci): simplify commit message format for gh-pages deployment",
    "files": [
      ".github/workflows/github-pages.yml"
    ]
  },
  {
    "hash": "d98863e825b82ee4f2de9b3968a016aedb897aaf",
    "date": "2025-08-13T17:31:10+07:00",
    "message": "fix(ci): remove non-github pages asset",
    "files": [
      ".github/workflows/github-pages.yml"
    ]
  },
  {
    "hash": "9851e86d068a31f0d1bd0683fd9b7b93e035cda0",
    "date": "2025-08-13T17:30:09+07:00",
    "message": "feat(ci): add step build project",
    "files": [
      ".github/workflows/github-pages.yml"
    ]
  },
  {
    "hash": "1af9794fe99ea906256936b04fff48c959b363b5",
    "date": "2025-08-13T17:26:17+07:00",
    "message": "chore(ci): add write permission for contents in github-pages workflow\n\n- Add `permissions: contents: write` to enable branch push in workflow",
    "files": [
      ".github/workflows/github-pages.yml"
    ]
  },
  {
    "hash": "b05b9dc4fe5ec6906a65b244cd1697cd99a114da",
    "date": "2025-08-13T17:23:47+07:00",
    "message": "fix(ci): update GitHub Actions workflow for deploying to gh-pages",
    "files": [
      ".github/workflows/github-pages.yml"
    ]
  },
  {
    "hash": "ca5dcd7de76b8ca99484309a088fa4a589ad50fa",
    "date": "2025-08-13T17:21:42+07:00",
    "message": "chore(gitignore): move public ignore rules to root .gitignore and remove public/.gitignore\n\n- Add /public/php and /public/data/git-history* to root .gitignore\n- Remove redundant public/.gitignore file",
    "files": [
      ".gitignore",
      "public/.gitignore"
    ]
  },
  {
    "hash": "6f7c13a95f255f9f8f40e0a7bc4d3edc28bdba52",
    "date": "2025-08-13T17:19:08+07:00",
    "message": "fix(ci): fallback to GITHUB_TOKEN if ACCESS_TOKEN is not set in workflows\n\n- Update all workflow files to use `${{ secrets.ACCESS_TOKEN || secrets.GITHUB_TOKEN }}`\n- Ensures CI/CD does not fail if ACCESS_TOKEN is missing by falling back to GITHUB_TOKEN",
    "files": [
      ".github/workflows/checker-php.yml",
      ".github/workflows/checker-php.yml.txt",
      ".github/workflows/checker-python.yml",
      ".github/workflows/checker.yml.txt",
      ".github/workflows/clean-caches.yml",
      ".github/workflows/clean.yml",
      ".github/workflows/github-pages.yml",
      ".github/workflows/main.yml.txt",
      ".github/workflows/nuitka-debug.yml.txt",
      ".github/workflows/nuitka.yml.txt"
    ]
  },
  {
    "hash": "f2ac4b33c4cc19a0f2bc4617ed929e8a70c27e86",
    "date": "2025-08-13T17:18:00+07:00",
    "message": "fix(ci): use ACCESS_TOKEN secret for pushing to gh-pages branch in GitHub Actions\n\n- Add ACCESS_TOKEN environment variable to deployment step\n- Update git push command to use personal access token for authentication",
    "files": [
      ".github/workflows/github-pages.yml"
    ]
  },
  {
    "hash": "a24d71605db18800f01b179c8f6845c4376b15f2",
    "date": "2025-08-13T17:16:18+07:00",
    "message": "fix(ci): update cache key format for Node.js dependencies in GitHub Actions workflow",
    "files": [
      ".github/workflows/github-pages.yml"
    ]
  },
  {
    "hash": "127085de487b5baaafabd4b86a0715ae50f8cb7f",
    "date": "2025-08-13T17:15:35+07:00",
    "message": "fix(ci): specify bash shell for PHP dependencies install step in workflow\n\nExplicitly sets the shell to bash for the Install PHP dependencies step to ensure consistent script execution across environments.",
    "files": [
      ".github/workflows/checker-php.yml"
    ]
  },
  {
    "hash": "6c6b48ee6dfc08a6280bc596e18fdcd0ce8e686a",
    "date": "2025-08-13T17:12:44+07:00",
    "message": "fix(ci): update GitHub Pages workflow trigger to use path-based push and add workflow_dispatch\n\n- Changed push trigger to run only on changes in specific src and workflow files instead of all pushes to main.\n- Added workflow_dispatch for manual workflow runs.",
    "files": [
      ".github/workflows/github-pages.yml"
    ]
  },
  {
    "hash": "95be9a867bc00395ecccc634725796c33d6607a7",
    "date": "2025-08-13T17:10:16+07:00",
    "message": "fix(ci): remove --no-suggest flag from composer install in PHP workflow\n\nThe workflow step for installing PHP dependencies no longer uses the --no-suggest flag with composer install, ensuring compatibility with newer Composer versions and simplifying the install command.",
    "files": [
      ".github/workflows/checker-php.yml"
    ]
  },
  {
    "hash": "32c914ae5ac17a976615e096cee64ce41cbbceec",
    "date": "2025-08-13T17:09:15+07:00",
    "message": "fix(ci): enhance composer install logic to handle missing vendor directory",
    "files": [
      ".github/workflows/checker-php.yml"
    ]
  },
  {
    "hash": "9f471bc671b21f411831cc202c841f02cd734cc6",
    "date": "2025-08-13T17:07:36+07:00",
    "message": "fix(ci): only run composer install if composer.lock is missing in PHP workflow\n\nThis change updates the GitHub Actions workflow to run `composer install` only when `composer.lock` does not exist, preventing unnecessary reinstalls and improving build efficiency.",
    "files": [
      ".github/workflows/checker-php.yml"
    ]
  },
  {
    "hash": "a423433fc906c5fc0da6d7374735832419d8b686",
    "date": "2025-08-13T17:02:45+07:00",
    "message": "feat(github-pages): add GitHub Actions workflow for deploying to GitHub Pages",
    "files": [
      ".github/workflows/github-pages.yml"
    ]
  },
  {
    "hash": "6426eceb3ca8ee634981616ca8779e56c3bf0aa1",
    "date": "2025-08-13T16:47:39+07:00",
    "message": "chore(git): rename git-history.ts to git-history.builder.ts and update post-commit hook\n\n- Renamed `src/dev/git-history.ts` to `src/dev/git-history.builder.ts` for clarity.\n- Updated `.husky/post-commit` to run the builder script after each commit.",
    "files": [
      "src/dev/git-history.builder.ts"
    ]
  },
  {
    "hash": "3697e5fbf47a9d24f2b98198f01f216bd9146ea1",
    "date": "2025-08-13T16:44:55+07:00",
    "message": "refactor(react): implement React.lazy for route components and add Font Awesome spinner to Suspense fallback\n\n- Replaced static imports of page components with React.lazy for code splitting and improved performance.\n- Updated Suspense fallback to use a Font Awesome spinner with Tailwind classes for a consistent loading indicator.",
    "files": [
      "src/react/App.tsx"
    ]
  },
  {
    "hash": "63ee7de2db2b32f7c6a23f2076f8332312983b41",
    "date": "2025-08-13T16:34:29+07:00",
    "message": "feat(git-history): improve initial load speed with localStorage cache and loading state\n\n- Cache the first 30 git history items in localStorage for instant initial render.\n- Show a loading spinner while fetching the full git history, but keep displaying cached content until new data arrives.\n- Update the cache with the latest first 30 items after fetch.\n- Add loading state management and error handling for cache and fetch operations.",
    "files": [
      "src/react/pages/GitHistory.tsx"
    ]
  },
  {
    "hash": "2a86a843015e3b8d9ccab4efb556f62db1c35b54",
    "date": "2025-08-13T16:25:04+07:00",
    "message": "fix: enable polling in Vite config for improved file watching reliability",
    "files": [
      "vite.config.ts"
    ]
  },
  {
    "hash": "4976a08b5ee6e3bc641e0f112d486f775673d097",
    "date": "2025-08-13T16:23:50+07:00",
    "message": "fix: update tsconfig.json for improved type checking and module resolution",
    "files": [
      "tsconfig.json"
    ]
  },
  {
    "hash": "787c62434e3e35b4aa0a6aabb1ab908761d555b1",
    "date": "2025-08-13T16:22:20+07:00",
    "message": "feat: add changelog page with git commit history and update history retrieval\n\n- Renamed `getGitHistory` to `gitHistoryToJson` and added commit date to output\n- Updated `git log` command to include ISO 8601 commit date\n- Modified type definitions and parsing logic to store `date` field\n- Added `GitHistory` React page to display commits with pagination\n- Integrated changelog route (`/changelog`) into App routing\n- Linked changelog page from Home with new styled button",
    "files": [
      "src/dev/git-history-to-json.ts",
      "src/dev/git-history.ts",
      "src/react/App.tsx",
      "src/react/pages/GitHistory.tsx",
      "src/react/pages/Home.tsx"
    ]
  },
  {
    "hash": "ad0e21724b7eac13370941aaa61b5ee2e0f8fac3",
    "date": "2025-08-13T16:06:33+07:00",
    "message": "fix: update Tailwind CSS content paths for improved matching and enable polling in Vite config for reliability",
    "files": [
      "tailwind.config.js",
      "vite.config.ts"
    ]
  },
  {
    "hash": "044fbeb8c5cb29bdcfeb2e28df4c5c4d8667654b",
    "date": "2025-08-13T15:35:21+07:00",
    "message": "feat(dev): add options and tests for git history extraction\n\n- Add `GitHistoryOptions` interface with `since`, `until`, and `last` parameters for filtering git history.\n- Enhance `getGitHistory` to support date range and last N commits via options.\n- Add comprehensive TSDoc for both the function and options interface.\n- Create Jest test suite in `tests/dev/git-history.test.ts` to verify correct output, filtering, and file exclusion.",
    "files": [
      "src/dev/git-history-to-json.ts",
      "tests/dev/git-history.test.ts"
    ]
  },
  {
    "hash": "b22d4579ecd654eff426b4cfec5ef6dcd49b0fcc",
    "date": "2025-08-13T15:31:48+07:00",
    "message": "fix: update tsconfig path for Jest configuration and include test files in compilation",
    "files": [
      ".vscode/settings.json",
      "jest.config.ts",
      "tsconfig.json"
    ]
  },
  {
    "hash": "489a7c434e00b718eabd48a37f7447c6136bde5d",
    "date": "2025-08-13T15:23:57+07:00",
    "message": "feat: implement git history retrieval and output to JSON file",
    "files": [
      "public/.gitignore",
      "src/dev/git-history-to-json.ts",
      "src/dev/git-history.ts"
    ]
  },
  {
    "hash": "3345d7ec7ce913cc8a0a56b221b48048e41187f6",
    "date": "2025-08-13T15:10:38+07:00",
    "message": "feat: add squizlabs/php_codesniffer as a development dependency",
    "files": [
      "composer.json",
      "index.dev.html"
    ]
  },
  {
    "hash": "146575d0e20cfe9ce9f80bbb603c41cda4a01f0d",
    "date": "2025-08-13T15:10:07+07:00",
    "message": "feat: implement Dashboard page with saldo display and transaction history placeholder",
    "files": [
      "src/react/pages/Dashboard.tsx"
    ]
  },
  {
    "hash": "2628c365feb37acfd94c89d795cbb02edd552824",
    "date": "2025-08-13T15:08:35+07:00",
    "message": "feat: add PHP code style fixing to lint-staged configuration",
    "files": [
      ".lintstagedrc.json"
    ]
  },
  {
    "hash": "ec54b9c79b4f43709cd60ce2baf2070a8a7fa613",
    "date": "2025-08-13T15:08:13+07:00",
    "message": "feat: enhance user profile update functionality and improve CORS handling",
    "files": [
      "php_backend/user-info.php"
    ]
  },
  {
    "hash": "d9f865902cb698b04f7d43087fcab85107972ab6",
    "date": "2025-08-13T14:58:31+07:00",
    "message": "feat: implement user profile management in Settings page",
    "files": [
      "php_backend/user-info.php",
      "src/react/pages/Settings.tsx"
    ]
  },
  {
    "hash": "38e86477250392fe19433e99676fa262e4749e7a",
    "date": "2025-08-13T14:29:05+07:00",
    "message": "feat: add About and Contact links to Navbar component",
    "files": [
      "src/react/components/Navbar.tsx"
    ]
  },
  {
    "hash": "fb7552c117dd84db7cfac90d9c74ff48dd34f157",
    "date": "2025-08-13T14:27:03+07:00",
    "message": "feat: add Navbar and Footer components to Outbound page layout",
    "files": [
      "src/react/pages/Outbound.tsx"
    ]
  },
  {
    "hash": "2bff5c41c2977cc9164557e1b54e5c411e81234b",
    "date": "2025-08-13T14:26:46+07:00",
    "message": "feat: update body background color in index.dev.html and add disabled class styles in tailwind.input.css",
    "files": [
      "index.dev.html",
      "tailwind.input.css"
    ]
  },
  {
    "hash": "279529f4ace3ab662a113a87a3bc078f7a38f0d2",
    "date": "2025-08-13T14:26:28+07:00",
    "message": "feat: add Vite configuration for hostname and port in .env-sample",
    "files": [
      ".env-sample",
      "types/vite-env.d.ts"
    ]
  },
  {
    "hash": "c584fc2a7899b32b0342f826ff7f9bace4e0d0bc",
    "date": "2025-08-13T14:25:09+07:00",
    "message": "feat: add Contact page and update routing for contact route",
    "files": [
      "src/react/App.tsx",
      "src/react/pages/Contact.tsx",
      "vite-plugin.js"
    ]
  },
  {
    "hash": "c64d1ba34662a94fa82a2a10d1a966c4a6b7350d",
    "date": "2025-08-13T14:23:09+07:00",
    "message": "feat: enhance About page with detailed information and navigation components",
    "files": [
      "src/react/pages/About.tsx"
    ]
  },
  {
    "hash": "27c384bf498d92a4cb67a1d1a6b800fe384a95cf",
    "date": "2025-08-13T14:22:04+07:00",
    "message": "feat: comment out console log in ThemeSwitcher button click handler",
    "files": [
      "src/react/components/ThemeSwitcher.tsx"
    ]
  },
  {
    "hash": "7e3dc87f7428af5ecbbf97626125b45ad0540819",
    "date": "2025-08-13T14:12:04+07:00",
    "message": "feat: expand devRoutes in indexHtmlReplacementPlugin for additional routes",
    "files": [
      "vite-plugin.js"
    ]
  },
  {
    "hash": "895d8e10bbf9491de6c4bbd2a4d7b62480e27866",
    "date": "2025-08-13T14:10:45+07:00",
    "message": "feat: add Login and OauthHandler components for user authentication",
    "files": [
      "src/react/App.tsx",
      "src/react/components/Link.tsx",
      "src/react/components/Navbar.tsx",
      "src/react/components/ThemeSwitcher.tsx",
      "src/react/pages/Login.tsx",
      "src/react/pages/OauthHandler.tsx",
      "src/react/routes.json",
      "src/react/utils/index.ts",
      "src/react/utils/url.ts",
      "src/react/utils/user.ts"
    ]
  },
  {
    "hash": "fccdbb5a55cf98647eb977d400641debe991be15",
    "date": "2025-08-12T05:46:50+07:00",
    "message": "feat: update user role fields to use integer values and add normalization method",
    "files": [
      "src/PhpProxyHunter/UserDB.php"
    ]
  },
  {
    "hash": "6024950d9c49ef62b7322a20003858566bc99546",
    "date": "2025-08-12T05:35:06+07:00",
    "message": "feat: change user role fields from BOOL to INTEGER for better compatibility",
    "files": [
      "src/PhpProxyHunter/assets/sqlite-schema.sql"
    ]
  },
  {
    "hash": "bf530207176b55c53a2a5cb7c85c682fb788d092",
    "date": "2025-08-12T05:32:08+07:00",
    "message": "feat: add resetIncrement method to reset AUTO_INCREMENT value for specified table",
    "files": [
      "src/PhpProxyHunter/MySQLHelper.php"
    ]
  },
  {
    "hash": "4f79e98350e25e4cb6162f29e8afbc2c74698541",
    "date": "2025-08-12T05:29:05+07:00",
    "message": "feat: update user role assignment to use integer values for is_staff",
    "files": [
      "php_backend/google-oauth.php"
    ]
  },
  {
    "hash": "e0287f6675adb4551850c19cb9429ff6c6e7ca2f",
    "date": "2025-08-12T05:21:47+07:00",
    "message": "feat: update UserDB instantiation to use mysql",
    "files": [
      "php_backend/google-oauth.php",
      "php_backend/list-user.php",
      "php_backend/login.php",
      "php_backend/refill-saldo.php",
      "php_backend/user-info.php"
    ]
  },
  {
    "hash": "508b7fd6c72d941d3ed208f763618297d5f43e84",
    "date": "2025-08-12T03:12:01+07:00",
    "message": "feat(vite): add env-based host/port config and improve type support\n\n- Add `VITE_HOSTNAME` and `VITE_PORT` to `.env-sample` for environment-based configuration.\n- Update `vite.config.ts` to use `process.env.VITE_HOSTNAME` and `process.env.VITE_PORT` with fallback defaults.\n- Import `dotenv/config` in `vite.config.ts` to load environment variables.\n- Extend `types/vite-env.d.ts` to type `VITE_HOSTNAME` and `VITE_PORT` in `ImportMetaEnv`.\n- Include `./types/**/*.d.ts` in `tsconfig.json` `include` array for better type coverage.",
    "files": [
      ".env-sample",
      "tsconfig.json",
      "types/vite-env.d.ts",
      "vite.config.ts"
    ]
  },
  {
    "hash": "a20c3131a6681b26f3a0601083c81282ae0c6ed4",
    "date": "2025-08-12T02:43:42+07:00",
    "message": "feat: customizable redirect URI",
    "files": [
      "php_backend/google-oauth.php"
    ]
  },
  {
    "hash": "61eb001a371bac8566e5a2d13853f902b603d950",
    "date": "2025-08-12T02:37:54+07:00",
    "message": "feat: replace anchor tags with Link component for improved routing",
    "files": [
      "src/react/pages/Home.tsx"
    ]
  },
  {
    "hash": "d7f5ce918ae5f17341bb946770bfc48f57b16e78",
    "date": "2025-08-12T02:37:39+07:00",
    "message": "feat: refactor Safelink instance to a shared export for improved reusability",
    "files": [
      "src/react/components/Link.tsx"
    ]
  },
  {
    "hash": "0cb9c8a30dcb4789506bd3894aa76d8ff9b22fdd",
    "date": "2025-08-12T02:37:21+07:00",
    "message": "feat: add Outbound redirect page for handling external links",
    "files": [
      "src/react/pages/Outbound.tsx"
    ]
  },
  {
    "hash": "6e6f2ea22e14fcfa4825d49fc4ba4496ee71997f",
    "date": "2025-08-12T02:28:02+07:00",
    "message": "feat(vite-plugin): add JSDoc comments and enhance dev server index.html handling\n\n- Add comprehensive JSDoc comments to all plugin functions for better documentation and type safety.\n- Import `fs-extra` and use it to copy `index.dev.html` to `index.html` during development.\n- Update the dev server middleware to serve `index.dev.html` for additional routes (`/`, `/index.html`, `/outbound`, `/login`) to improve local development experience.",
    "files": [
      "vite-plugin.js"
    ]
  },
  {
    "hash": "ca53146f291eeb6522ea50fa6b23c420a6f40b9c",
    "date": "2025-08-12T02:27:12+07:00",
    "message": "feat: ignore auto generated index.html",
    "files": [
      ".gitignore"
    ]
  },
  {
    "hash": "ac42d87ed64600f7b5c7d7828f937fadbb57499b",
    "date": "2025-08-12T02:16:56+07:00",
    "message": "feat: add Safelink Converter component for anonymizing external links",
    "files": [
      "package.json",
      "src/react/components/Link.tsx",
      "src/react/components/Navbar.tsx"
    ]
  },
  {
    "hash": "146a7c58eacddf8a55dbd7c74c2d913479e7952e",
    "date": "2025-08-12T01:36:26+07:00",
    "message": "chore: prepare migrate frontend using react",
    "files": [
      ".gitignore",
      ".vscode/settings.json",
      "index.dev.html",
      "index.php",
      "package.json",
      "postcss.config.js",
      "public/index.html",
      "src/react/App.tsx",
      "src/react/components/Footer.tsx",
      "src/react/components/Navbar.tsx",
      "src/react/components/ThemeContext.tsx",
      "src/react/components/ThemeSwitcher.tsx",
      "src/react/index.tsx",
      "src/react/pages/About.tsx",
      "src/react/pages/Contact.tsx",
      "src/react/pages/Home.tsx",
      "tailwind.config.js",
      "tailwind.input.css",
      "tsconfig.json",
      "types/vite-env.d.ts",
      "vite-plugin.js",
      "vite.config.ts"
    ]
  },
  {
    "hash": "ccb84439535a85f9e14433529580c61598afaf2d",
    "date": "2025-08-11T17:33:19+07:00",
    "message": "refactor: remove commented-out runDevelopment task from tasks.json",
    "files": [
      ".vscode/tasks.json"
    ]
  },
  {
    "hash": "0b95df7d09cd215ad926953551d855b12d6a3907",
    "date": "2025-08-11T17:33:04+07:00",
    "message": "fix: remove redundant backup instructions from project guidelines",
    "files": [
      ".github/instructions/all.instructions.md"
    ]
  },
  {
    "hash": "8d43e1a9c1432b6112881a6a3af10088140316b3",
    "date": "2025-08-11T17:06:48+07:00",
    "message": "feat: add ESLint configuration with TypeScript and Prettier integration",
    "files": [
      "eslint.config.js"
    ]
  },
  {
    "hash": "a4897c482bea1878722b378b7def7625731c9126",
    "date": "2025-08-11T16:53:46+07:00",
    "message": "feat: enhance MySQLHelper to create database if it doesn't exist on connection",
    "files": [
      "src/PhpProxyHunter/MySQLHelper.php"
    ]
  },
  {
    "hash": "5cb1a8c7a70580b1c868ceff239d27c37308149c",
    "date": "2025-08-11T15:37:03+07:00",
    "message": "fix: handle missing saldo records gracefully in UserDB\n\n- Ensure saldo defaults to 0 when creating a new user_fields entry.\n- Prevent undefined index errors by checking for existing saldo rows before accessing.\n- Update return values in update_saldo() and get_saldo() to provide safe defaults.",
    "files": [
      "src/PhpProxyHunter/UserDB.php"
    ]
  },
  {
    "hash": "7291d59de8792da56efbbc51d5a03795cbddf9ce",
    "date": "2025-08-11T15:36:35+07:00",
    "message": "test: enhance UserDBSaldoArithmeticTest with MySQL database lifecycle management\n\n- Added createTestDatabase() to ensure the MySQL test database exists before running tests.\n- Added dropTestDatabase() to remove the MySQL test database after tests.\n- Integrated database creation at the start and cleanup at the end of MySQL saldo arithmetic tests.",
    "files": [
      "tests/PhpProxyHunter/UserDBSaldoArithmeticTest.php"
    ]
  },
  {
    "hash": "b1701d249f4ab46dd1cde6da2f14f97d7e67cd39",
    "date": "2025-08-11T15:31:45+07:00",
    "message": "fix: update TypeScript configuration to include ES2022 library",
    "files": [
      "tsconfig.json"
    ]
  },
  {
    "hash": "7bca086a0513db2562e30bd070b46837a200ba2d",
    "date": "2025-08-11T15:31:16+07:00",
    "message": "fix: update package resolutions for various dependencies",
    "files": [
      "package.json"
    ]
  },
  {
    "hash": "14674b7fceb72c33e52824c8bb120e6f78148c16",
    "date": "2025-08-11T15:30:20+07:00",
    "message": "feat: add saldo arithmetic tests for SQLite and MySQL\n\n- Added UserDBSaldoArithmeticTest to verify saldo increment/decrement logic for both SQLite and MySQL backends.\n- Introduced MySQL connection config in .env-sample (MYSQL_USER, MYSQL_PASS, MYSQL_DBNAME, MYSQL_HOST).\n- Updated bootstrap.php to always load .env from project root.",
    "files": [
      ".env-sample",
      "tests/PhpProxyHunter/UserDBSaldoArithmeticTest.php",
      "tests/bootstrap.php"
    ]
  },
  {
    "hash": "a913c7e91899ba8ff86cc609de6130aa82fcf96f",
    "date": "2025-08-11T15:24:08+07:00",
    "message": "test: load .env before running PHPUnit tests\n\n- Added tests/bootstrap.php to require autoload and load .env using vlucas/phpdotenv.\n- Updated phpunit.xml to use tests/bootstrap.php as bootstrap file.",
    "files": [
      "phpunit.xml",
      "tests/bootstrap.php"
    ]
  },
  {
    "hash": "e34180f573578ffa111e7659fd3521a6f67ab09d",
    "date": "2025-08-11T15:01:24+07:00",
    "message": "feat(php): add MySQL support alongside SQLite\n\n- Introduced MySQLHelper class for MySQL database interactions.\n- Added mysql-schema.sql for MySQL schema initialization.\n- Refactored UserDB to support both SQLite and MySQL backends.\n- Moved SQLite schema to sqlite-schema.sql and added sqlite-re-order-proxies.sql.\n- Updated UserDBTest to optionally run against MySQL using PHP_PROXY_HUNTER_TEST_MYSQL env var.",
    "files": [
      "src/PhpProxyHunter/MySQLHelper.php",
      "src/PhpProxyHunter/UserDB.php",
      "src/PhpProxyHunter/assets/mysql-schema.sql",
      "src/PhpProxyHunter/assets/sqlite-re-order-proxies.sql",
      "src/PhpProxyHunter/assets/sqlite-schema.sql",
      "tests/PhpProxyHunter/UserDBTest.php"
    ]
  },
  {
    "hash": "f4fa319662020bc55aaf20596aa72c4f33b99c29",
    "date": "2025-08-11T13:45:46+07:00",
    "message": "Merge branch 'master' of https://github.com/dimaslanjaka/php-proxy-hunter",
    "files": []
  },
  {
    "hash": "0810364fd72b955cb0ed6625e8d101f4c34faf17",
    "date": "2025-08-03T15:06:03+07:00",
    "message": "refactor: documentation",
    "files": [
      "packages/proxy-hunter-python/readme.md"
    ]
  },
  {
    "hash": "1d50606a48d7e5bc286eab70e5432d245cd80b4d",
    "date": "2025-08-01T15:33:11Z",
    "message": "build(deps): update symfony/yaml requirement from ^5.4 to ^5.4 || ^7.0\n\nUpdates the requirements on [symfony/yaml](https://github.com/symfony/yaml) to permit the latest version.\n- [Release notes](https://github.com/symfony/yaml/releases)\n- [Changelog](https://github.com/symfony/yaml/blob/7.3/CHANGELOG.md)\n- [Commits](https://github.com/symfony/yaml/compare/v5.4.0...v7.3.2)\n\n---\nupdated-dependencies:\n- dependency-name: symfony/yaml\n  dependency-version: 7.3.2\n  dependency-type: direct:production\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>",
    "files": [
      "composer.json"
    ]
  },
  {
    "hash": "627e1f038e2bc4cc9d5adb8b3f99cfa24a0a4b84",
    "date": "2025-08-01T15:32:55Z",
    "message": "build(deps-dev): update phpunit/phpunit requirement || ^12.0\n\nUpdates the requirements on [phpunit/phpunit](https://github.com/sebastianbergmann/phpunit) to permit the latest version.\n- [Release notes](https://github.com/sebastianbergmann/phpunit/releases)\n- [Changelog](https://github.com/sebastianbergmann/phpunit/blob/12.3.0/ChangeLog-12.3.md)\n- [Commits](https://github.com/sebastianbergmann/phpunit/compare/9.6.0...12.3.0)\n\n---\nupdated-dependencies:\n- dependency-name: phpunit/phpunit\n  dependency-version: 12.3.0\n  dependency-type: direct:development\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>",
    "files": [
      "composer.json"
    ]
  },
  {
    "hash": "e10d7d79b40e84ff70c2ececfe86f460c8976b8b",
    "date": "2025-07-27T07:23:02+07:00",
    "message": "refactor(cleaner): move cleaner script to artisan/ and fix relative paths\n\n- Moved `cleaner.php` to `artisan/cleaner.php` for better structure\n- Updated all relative paths to reflect new location\n- Removed redundant `if (!$isCli)` block\n- Ensured script exits when accessed via web server",
    "files": [
      "artisan/cleaner.php"
    ]
  },
  {
    "hash": "6554e82f9a5ea63a3f489cca569ce9fadafab3b2",
    "date": "2025-07-27T07:17:21+07:00",
    "message": "fix(package): update package resolutions for various dependencies",
    "files": [
      "package.json"
    ]
  },
  {
    "hash": "36fc19b44d53c96428ff2d995ebb6f611bd6aac7",
    "date": "2025-07-21T18:46:48+07:00",
    "message": "fix(dashboard-menu): ensure dashboard menu element exists before processing menu data",
    "files": [
      "views/assets/js/_widget/dashboard-menu.js"
    ]
  },
  {
    "hash": "64d5631a16a5efa19f103bd75fa86067d73d1fe2",
    "date": "2025-07-21T18:45:26+07:00",
    "message": "refactor(dashboard): migrate menu source to JSONC and parse client-side\n\n- Renamed `dashboard-menu.json` to `dashboard-menu.jsonc` to allow comments/flexibility\n- Updated `dashboard-menu.js` to dynamically fetch and parse JSONC using `jsonc-parser`\n- Enhanced error handling for invalid or missing menu data\n- Rollup now copies `.jsonc` files to `public/php/json` during build\n- Removed `jsonc-parser` from devDependencies and added to production dependencies",
    "files": [
      "package.json",
      "rollup.php.js",
      "views/assets/js/_widget/dashboard-menu.js",
      "views/assets/json/dashboard-menu.jsonc"
    ]
  },
  {
    "hash": "acc2600a245c11c3545054d8589f1b49e2487396",
    "date": "2025-07-21T18:39:40+07:00",
    "message": "refactor(widget): migrate dashboard menu to JSON-driven dynamic rendering\n\n- Removed hardcoded markup in `dashboard-menu.twig`\n- Introduced `dashboard-menu.json` as source of menu items\n- Added `dashboard-menu.js` to render menu dynamically based on JSON\n- Enables easier customization and localization of dashboard navigation",
    "files": [
      "views/_widgets/dashboard-menu.twig",
      "views/assets/js/_widget/dashboard-menu.js",
      "views/assets/json/dashboard-menu.json"
    ]
  },
  {
    "hash": "f168c97c0a6566d00e153dc03b7ff61f3435989b",
    "date": "2025-07-21T18:34:00+07:00",
    "message": "chore(eslint): update config and add typings for window.clipboardData\n\n- Disabled `@typescript-eslint/triple-slash-reference` for CommonJS and `.mjs` files\n- Introduced `types/window-shim.d.ts` to support `window.clipboardData` (IE compatibility)\n- Used reference path directive in `template.js` for IntelliSense and type support",
    "files": [
      "eslint.config.mjs",
      "types/window-shim.d.ts",
      "views/assets/js/template.js"
    ]
  },
  {
    "hash": "4cde9ba5809a3d19640d9984b17e9878f133c9e8",
    "date": "2025-07-21T18:28:52+07:00",
    "message": "feat(recaptcha): integrate Google reCAPTCHA v2 and v3 dynamically\n\n- Added dynamic loading of reCAPTCHA v2 and v3 using site key from `/info.php`\n- Injected reCAPTCHA elements and scripts conditionally\n- Verified tokens via backend (`recaptcha.php`)\n- Added TypeScript types with `@types/grecaptcha`",
    "files": [
      "package.json",
      "views/assets/js/template.js",
      "views/template.twig"
    ]
  },
  {
    "hash": "7bcb828e78d07cfb45b05eb58c5d74964c95ef0a",
    "date": "2025-07-21T18:09:32+07:00",
    "message": "feat(dashboard-menu): add dashboard menu to multiple views for consistent navigation",
    "files": [
      "views/_widgets/dashboard-menu.twig",
      "views/admin/index.twig",
      "views/dashboard/index.twig",
      "views/profile/edit.twig",
      "views/user/logs.twig"
    ]
  },
  {
    "hash": "40773dfa89f66cf12e66e7c1104bc39a0303dbfa",
    "date": "2025-07-21T17:57:43+07:00",
    "message": "fix(template): wrap body block in a section for improved layout",
    "files": [
      "views/template.twig"
    ]
  },
  {
    "hash": "41416a29f4439910d868349203106ac628f35465",
    "date": "2025-07-21T17:52:05+07:00",
    "message": "fix(edit-profile): update dark mode background color for form",
    "files": [
      "views/profile/edit.twig"
    ]
  },
  {
    "hash": "07f561d4e67fbea25edd22bfdc890cf58fecd8ce",
    "date": "2025-07-21T17:51:48+07:00",
    "message": "feat(navbar): toggle login/logout links based on authentication\n\nAdded dynamic login/logout visibility in navbar by checking user auth status via `/php_backend/user-info.php`. Uses `data-role` attributes for clean DOM manipulation.",
    "files": [
      "views/assets/js/template.js",
      "views/template.twig"
    ]
  },
  {
    "hash": "e0d798336075f1aab580e3184b197d74dd767c9b",
    "date": "2025-07-21T17:15:08+07:00",
    "message": "refactor(post-merge): run composer, yarn, and rollup commands execution before fix permission",
    "files": []
  },
  {
    "hash": "4d275ae9bd24fe44d5928c808cab1d5f1eafbd61",
    "date": "2025-07-21T17:08:48+07:00",
    "message": "fix(package.json): update prepare script to use npx for husky",
    "files": [
      "package.json"
    ]
  },
  {
    "hash": "4338041b5aa16a948d030178d10f2468be397826",
    "date": "2025-07-21T17:08:14+07:00",
    "message": "feat(post-merge): add support for composer, yarn, and rollup commands",
    "files": []
  },
  {
    "hash": "d02ffb6e2c2067b616441baee624e2ec955403f2",
    "date": "2025-07-21T16:50:31+07:00",
    "message": "fix(refill-saldo): improve user selection handling and error management",
    "files": [
      "php_backend/refill-saldo.php",
      "views/assets/js/refill-saldo.js"
    ]
  },
  {
    "hash": "e52ea8c85ff195f46e2c32064800328b21abeadc",
    "date": "2025-07-21T16:41:46+07:00",
    "message": "fix(languages): align language icon vertically in the dropdown\nfix(template): add margin-top to the container for better spacing",
    "files": [
      "views/_widgets/languages.twig",
      "views/template.twig"
    ]
  },
  {
    "hash": "a479fe6db0e148e14c953e32fb3497eaba4a1ef6",
    "date": "2025-07-21T16:37:56+07:00",
    "message": "fix(list-user): prevent unauthorized access to user list\n\nAdded early exit with proper error message if the requester is not an admin. Ensures user data is only accessible by authenticated admins.",
    "files": [
      "php_backend/list-user.php"
    ]
  },
  {
    "hash": "853e17bf032635af87ccd443e3f305e041e99d61",
    "date": "2025-07-21T16:37:25+07:00",
    "message": "feat(template): add Font Awesome icons for navigation links",
    "files": [
      "views/template.twig"
    ]
  },
  {
    "hash": "40827416deda625420120b7c636bc2c7f27f24c2",
    "date": "2025-07-21T16:35:33+07:00",
    "message": "refactor(google-oauth): unify and extend CORS and cache control headers\n\nReplaced individual `Access-Control-Allow-*` headers with wildcard values and added content-type and cache-control headers for consistency across environments.",
    "files": [
      "php_backend/google-oauth.php"
    ]
  },
  {
    "hash": "40f76aebdd9f4ade8eaa4e39b67781fd2b0c9450",
    "date": "2025-07-21T16:34:16+07:00",
    "message": "refactor(user-info): simplify header handling and user data fetch\n\nMoved CORS and content-type headers to a reusable `setHeaders()` function, clarified user selection logic, and ensured saldo is initialized when missing.",
    "files": [
      "php_backend/user-info.php"
    ]
  },
  {
    "hash": "1849edfef5a2802a8f3c6e69d0b6f03eb2dd6280",
    "date": "2025-07-21T16:29:37+07:00",
    "message": "fix(profile): validate update result before returning success\n\nEnsured `ProfileController` checks whether `UserDB::update()` actually succeeded before returning a success response to avoid false positives.",
    "files": [
      "controllers/ProfileController.php"
    ]
  },
  {
    "hash": "c57da788da637f6ee3e540cce0f18baec0ab1fd5",
    "date": "2025-07-21T16:29:02+07:00",
    "message": "fix(userdb): support update by id, email, or username\n\nEnhanced `UserDB::update()` method to update users based on `id`, `email`, or `username`, whichever matches first. Added return value to indicate success. Extended `UserDBTest` to cover update scenarios by all identifiers and ensure proper data updates.",
    "files": [
      "src/PhpProxyHunter/UserDB.php",
      "tests/PhpProxyHunter/UserDBTest.php"
    ]
  },
  {
    "hash": "6d58145cd7412140e5ea4b30a581a63e9aad0ac9",
    "date": "2025-07-21T16:01:31+07:00",
    "message": "fix(profile-card): correct edit profile link in profile card component",
    "files": [
      "views/_partials/profile-card.twig"
    ]
  },
  {
    "hash": "75650c892491204550cd9275c52fbb51986f13d8",
    "date": "2025-07-21T15:56:12+07:00",
    "message": "feat(logout): implement LogoutController for session clearing and redirection",
    "files": [
      "controllers/LogoutController.php"
    ]
  },
  {
    "hash": "9424c29e887127b0835c85003d5d13b92db2d15e",
    "date": "2025-07-21T15:55:51+07:00",
    "message": "fix(user): add saldo property to UserListData interface",
    "files": [
      "types/user.d.ts"
    ]
  },
  {
    "hash": "3c09a63c0e1ef87cf27b790b3d5f3ed0b5e898db",
    "date": "2025-07-21T15:54:48+07:00",
    "message": "refactor(php): modularize google-oauth handler and cleanup logic\n\nRefactored `google-oauth.php` by extracting repeated logic into utility functions: `createGoogleClient`, `refreshAccessTokenIfNeeded`, and `finalizeUserSession`. Simplifies OAuth callback flow, improves readability, and centralizes session/user handling logic.",
    "files": [
      "php_backend/google-oauth.php"
    ]
  },
  {
    "hash": "61fede9f0209497bd0983715008d72a803705cdc",
    "date": "2025-07-21T15:31:28+07:00",
    "message": "feat(profile): implement profile editing functionality with validation and user feedback",
    "files": [
      "controllers/ProfileController.php",
      "views/assets/js/edit-profile.js",
      "views/profile/edit.twig"
    ]
  },
  {
    "hash": "eb39adbc79ecc8f39e7519d1571b8cc786b52f82",
    "date": "2025-07-21T15:29:36+07:00",
    "message": "fix(google-oauth): remove database path from UserDB instantiation",
    "files": [
      "php_backend/google-oauth.php"
    ]
  },
  {
    "hash": "001c6342e8dbd6fbcaf8aeb815bd88c5a346c6b9",
    "date": "2025-07-21T14:47:24+07:00",
    "message": "fix(settings): remove PHP executor mapping from code-runner configuration",
    "files": [
      ".vscode/settings.json"
    ]
  },
  {
    "hash": "ccc404bf816cc0548cdff639b2246fc3409fb455",
    "date": "2025-07-21T14:47:06+07:00",
    "message": "test(UserDBTest): add unit tests for UserDB class functionality",
    "files": [
      "tests/PhpProxyHunter/UserDBTest.php"
    ]
  },
  {
    "hash": "55673a153f56a77ab87d2fa8c388426c233c6bc8",
    "date": "2025-07-21T14:44:03+07:00",
    "message": "feat(UserDB): add destructor and close method to manage database connection lifecycle",
    "files": [
      "src/PhpProxyHunter/UserDB.php"
    ]
  },
  {
    "hash": "d413de87b94adc6b18adb7ac4ce21b4be4172ec2",
    "date": "2025-07-21T14:11:23+07:00",
    "message": "docs(readme): add debugging instructions for twig views",
    "files": [
      "views/readme.md"
    ]
  },
  {
    "hash": "d774eff69b59c89576a810926726a4408cc38a5f",
    "date": "2025-07-21T14:11:08+07:00",
    "message": "feat(BaseController): implement parsePostData method for handling various Content-Types",
    "files": [
      "src/mvc/BaseController.php"
    ]
  },
  {
    "hash": "6638e6f831d4e64bae99169e9ad0a290b6b7f83e",
    "date": "2025-07-21T13:59:39+07:00",
    "message": "fix(dependencies): update URLs for git-command-helper and other packages",
    "files": [
      "package.json"
    ]
  },
  {
    "hash": "3d89c369474d4afdba1a332cc644701b3d3abd1d",
    "date": "2025-07-21T13:58:47+07:00",
    "message": "build(rollup): move PHP env build ID generation into plugin phase\n\nAdds a custom Rollup plugin named `build-php-env` that generates a unique build ID and writes it to `public/php/json/env.json` during the `buildStart` phase. Ensures directory creation and improves plugin execution clarity during builds.",
    "files": [
      "rollup.php.js"
    ]
  },
  {
    "hash": "75e4ba730d80ce9d27899c264b9c2b6d5a54d5d4",
    "date": "2025-07-21T13:45:08+07:00",
    "message": "refactor(oauth): rename user-handler.php to google-oauth.php and update references\n\nRenamed the backend script from `user-handler.php` to `google-oauth.php` for clarity and alignment with its purpose. Also updated all JavaScript references in `login.js` to use the new filename.",
    "files": [
      "php_backend/google-oauth.php",
      "views/assets/js/login.js"
    ]
  },
  {
    "hash": "0a3ff1b563d9aa4fd33d4380e93dd8d860535c55",
    "date": "2025-07-21T13:41:11+07:00",
    "message": "feat(requirements): add nuitka to Linux package requirements",
    "files": [
      "requirements_install.py"
    ]
  },
  {
    "hash": "8fc2ae6b95c8b9472d82902b1d96e5d54e27e758",
    "date": "2025-07-21T13:39:09+07:00",
    "message": "refactor(embed.php): improve security checks for file access and enhance error handling",
    "files": [
      "embed.php"
    ]
  },
  {
    "hash": "1c3ce81e91d0c9912c1df1d15471106bf42397bd",
    "date": "2025-07-21T13:38:25+07:00",
    "message": "refactor: Update PHP CS Fixer configuration and remove SQL dialect mappings\n\n- Added timeout setting to PhpCSFixerConfiguration in php.xml.\n- Introduced a new PhpCSFixerConfiguration with a comprehensive list of standards.\n- Removed the sqldialects.xml file as it is no longer needed.",
    "files": [
      ".idea/htdocs.iml",
      ".idea/inspectionProfiles/Project_Default.xml",
      ".idea/php.xml",
      ".idea/sqldialects.xml"
    ]
  },
  {
    "hash": "b0941b5c661bc71b2f2f79d9703d829ae460cb66",
    "date": "2025-07-21T05:34:37+07:00",
    "message": "fix(profile-card): ensure saldo is displayed correctly with template literals",
    "files": [
      "views/assets/js/profile-card.js"
    ]
  },
  {
    "hash": "9b084eefa4e09933c8d37cc1a552330f8869b31d",
    "date": "2025-07-21T05:34:18+07:00",
    "message": "feat(user-handler): improve session management for authentication and admin status\n\nReplaced inline admin assignment with `$isAdmin` variable to simplify logic. Removed `$_SESSION['admin']` when user is not admin to avoid stale session state. Added `$_SESSION['authenticated']` and `$_SESSION['authenticated_email']` to explicitly track user login status.",
    "files": [
      "php_backend/user-handler.php"
    ]
  },
  {
    "hash": "4f33afe47b37d67c0c33114edd8991996e044c8b",
    "date": "2025-07-21T05:33:42+07:00",
    "message": "refactor(template.js): improve clipboard copy support and snackbar safety\n\nEnhanced `copyToClipboard` to always return a `Promise<boolean>` for consistent async behavior across browsers, including fallback for older browsers. Also added error handling when `#snackbar` element is not found to prevent runtime failures during `showSnackbar`.",
    "files": [
      "views/assets/js/template.js"
    ]
  },
  {
    "hash": "d0b3419b31fbc9259c71ee19c52292572ea6ef01",
    "date": "2025-07-21T04:49:25+07:00",
    "message": "refactor(user-handler): unify user DB usage and improve user creation flow\n\nReplaced multiple `UserDB` instantiations with a single instance and updated logic to:\n- Use `select` and `add` methods instead of legacy `getUserByEmail`/`createUser`.\n- Automatically mark certain emails as admin/superuser using environment variables.\n- Sanitize username creation from email using stricter regex.",
    "files": [
      "php_backend/user-handler.php"
    ]
  },
  {
    "hash": "b0c51ec1efd3039b78fefc56cb114a676d5e02f5",
    "date": "2025-07-21T04:32:16+07:00",
    "message": "chore(userdb): remove UserDB class and associated SQLite user management",
    "files": [
      "src/UserDB.php"
    ]
  },
  {
    "hash": "9a9e2921b453979ea4133ba41b23e38556b3fe3e",
    "date": "2025-07-21T04:27:17+07:00",
    "message": "chore(user-handler): move Google OAuth handling and user info retrieval",
    "files": [
      "php_backend/user-handler.php",
      "views/assets/js/login.js"
    ]
  },
  {
    "hash": "e5300a337f83842e54a64700484dd637c4815104",
    "date": "2025-07-21T04:25:06+07:00",
    "message": "feat(login): implement Google OAuth callback handling and improve login flow",
    "files": [
      "views/assets/js/login.js",
      "views/assets/js/utils/url.js"
    ]
  },
  {
    "hash": "dc44da9ddf724053bb49ac30eb294f93b538c410",
    "date": "2025-07-21T04:09:37+07:00",
    "message": "feat(user-handler): enhance user info retrieval and session management for OAuth",
    "files": [
      "data/user-handler.php"
    ]
  },
  {
    "hash": "294f4eb69aa0d2b4b7b6d10921c1bff82a15dec6",
    "date": "2025-07-21T04:02:00+07:00",
    "message": "feat(user-handler): implement user authentication and session management with Google OAuth",
    "files": [
      "data/user-handler.php"
    ]
  },
  {
    "hash": "30cd5cfd5af3fde03aebb0404c26d217e434cb06",
    "date": "2025-07-21T03:57:17+07:00",
    "message": "feat(userdb): implement UserDB class for user management with SQLite",
    "files": [
      "src/UserDB.php"
    ]
  },
  {
    "hash": "04ef70a2b60e063cd1179b53e05be94abfdf0aec",
    "date": "2025-07-21T03:56:54+07:00",
    "message": "feat(proxydb): update project root initialization to use Composer's autoload path",
    "files": [
      "src/PhpProxyHunter/ProxyDB.php"
    ]
  },
  {
    "hash": "b1c392006cc9aca1daf50c6a97439135760b8316",
    "date": "2025-07-21T03:55:04+07:00",
    "message": "feat(autoload): implement new autoloading mechanism with directory exclusion",
    "files": [
      "composer.json",
      "src/autoload.php",
      "src/utils/autoload.php"
    ]
  },
  {
    "hash": "676a733b4174afa22ddea06573c94a572f974bf4",
    "date": "2025-07-21T03:52:25+07:00",
    "message": "refactor(session): remove FileSessionHandler class",
    "files": [
      "src/FileSessionHandler.php"
    ]
  },
  {
    "hash": "4560c664e54eed0b82755ad9ab417f397f94363f",
    "date": "2025-07-21T02:12:33+07:00",
    "message": "feat(session): implement FileSessionHandler for file-based session management",
    "files": [
      "src/FileSessionHandler.php"
    ]
  },
  {
    "hash": "01a4e6e2b9e214642e8127f099c6635383e40f03",
    "date": "2025-07-21T02:11:51+07:00",
    "message": "feat(func): add tmp function to retrieve temporary directory path",
    "files": [
      "src/func.py"
    ]
  },
  {
    "hash": "2d9f9a1e0de9c5efa054527b4ddd5fe285072083",
    "date": "2025-07-21T02:11:20+07:00",
    "message": "feat(preferences): implement PreferencesHelper for managing user preferences in JSON",
    "files": [
      "src/preferences.py"
    ]
  },
  {
    "hash": "6821718ed12ec1d97e0798cfc858a212425d094f",
    "date": "2025-07-21T02:10:56+07:00",
    "message": "fix(request): handle JSON vs form data for POST/PUT/PATCH with dynamic timeout\n\nEnhanced the `build_request` function to:\n- Automatically send `post_data` as JSON if `Content-Type` is `application/json` and the data is a dict.\n- Allow dynamic `timeout` via kwargs, defaulting to 10 seconds.\n\nUpdated `tests/build_requests.py`:\n- Migrated to `pytest` from `unittest`.\n- Added tests for form-data and JSON POST requests.\n- Added parameterized tests for multiple proxy types (http, socks4, socks5) using `httpbin.org`.",
    "files": [
      "packages/proxy-hunter-python/proxy_hunter/curl/request_helper.py",
      "packages/proxy-hunter-python/tests/build_requests.py"
    ]
  },
  {
    "hash": "4b7f1f06a3fe3c52407ef1c1ebdb3575e4f6b2a9",
    "date": "2025-07-21T02:10:02+07:00",
    "message": "test(utils): add dict_updater utility with case-insensitive update support\n\nIntroduced `dict_updater` in `proxy_hunter/utils/dict_helper.py` to update dictionary keys with case-insensitive matching.\nIt replaces existing values or adds new keys appropriately.\n\nAlso added `dict_helper_test.py` with comprehensive unit tests using `pytest` to verify behavior for:\n- updating existing keys with different casing\n- adding new keys\n- handling mixed-case scenarios\n- updating multiple keys at once",
    "files": [
      "packages/proxy-hunter-python/proxy_hunter/__init__.py",
      "packages/proxy-hunter-python/proxy_hunter/utils/__init__.py",
      "packages/proxy-hunter-python/proxy_hunter/utils/dict_helper.py",
      "packages/proxy-hunter-python/tests/dict_helper_test.py"
    ]
  },
  {
    "hash": "14f3fa7044875e1976f670fd1dee17a2f6d46c76",
    "date": "2025-07-21T02:07:11+07:00",
    "message": "feat(device): add cross-platform serial number and UUID generator\n\n- Implemented `get_serial_number()` to retrieve the system serial number on Windows, Linux, and macOS.\n- Added `get_serial_number_uuid()` to create a consistent UUID-style identifier using system info and MD5.\n- Includes `split_serial_number_md5()` to format MD5 hashes into UUID format.",
    "files": [
      "src/func_device.py"
    ]
  },
  {
    "hash": "00c0e5d3fab486966bee06b4e1e31b9a12443296",
    "date": "2025-07-21T02:06:00+07:00",
    "message": "feat(tests): add comprehensive proxy testing scripts and utilities",
    "files": [
      "tests/check_proxy_without_requests.py",
      "tests/date.py",
      "tests/db_test.py",
      "tests/func_proxy_test.py",
      "tests/geoIp.py",
      "tests/get_locale.py",
      "tests/get_useragent.py",
      "tests/lib_proxy-checker.py",
      "tests/proxyDB-parse-from-file.py",
      "tests/read_proxy_by_line.py",
      "tests/regex-test.py",
      "tests/requests_test.py",
      "tests/single-check-proxy.py"
    ]
  },
  {
    "hash": "c497a763594084e00b104f84b0c8383f451a5a5b",
    "date": "2025-07-21T02:03:25+07:00",
    "message": "feat(db): support parameterized SQL in execute_query and declare ProxyDB.db attribute\n\n- Added optional `params` argument to `SQLiteHelper.execute_query()` for safe parameterized SQL execution.\n- Declared `ProxyDB.db` as Optional[SQLiteHelper] to improve type clarity and tooling support.",
    "files": [
      "src/ProxyDB.py",
      "src/SQLiteHelper.py"
    ]
  },
  {
    "hash": "649ef8d6cd7c1a5aea3d45c8bed38c2636c8f922",
    "date": "2025-07-21T02:02:33+07:00",
    "message": "feat(utils): add system Python resolver and improve local Python detection\n\n- Added `get_system_python_path()` to locate globally installed Python interpreters across platforms.\n- Enhanced `get_python_path()` to accept an optional directory for localized lookup.\n- Included CLI test code under `__main__` for easy debugging and verification.\n- Exposed `string_utils` from `utils/__init__.py`.",
    "files": [
      "src/utils/__init__.py",
      "src/utils/file.py"
    ]
  },
  {
    "hash": "b8381da981d666deb24bfcf2e565b7c57b81ac1c",
    "date": "2025-07-10T07:29:43+07:00",
    "message": "refactor: replace global binary installation with rimraf for submodule cleanup",
    "files": [
      ".github/workflows/checker-php.yml",
      ".github/workflows/checker-php.yml.txt",
      ".github/workflows/checker-python.yml",
      ".github/workflows/checker.yml.txt",
      ".github/workflows/clean-caches.yml",
      ".github/workflows/nuitka-debug.yml.txt",
      ".github/workflows/nuitka.yml.txt"
    ]
  },
  {
    "hash": "1ce2ad5a46d383221a333c0fef6081219d8ba5be",
    "date": "2025-07-10T07:18:26+07:00",
    "message": "refactor: replace curl command with npm install for submodule installation",
    "files": [
      ".github/workflows/checker-php.yml.txt",
      ".github/workflows/checker.yml.txt",
      ".github/workflows/clean-caches.yml",
      ".github/workflows/nuitka-debug.yml.txt",
      ".github/workflows/nuitka.yml.txt"
    ]
  },
  {
    "hash": "795797225d42f7f812aae546c61a3a269753f0be",
    "date": "2025-07-10T07:16:04+07:00",
    "message": "refactor: remove redundant bin directory creation and switch to npx for submodule installation",
    "files": [
      ".github/workflows/checker-php.yml",
      ".github/workflows/checker-php.yml.txt",
      ".github/workflows/checker-python.yml",
      ".github/workflows/checker.yml.txt",
      ".github/workflows/clean-caches.yml",
      ".github/workflows/nuitka-debug.yml.txt",
      ".github/workflows/nuitka.yml.txt"
    ]
  },
  {
    "hash": "e40f516e32a1f28c0f22f7a68b5d36ac3f96e482",
    "date": "2025-07-10T07:06:03+07:00",
    "message": "refactor: using binary collections to update submodules",
    "files": [
      ".github/workflows/clean-caches.yml"
    ]
  },
  {
    "hash": "27bbe53699324fd958a1510a445ad45e68753804",
    "date": "2025-07-10T04:18:32+07:00",
    "message": "refactor(ci): update submodule install step to use npm package\n\n- Replace curl/bash script with npm install of binary-collections from GitHub tarball\n- Use npx submodule-install instead of bash script\n- Move Node.js setup and corepack enable steps before submodule update\n- Apply changes to both PHP and Python workflow files",
    "files": [
      ".github/workflows/checker-php.yml",
      ".github/workflows/checker-python.yml"
    ]
  },
  {
    "hash": "309353f7f618ded89810760670060e3664e37e69",
    "date": "2025-07-09T19:47:06+07:00",
    "message": "remove non-related folders",
    "files": [
      "packages/browser-with-fingerprints",
      "packages/selenium-stealth"
    ]
  },
  {
    "hash": "87b4e206d9cf2ee0b4fdf1a82afc5e1350247fb4",
    "date": "2025-07-08T16:52:39+07:00",
    "message": "feat: add .nvmrc file to specify Node.js version 22.17.0",
    "files": [
      ".nvmrc"
    ]
  },
  {
    "hash": "03056b9a8efcf816c2daa0b027cdc5e6386e3ca1",
    "date": "2025-07-08T16:43:29+07:00",
    "message": "fix: update load-nvm script to return after sourcing nvm.sh instead of exiting",
    "files": [
      "src/vps/menus/load-nvm"
    ]
  },
  {
    "hash": "8b105af70e12c7c3cbb3a86d71dd549ee19e4113",
    "date": "2025-07-08T16:28:38+07:00",
    "message": "feat: add load-nvm script to source NVM for yarn installation",
    "files": [
      "src/vps/menus/load-nvm",
      "src/vps/menus/project-manager.py"
    ]
  },
  {
    "hash": "9ee49155fd953a48d2d22e72a2f295a77eb4c86b",
    "date": "2025-07-08T16:14:46+07:00",
    "message": "fix: source .bashrc before running 'yarn install' to ensure environment variables (like NVM) are loaded",
    "files": [
      "src/vps/menus/project-manager.py"
    ]
  },
  {
    "hash": "1f1290a092c8966f27e9d76d4e5c86b320effe1b",
    "date": "2025-07-08T15:59:42+07:00",
    "message": "refactor: move project management actions to separate menu\n\n- Moved project management actions (git pull, composer update, yarn install, pip install) from vps_manager.py to new menu module project-manager.py.\n- Updated download-backups.py to reorder register() after action function.\n- vps_manager.py now loads menu items dynamically without hardcoded project actions.",
    "files": [
      "src/vps/menus/download-backups.py",
      "src/vps/menus/project-manager.py",
      "src/vps/vps_manager.py"
    ]
  },
  {
    "hash": "178ab74d23e3e191da66aa49750473084294916e",
    "date": "2025-07-08T15:58:29+07:00",
    "message": "feat: enhance run_command_live to support interactive input on Windows and Unix-like systems",
    "files": [
      "src/vps/ssh_client.py"
    ]
  },
  {
    "hash": "f84ab095508c0edb5d30c2c351a58eeb09b19cef",
    "date": "2025-07-08T15:54:25+07:00",
    "message": "docs: update instructions for file handling and backup procedures",
    "files": [
      ".github/instructions/all.instructions.md"
    ]
  },
  {
    "hash": "66639b340254d78ee34505019373503539f35ee3",
    "date": "2025-07-08T15:49:38+07:00",
    "message": "fix: ensure proper output streaming and add newline after command completion in run_command_live",
    "files": [
      "src/vps/ssh_client.py"
    ]
  },
  {
    "hash": "731e261c20af73001edf6258b459336faff41139",
    "date": "2025-07-08T15:41:57+07:00",
    "message": "feat: add path filter for PhpProxyHunter in PHP checker workflow",
    "files": [
      ".github/workflows/checker-php.yml"
    ]
  },
  {
    "hash": "7b77ae580cab213a4b203640751aade686cfdcb2",
    "date": "2025-07-08T15:40:43+07:00",
    "message": "feat: add path filters for PHP and Python workflows on push events",
    "files": [
      ".github/workflows/checker-php.yml",
      ".github/workflows/checker-python.yml"
    ]
  },
  {
    "hash": "71d91ad6fa6edc532394a7a055a3e62c272ef290",
    "date": "2025-07-08T15:37:48+07:00",
    "message": "feat: add live command execution with output streaming over SSH\n\n- Implement run_command_live in SSHClient to stream remote command output to local stdout/stderr in real time.\n- Update pull_latest_code to use run_command_live for live git pull feedback.",
    "files": [
      "src/vps/ssh_client.py",
      "src/vps/vps_manager.py"
    ]
  },
  {
    "hash": "721ad7d0380cfec5cc7963d8b8c7aa2cc494c331",
    "date": "2025-07-08T15:35:31+07:00",
    "message": "fix: pull_latest_code() missing 1 required positional argument: 'g'",
    "files": [
      "packages/browser-with-fingerprints",
      "packages/selenium-stealth",
      "src/vps/vps_manager.py"
    ]
  },
  {
    "hash": "a928d45274f936863083f012cbad8db8592858f1",
    "date": "2025-07-08T14:48:38+07:00",
    "message": "refactor: clean up unused code and improve file structure",
    "files": [
      "proxyManager-src.js",
      "rollup.project.js"
    ]
  },
  {
    "hash": "5ae66d1d7d590f466c3eed6d18fa90be7e82f5fe",
    "date": "2025-07-08T14:45:17+07:00",
    "message": "refactor: improve dynamic config loading in rollup.config.js\n\n- Refactored dynamicConfigs to exclude the main config file and ensure uniqueness.\n- Removed unnecessary console.log statements for cleaner output.\n- Throw error immediately on dynamic config load failure.",
    "files": [
      "rollup.config.js"
    ]
  },
  {
    "hash": "b1bcaaed5bd7a09593010fa5e8bd00fd1d797f9d",
    "date": "2025-07-08T14:27:07+07:00",
    "message": "refactor: consolidate dynamic configuration file glob patterns",
    "files": [
      "rollup.config.js"
    ]
  },
  {
    "hash": "f3d9f39d8b6752862cd8a355480e68a7cf71d232",
    "date": "2025-07-08T14:25:26+07:00",
    "message": "refactor: improve type safety with TypeScript error handling and enhance project_base_url logic",
    "files": [
      "proxyManager-src.js"
    ]
  },
  {
    "hash": "23033585ee3b7aab08bd3d5eed89f3ff85049e37",
    "date": "2025-07-08T14:00:05+07:00",
    "message": "refactor: move filterPorts and related scripts to artisan directory\n\n- Moved filterPorts.php, filterPortsBackground.php, and filterPortsDuplicate.php to artisan/ directory for better organization.\n- Updated all references and scripts to use new artisan/ paths.\n- Refactored code to use PROJECT_ROOT or $projectRoot for consistent file path resolution.\n- Updated .github workflows, shell/batch scripts, and JS to use new paths.\n- Improved permission and lock file handling to match new structure.\n- Minor code cleanups and null checks in proxyManager-src.js.",
    "files": [
      ".crontab.sh",
      ".github/workflows/checker-php.yml.txt",
      ".github/workflows/checker.yml.txt",
      "artisan/filterPorts.php",
      "artisan/filterPortsBackground.php",
      "artisan/filterPortsDuplicate.php",
      "artisan/proxyWorking.php",
      "artisan/proxyWorkingBackground.php",
      "bin/check-proxy-parallel",
      "bin/check-proxy-parallel.cmd",
      "bin/filter-port.cmd",
      "bin/run-php",
      "fix-nginx-perm.sh",
      "geoIpBackground.php",
      "proxyManager-src.js"
    ]
  },
  {
    "hash": "dd1b94ddd27e8a7a71abc03b38f2951590ab1be7",
    "date": "2025-07-08T13:50:38+07:00",
    "message": "refactor: add missing use statements for ProxyDB and Proxy classes",
    "files": [
      "src/utils/proxy/extractor.php"
    ]
  },
  {
    "hash": "f9501ead816c0199cb1a88211a730c9bb6aa92f3",
    "date": "2025-07-08T13:47:25+07:00",
    "message": "refactor: replace PROJECT_ROOT with $projectRoot variable and add strict types\n\n- Introduced $projectRoot variable for consistent project root path usage.\n- Replaced all PROJECT_ROOT constants with $projectRoot.\n- Added declare(strict_types=1) for type safety.\n- Minor code cleanup and improved maintainability.",
    "files": [
      "artisan/proxyFetcher.php"
    ]
  },
  {
    "hash": "2097e21d11277e31f0ae1c00443c54ffaf4bceb2",
    "date": "2025-07-08T13:36:15+07:00",
    "message": "fix: ensure ProxyDB class is loaded before usage",
    "files": [
      "src/utils/proxy/extractor.php"
    ]
  },
  {
    "hash": "2f991d8dae9fc952d43f7524c915f9b3298ab86f",
    "date": "2025-07-08T13:27:42+07:00",
    "message": "refactor: move proxyWorking scripts to artisan directory and update paths\n\n- Moved proxyWorking.php and proxyWorkingBackground.php to artisan/ directory\n- Updated all file and directory references to use $projectDir and dirname(__DIR__)\n- Added strict_types declaration to PHP files\n- Fixed file paths in setMultiPermissions and write_file calls\n- Updated JS fetch path to new PHP script location",
    "files": [
      "artisan/proxyWorking.php",
      "artisan/proxyWorkingBackground.php",
      "proxyManager-src.js"
    ]
  },
  {
    "hash": "87bd5a8008cea2cf002fd004ac20481899d7b688",
    "date": "2025-07-08T13:24:20+07:00",
    "message": "docs: update instructions and ignore rules for file safety and coverage\n\n- Enhanced all.instructions.md with guidelines for careful file operations, backups, and path correctness.\n- Updated .gitignore to exclude .bak backup files.\n- Updated VSCode settings to hide hash.txt and coverage directory from the file explorer.",
    "files": [
      ".github/instructions/all.instructions.md",
      ".gitignore",
      ".vscode/settings.json"
    ]
  },
  {
    "hash": "f6c7c3341ad02065c337be50152c01052b576738",
    "date": "2025-07-08T13:13:28+07:00",
    "message": "refactor(utils): modularize file and proxy utilities\n\n- Split large utility files into smaller modules under `src/utils/file/`, `src/utils/proxy/`, and `src/utils/string/`\n- Move file CRUD, sanitizer, and stats functions to dedicated files\n- Move proxy CIDR, ports, extractor, and validator functions to dedicated files\n- Move string helpers and user agent generators to dedicated files\n- Update autoloader to recursively require all PHP files in subdirectories\n- Remove deleted files and update test and require paths accordingly",
    "files": [
      ".idea/htdocs.iml",
      "func-cidr.php",
      "func.php",
      "src/utils/autoload.php",
      "src/utils/file.php",
      "src/utils/file/crud.php",
      "src/utils/file/index.php",
      "src/utils/file/sanitizer.php",
      "src/utils/file/stats.php",
      "src/utils/proxy/cidr.php",
      "src/utils/proxy/extractor.php",
      "src/utils/proxy/ports.php",
      "src/utils/proxy/validator.php",
      "src/utils/string/index.php",
      "src/utils/string/useragent.php",
      "tests/cidr-random-proxy.php"
    ]
  },
  {
    "hash": "4c41f6c510c49e77ed300d4976bd4a146839688e",
    "date": "2025-07-08T11:41:50+07:00",
    "message": "refactor: clean up unused functions and improve code organization",
    "files": [
      "func-proxy.php"
    ]
  },
  {
    "hash": "fb4aaa50089cebf337339d419d129eae717cc2b3",
    "date": "2025-07-08T11:39:59+07:00",
    "message": "refactor(proxy): move geo IP logic to GeoIpHelper, restore utils, improve error handling\n\n- Refactored file processing and geo IP logic for reduced memory usage and maintainability.\n- Moved geo IP and locale/language functions to new class `GeoIpHelper` in `src/PhpProxyHunter/GeoIpHelper.php`.\n- Updated all usages in `geoIp.php`, `proxyChecker.php`, and `proxyCheckerParallel-func.php` to use `GeoIpHelper::getGeoIp`.\n- Restored utility functions: `extractIpPortFromFile`, `extractIpPortFromFileCallback`, `generateIPWithPorts`.\n- Restored and corrected `parse_working_proxies` to use new geo IP logic.\n- Removed legacy geo IP and locale functions from `func-proxy.php`.\n- Improved error handling in `processCheckProxy` for curl failures, empty/invalid responses, and azenv/raw header detection.\n- Applied PSR-12 and project conventions.",
    "files": [
      "func-proxy.php",
      "geoIp.php",
      "proxyChecker.php",
      "proxyCheckerParallel-func.php",
      "src/PhpProxyHunter/GeoIpHelper.php",
      "src/PhpProxyHunter/locales.json"
    ]
  },
  {
    "hash": "56fc708ca4eea8b3590a3546201ed01d00437bad",
    "date": "2025-07-08T11:16:12+07:00",
    "message": "refactor: optimize filterIpPortLines to use streaming and temp file\n\n- Use file streaming instead of reading entire file into memory\n- Write filtered lines to a temporary file, then overwrite original if matches found\n- Improve error handling and resource management\n- Add strict_types declaration",
    "files": [
      "func-proxy.php"
    ]
  },
  {
    "hash": "a5aa0874d07ed24f011e9d40d68c46c5c638a1ae",
    "date": "2025-07-08T11:12:08+07:00",
    "message": "refactor(tests): migrate hasher tests to framework-based suites\n\n- Refactor JS hasher test to use Jest with proper test cases and assertions.\n- Refactor Python hasher test to use pytest with fixtures and assertions.\n- Refactor PHP hasher test to use PHPUnit, PSR-12, strict types, and assertions.\n- Remove Composer\\Factory usage from PHP hasher for compatibility.\n- All test files remain in the `tests` folder as per project convention.\n- Improves test isolation, maintainability, and cross-",
    "files": [
      "tests/hashers/CustomPasswordHasher.test.cjs",
      "tests/hashers/CustomPasswordHasherTest.php",
      "tests/hashers/CustomPasswordHasherTest.py"
    ]
  },
  {
    "hash": "19c7044cc1dcc069e46ff12093988e062e8737f2",
    "date": "2025-07-08T11:10:27+07:00",
    "message": "fix: correct project root path retrieval in CustomPasswordHasher",
    "files": [
      "src/hashers/CustomPasswordHasher.php"
    ]
  },
  {
    "hash": "be789a4fd34cd30a185e3bb7669c6fbd4fea855e",
    "date": "2025-07-08T11:00:04+07:00",
    "message": "feat: add Jest globals to ESLint configuration for improved testing support",
    "files": [
      "eslint.config.mjs"
    ]
  },
  {
    "hash": "15634da4466b28a7e3b9279bde2a0e9b5802c028",
    "date": "2025-07-08T10:57:43+07:00",
    "message": "refactor: output .husky/hash.txt as directory tree with short hashes\n\n- Changed hash output from flat file list to a directory/file tree format with short (8-char) hashes.\n- Updated hash generation to only use the first 8 characters of each SHA-256 hash.\n- Added logic to build and print a tree structure for easier visual inspection of file hashes.",
    "files": [
      "bin/create-file-hashes.cjs"
    ]
  },
  {
    "hash": "69e8aadd653b2c5974f0bef1bcf15158b73feddd",
    "date": "2025-07-08T10:50:51+07:00",
    "message": "feat: improve ProxyDB error logging and add comprehensive Jest tests\n\n- Refactor ProxyDB to use a persistent error log file, ensuring directory creation and synchronous appending.\n- Add a close() method to ProxyDB for proper test cleanup.\n- Rewrite and expand ProxyDB Jest tests:\n   - Use a temporary database for isolation.\n   - Add tests for all major ProxyDB methods, including error logging.\n   - Ensure cleanup of test data after each test.\n- Remove dependency on getFromProject in tests.",
    "files": [
      "src/ProxyDB.js",
      "tests/ProxyDB.test.js"
    ]
  },
  {
    "hash": "d4ac04f55f9babfd84d8a63e6422086345df123b",
    "date": "2025-07-08T10:47:23+07:00",
    "message": "chore(deps): update dependencies to latest versions for improved stability and security",
    "files": [
      "package.json"
    ]
  },
  {
    "hash": "5506ce45662d96c40c67e0338b32e0fd1acdf785",
    "date": "2025-07-08T10:19:18+07:00",
    "message": "feat(test): add Jest configuration and scripts for TypeScript testing\n\n- Added jest.config.ts with TypeScript and Babel support for ESM and CJS modules.\n- Updated package.json:\n     - Added test, test:coverage, test:watch, test:debug, and lint scripts.\n     - Added Jest and related dependencies.\n- Updated .vscode/settings.json to support *.test.{cjs,js,mjs,ts} file execution with npm test.\n- Changed pytest HTML coverage output directory.",
    "files": [
      ".vscode/settings.json",
      "jest.config.ts",
      "package.json"
    ]
  },
  {
    "hash": "de84198c161a5d6cad3aeea2e4374943d9bbc692",
    "date": "2025-07-08T09:46:24+07:00",
    "message": "refactor: migrate ProxyDB tests from unittest to pytest\n\n- Replace unittest.TestCase with standalone pytest test functions.\n- Add pytest fixture for ProxyDB setup and teardown.\n- Update assertions to use pytest's assert statement.\n- Remove unused variables and redundant imports.\n- Update test runner to use pytest.main.",
    "files": [
      "tests/ProxyDB_Test.py"
    ]
  },
  {
    "hash": "c6962f3b1ff99609e615ccc930312f806fd0e404",
    "date": "2025-07-08T08:44:25+07:00",
    "message": "refactor(ProxyDB): improve type hints, enhance SQL query safety, and streamline data cleaning",
    "files": [
      "src/ProxyDB.py"
    ]
  },
  {
    "hash": "ab46e1704db1b5047975eee0725e0b6f7de70d94",
    "date": "2025-07-08T08:40:23+07:00",
    "message": "refactor(instructions): remove redundant Node.js guidelines and clarify Python project standards",
    "files": [
      ".github/instructions/all.instructions.md",
      ".github/instructions/python.instructions.md"
    ]
  },
  {
    "hash": "4b3ee858e8c01e9a77bebd156b2946a15ed9e35e",
    "date": "2025-07-08T08:27:56+07:00",
    "message": "refactor(instructions): update Node.js applyTo pattern and improve output directory guidance",
    "files": [
      ".github/instructions/all.instructions.md",
      ".github/instructions/nodejs.instructions.md"
    ]
  },
  {
    "hash": "635d71088790adb7ee3b34fa56295996f0b31949",
    "date": "2025-07-08T08:08:20+07:00",
    "message": "Merge branch 'master' of https://github.com/dimaslanjaka/php-proxy-hunter",
    "files": []
  },
  {
    "hash": "0f9169da6b805ff22dc1fc7119b39e54bfa7028b",
    "date": "2025-07-08T08:07:27+07:00",
    "message": "refactor(cloud_sqlite): migrate to PDO, strict types, PSR-12, and centralized auth\n\n- refactor all PHP endpoints to use PDO instead of SQLite3, strict types, and PSR-12 coding standards\n- centralize authentication logic in config.php with isAuthenticated(); support Authorization header and POST field in production, ?auth= for development (is_debug)\n- update all endpoints (sync.php, fetch.php, fetch-updated.php, delete.php) to use new auth logic and PDO\n- improve database initialization in init.php with always-on schema creation and PDO\n- update README to document all supported authentication methods, clarify production vs. development auth, and show example usage for each endpoint\n- add and organize PHPUnit tests for all endpoints (SyncApiTest, FetchApiTest, FetchUpdatedApiTest, AuthTest)\n- add VSCode launch config for running PHPUnit tests",
    "files": [
      ".vscode/launch.json",
      "cloud_sqlite/config.php",
      "cloud_sqlite/delete.php",
      "cloud_sqlite/fetch-updated.php",
      "cloud_sqlite/fetch.php",
      "cloud_sqlite/init.php",
      "cloud_sqlite/readme.md",
      "cloud_sqlite/sync.php",
      "tests/cloud_sqlite/AuthTest.php",
      "tests/cloud_sqlite/FetchApiTest.php",
      "tests/cloud_sqlite/FetchUpdatedApiTest.php",
      "tests/cloud_sqlite/SyncApiTest.php"
    ]
  },
  {
    "hash": "5d53911f1c958935570678cf878d721c24e84373",
    "date": "2025-07-08T08:05:37+07:00",
    "message": "refactor(cloud_sqlite): migrate to PDO, strict types, PSR-12, and centralized auth\n\n- refactor all PHP endpoints to use PDO instead of SQLite3, strict types, and PSR-12 coding standards\n- centralize authentication logic in config.php with isAuthenticated(); support Authorization header and POST field in production, ?auth= for development (is_debug)\n- update all endpoints (sync.php, fetch.php, fetch-updated.php, delete.php) to use new auth logic and PDO\n- improve database initialization in init.php with always-on schema creation and PDO\n- update README to document all supported authentication methods, clarify production vs. development auth, and show example usage for each endpoint\n- add and organize PHPUnit tests for all endpoints (SyncApiTest, FetchApiTest, FetchUpdatedApiTest, AuthTest)\n- add VSCode launch config for running PHPUnit tests",
    "files": [
      ".vscode/launch.json",
      "cloud_sqlite/config.php",
      "cloud_sqlite/delete.php",
      "cloud_sqlite/fetch-updated.php",
      "cloud_sqlite/fetch.php",
      "cloud_sqlite/init.php",
      "cloud_sqlite/readme.md",
      "cloud_sqlite/sync.php",
      "tests/cloud_sqlite/AuthTest.php",
      "tests/cloud_sqlite/FetchApiTest.php",
      "tests/cloud_sqlite/FetchUpdatedApiTest.php",
      "tests/cloud_sqlite/SyncApiTest.php"
    ]
  },
  {
    "hash": "8c5b9839d303c154f76a926be89ebc52731d714b",
    "date": "2025-07-08T08:04:06+07:00",
    "message": "refactor: enhance debug mode documentation and improve user agent handling",
    "files": [
      "func.php",
      "tests/getSmsTest.php"
    ]
  },
  {
    "hash": "6871ee487b6d493f5b08b7fd1792f47cb258ddb1",
    "date": "2025-07-08T07:54:22+07:00",
    "message": "feat: add package-resolution-updater script and update package.json scripts",
    "files": [
      "package-resolution-updater.mjs",
      "package.json"
    ]
  },
  {
    "hash": "8eaa05fc6f278c9d5ce6e2f673150a4870d071f7",
    "date": "2025-07-08T07:04:25+07:00",
    "message": "refactor: update .gitignore to include additional ignored files and reorganize sections",
    "files": [
      ".gitignore"
    ]
  },
  {
    "hash": "3c69942b3a1c596602cfdaf581bc1aaca7cafc62",
    "date": "2025-07-08T06:48:27+07:00",
    "message": "refactor: reorganize .gitignore for improved clarity and structure",
    "files": [
      ".gitignore"
    ]
  },
  {
    "hash": "31f5ebd600e8f123254580a9151c5aba810a1971",
    "date": "2025-07-08T06:31:11+07:00",
    "message": "refactor: update .gitignore to streamline ignored files and enhance organization",
    "files": [
      ".gitignore"
    ]
  },
  {
    "hash": "bb14c654b2754a99d18c8fb7b2af71d53b3accb4",
    "date": "2025-07-08T06:19:19+07:00",
    "message": "refactor: modularize VPS connector into SSH, SFTP, and config modules\n\n- Move SSH connection logic to src/vps/ssh_client.py (SSHClient)\n- Move SFTP upload/download/delete logic to src/vps/sftp_client.py (SFTPClient)\n- Move SFTP config loader to src/vps/config.py\n- Refactor src/vps/vps_connector.py to use new SSHClient and SFTPClient classes via inheritance\n- Simplify and clean up vps_connector.py, removing duplicate logic\n- Improve code organization and maintainability",
    "files": [
      "src/vps/config.py",
      "src/vps/sftp_client.py",
      "src/vps/ssh_client.py",
      "src/vps/vps_connector.py"
    ]
  },
  {
    "hash": "47891e18b4d27c57959753177b7940ca675dafde",
    "date": "2025-07-08T05:56:52+07:00",
    "message": "feat(vps_connector): add download progress indication for file transfers",
    "files": [
      "src/vps/vps_connector.py"
    ]
  },
  {
    "hash": "e358804dc1fc102ab029705773252d9d0b7f2431",
    "date": "2025-07-08T05:54:29+07:00",
    "message": "feat: add recursive directory download support to VPSConnector\n\n- Enhanced the download method to support recursive downloading of directories from the remote server.\n- Improved _is_remote_dir for better remote directory detection.\n- Updated __main__ example to demonstrate downloading a backups directory.",
    "files": [
      "src/vps/vps_connector.py"
    ]
  },
  {
    "hash": "0d8bbe1cebf31fec688669093f9a02e1e987c44e",
    "date": "2025-07-08T05:35:18+07:00",
    "message": "refactor: add remote_path and local_path to VPSConnector, update usage, and add tests\n\n- Updated VPSConnector to require remote_path and local_path in constructor.\n- Updated all usages in vps_connector.py and vps_manager.py to use new parameters.\n- Replaced sftp_config[\"remote_path\"] with vps.remote_path in file operations.\n- Added tests/vps/test_vps_connector.py with basic constructor and local delete tests.",
    "files": [
      "src/vps/vps_connector.py",
      "src/vps/vps_manager.py",
      "tests/vps/test_vps_connector.py"
    ]
  },
  {
    "hash": "747a3eadf7fa86f2bd31668e501a1d86a716b3e7",
    "date": "2025-07-08T05:32:33+07:00",
    "message": "feat(create-file-hashes): enhance file hashing by processing unique files and including special files",
    "files": [
      "bin/create-file-hashes.cjs"
    ]
  },
  {
    "hash": "bceb387096e69fe0919cbfbad89a459222d875b5",
    "date": "2025-07-08T05:27:11+07:00",
    "message": "fix(create-file-hashes): normalize file paths to use forward slashes in hash output",
    "files": [
      "bin/create-file-hashes.cjs"
    ]
  },
  {
    "hash": "1bfaef02bd0667ed3ea6bd44f2950abb2107795c",
    "date": "2025-07-08T05:18:29+07:00",
    "message": "fix(proxydb): ensure self.db is always defined in the ProxyDB constructor",
    "files": [
      "src/ProxyDB.py"
    ]
  },
  {
    "hash": "3c4518c5948d953911b3b61fa5455d0b5b502442",
    "date": "2025-07-08T05:15:30+07:00",
    "message": "feat(tests): add coverage configuration and update pytest options",
    "files": [
      ".gitignore",
      "pyproject.toml",
      "requirements-dev.txt"
    ]
  },
  {
    "hash": "3bc053e4812bc255b621e1c6764775b198921f0e",
    "date": "2025-07-08T05:14:01+07:00",
    "message": "feat(venv): prefer .venv over venv for virtual environment path",
    "files": [
      "bin/py",
      "bin/py.cmd"
    ]
  }
]